-- Copyright (C) 1991-2005 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--D1_flag_c is flag_reg:inst2|flag_c
D1_flag_c = DFFEAS(D1L8, clk, reset,  ,  ,  ,  ,  ,  );


--D1_flag_z is flag_reg:inst2|flag_z
D1_flag_z = DFFEAS(A1L93, clk, reset,  , D1L9,  ,  ,  ,  );


--D1_flag_v is flag_reg:inst2|flag_v
D1_flag_v = DFFEAS(B1L236, clk, reset,  , D1L9,  ,  ,  ,  );


--D1_flag_s is flag_reg:inst2|flag_s
D1_flag_s = DFFEAS(B1L170, clk, reset,  , D1L9,  ,  ,  ,  );


--J1_q[15] is ar:inst9|q[15]
J1_q[15] = DFFEAS(J1L1, clk, reset,  , H1_rec[0],  ,  ,  ,  );


--J1_q[14] is ar:inst9|q[14]
J1_q[14] = DFFEAS(J1L45, clk, reset,  , H1_rec[0], K1_q[14],  ,  , !H1_rec[1]);


--J1_q[13] is ar:inst9|q[13]
J1_q[13] = DFFEAS(J1L42, clk, reset,  , H1_rec[0], K1_q[13],  ,  , !H1_rec[1]);


--J1_q[12] is ar:inst9|q[12]
J1_q[12] = DFFEAS(J1L39, clk, reset,  , H1_rec[0], K1_q[12],  ,  , !H1_rec[1]);


--J1_q[11] is ar:inst9|q[11]
J1_q[11] = DFFEAS(J1L36, clk, reset,  , H1_rec[0], K1_q[11],  ,  , !H1_rec[1]);


--J1_q[10] is ar:inst9|q[10]
J1_q[10] = DFFEAS(J1L33, clk, reset,  , H1_rec[0], K1_q[10],  ,  , !H1_rec[1]);


--J1_q[9] is ar:inst9|q[9]
J1_q[9] = DFFEAS(J1L30, clk, reset,  , H1_rec[0], K1_q[9],  ,  , !H1_rec[1]);


--J1_q[8] is ar:inst9|q[8]
J1_q[8] = DFFEAS(J1L27, clk, reset,  , H1_rec[0], K1_q[8],  ,  , !H1_rec[1]);


--J1_q[7] is ar:inst9|q[7]
J1_q[7] = DFFEAS(J1L24, clk, reset,  , H1_rec[0], K1_q[7],  ,  , !H1_rec[1]);


--J1_q[6] is ar:inst9|q[6]
J1_q[6] = DFFEAS(J1L21, clk, reset,  , H1_rec[0], K1_q[6],  ,  , !H1_rec[1]);


--J1_q[5] is ar:inst9|q[5]
J1_q[5] = DFFEAS(J1L18, clk, reset,  , H1_rec[0], K1_q[5],  ,  , !H1_rec[1]);


--J1_q[4] is ar:inst9|q[4]
J1_q[4] = DFFEAS(J1L15, clk, reset,  , H1_rec[0], K1_q[4],  ,  , !H1_rec[1]);


--J1_q[3] is ar:inst9|q[3]
J1_q[3] = DFFEAS(J1L12, clk, reset,  , H1_rec[0], K1_q[3],  ,  , !H1_rec[1]);


--J1_q[2] is ar:inst9|q[2]
J1_q[2] = DFFEAS(J1L9, clk, reset,  , H1_rec[0], K1_q[2],  ,  , !H1_rec[1]);


--J1_q[1] is ar:inst9|q[1]
J1_q[1] = DFFEAS(J1L6, clk, reset,  , H1_rec[0], K1_q[1],  ,  , !H1_rec[1]);


--J1_q[0] is ar:inst9|q[0]
J1_q[0] = DFFEAS(J1L2, clk, reset,  , H1_rec[0],  ,  ,  ,  );


--L3_q[15] is reg:inst13|q[15]
L3_q[15] = DFFEAS(B1L170, clk, reset,  , M1L3,  ,  ,  ,  );


--L3_q[14] is reg:inst13|q[14]
L3_q[14] = DFFEAS(J1L45, clk, reset,  , M1L3,  ,  ,  ,  );


--L3_q[13] is reg:inst13|q[13]
L3_q[13] = DFFEAS(J1L42, clk, reset,  , M1L3,  ,  ,  ,  );


--L3_q[12] is reg:inst13|q[12]
L3_q[12] = DFFEAS(J1L39, clk, reset,  , M1L3,  ,  ,  ,  );


--L3_q[11] is reg:inst13|q[11]
L3_q[11] = DFFEAS(J1L36, clk, reset,  , M1L3,  ,  ,  ,  );


--L3_q[10] is reg:inst13|q[10]
L3_q[10] = DFFEAS(J1L33, clk, reset,  , M1L3,  ,  ,  ,  );


--L3_q[9] is reg:inst13|q[9]
L3_q[9] = DFFEAS(J1L30, clk, reset,  , M1L3,  ,  ,  ,  );


--L3_q[8] is reg:inst13|q[8]
L3_q[8] = DFFEAS(J1L27, clk, reset,  , M1L3,  ,  ,  ,  );


--L3_q[7] is reg:inst13|q[7]
L3_q[7] = DFFEAS(J1L24, clk, reset,  , M1L3,  ,  ,  ,  );


--L3_q[6] is reg:inst13|q[6]
L3_q[6] = DFFEAS(J1L21, clk, reset,  , M1L3,  ,  ,  ,  );


--L3_q[5] is reg:inst13|q[5]
L3_q[5] = DFFEAS(J1L18, clk, reset,  , M1L3,  ,  ,  ,  );


--L3_q[4] is reg:inst13|q[4]
L3_q[4] = DFFEAS(J1L15, clk, reset,  , M1L3,  ,  ,  ,  );


--L3_q[3] is reg:inst13|q[3]
L3_q[3] = DFFEAS(J1L12, clk, reset,  , M1L3,  ,  ,  ,  );


--L3_q[2] is reg:inst13|q[2]
L3_q[2] = DFFEAS(J1L9, clk, reset,  , M1L3,  ,  ,  ,  );


--L3_q[1] is reg:inst13|q[1]
L3_q[1] = DFFEAS(J1L6, clk, reset,  , M1L3,  ,  ,  ,  );


--L3_q[0] is reg:inst13|q[0]
L3_q[0] = DFFEAS(B1L120, clk, reset,  , M1L3,  ,  ,  ,  );


--G1_q[15] is ir:inst7|q[15]
G1_q[15] = DFFEAS(A1L37, clk, reset,  , G1L1,  ,  ,  ,  );


--K1_q[15] is pc:inst10|q[15]
K1_q[15] = DFFEAS(B1L170, clk, reset,  , H1L24,  ,  ,  ,  );


--R1L267 is reg_out:inst33|reg_data[15]~3063
R1L267 = K1_q[15] & reg_sel[3] & reg_sel[1] & reg_sel[2];


--R1L268 is reg_out:inst33|reg_data[15]~3064
R1L268 = sel[0] & sel[1];


--R1L269 is reg_out:inst33|reg_data[15]~3065
R1L269 = reg_sel[1] & reg_sel[2];


--R1L270 is reg_out:inst33|reg_data[15]~3066
R1L270 = sel[0] & (reg_sel[0] # !sel[1]);


--R1L271 is reg_out:inst33|reg_data[15]~3067
R1L271 = R1L268 & (reg_sel[3] & R1L269 # !R1L270);


--L6_q[15] is reg:inst16|q[15]
L6_q[15] = DFFEAS(B1L170, clk, reset,  , M1L6,  ,  ,  ,  );


--L10_q[15] is reg:inst20|q[15]
L10_q[15] = DFFEAS(B1L170, clk, reset,  , M1L10,  ,  ,  ,  );


--L2_q[15] is reg:inst12|q[15]
L2_q[15] = DFFEAS(B1L170, clk, reset,  , M1L2,  ,  ,  ,  );


--N1L329 is bus_mux:inst28|alu_sr[15]~1402
N1L329 = H1_sour_reg[2] & (H1_sour_reg[3]) # !H1_sour_reg[2] & (H1_sour_reg[3] & L10_q[15] # !H1_sour_reg[3] & (L2_q[15]));


--L14_q[15] is reg:inst24|q[15]
L14_q[15] = DFFEAS(B1L170, clk, reset,  , M1L14,  ,  ,  ,  );


--N1L330 is bus_mux:inst28|alu_sr[15]~1403
N1L330 = H1_sour_reg[2] & (N1L329 & (L14_q[15]) # !N1L329 & L6_q[15]) # !H1_sour_reg[2] & (N1L329);


--L11_q[15] is reg:inst21|q[15]
L11_q[15] = DFFEAS(B1L170, clk, reset,  , M1L11,  ,  ,  ,  );


--L7_q[15] is reg:inst17|q[15]
L7_q[15] = DFFEAS(B1L170, clk, reset,  , M1L7,  ,  ,  ,  );


--N1L331 is bus_mux:inst28|alu_sr[15]~1404
N1L331 = H1_sour_reg[3] & (H1_sour_reg[2]) # !H1_sour_reg[3] & (H1_sour_reg[2] & L7_q[15] # !H1_sour_reg[2] & (L3_q[15]));


--L15_q[15] is reg:inst25|q[15]
L15_q[15] = DFFEAS(B1L170, clk, reset,  , M1L15,  ,  ,  ,  );


--N1L332 is bus_mux:inst28|alu_sr[15]~1405
N1L332 = H1_sour_reg[3] & (N1L331 & (L15_q[15]) # !N1L331 & L11_q[15]) # !H1_sour_reg[3] & (N1L331);


--L5_q[15] is reg:inst15|q[15]
L5_q[15] = DFFEAS(B1L170, clk, reset,  , M1L5,  ,  ,  ,  );


--L9_q[15] is reg:inst19|q[15]
L9_q[15] = DFFEAS(B1L170, clk, reset,  , M1L9,  ,  ,  ,  );


--L1_q[15] is reg:inst30|q[15]
L1_q[15] = DFFEAS(B1L170, clk, reset,  , M1L1,  ,  ,  ,  );


--N1L333 is bus_mux:inst28|alu_sr[15]~1406
N1L333 = H1_sour_reg[2] & (H1_sour_reg[3]) # !H1_sour_reg[2] & (H1_sour_reg[3] & L9_q[15] # !H1_sour_reg[3] & (L1_q[15]));


--L13_q[15] is reg:inst23|q[15]
L13_q[15] = DFFEAS(B1L170, clk, reset,  , M1L13,  ,  ,  ,  );


--N1L334 is bus_mux:inst28|alu_sr[15]~1407
N1L334 = H1_sour_reg[2] & (N1L333 & (L13_q[15]) # !N1L333 & L5_q[15]) # !H1_sour_reg[2] & (N1L333);


--N1L335 is bus_mux:inst28|alu_sr[15]~1408
N1L335 = H1_sour_reg[0] & (H1_sour_reg[1]) # !H1_sour_reg[0] & (H1_sour_reg[1] & N1L332 # !H1_sour_reg[1] & (N1L334));


--L12_q[15] is reg:inst22|q[15]
L12_q[15] = DFFEAS(B1L170, clk, reset,  , M1L12,  ,  ,  ,  );


--L8_q[15] is reg:inst18|q[15]
L8_q[15] = DFFEAS(B1L170, clk, reset,  , M1L8,  ,  ,  ,  );


--L4_q[15] is reg:inst14|q[15]
L4_q[15] = DFFEAS(B1L170, clk, reset,  , M1L4,  ,  ,  ,  );


--N1L336 is bus_mux:inst28|alu_sr[15]~1409
N1L336 = H1_sour_reg[3] & (H1_sour_reg[2]) # !H1_sour_reg[3] & (H1_sour_reg[2] & L8_q[15] # !H1_sour_reg[2] & (L4_q[15]));


--L16_q[15] is reg:inst26|q[15]
L16_q[15] = DFFEAS(B1L170, clk, reset,  , M1L16,  ,  ,  ,  );


--N1L337 is bus_mux:inst28|alu_sr[15]~1410
N1L337 = H1_sour_reg[3] & (N1L336 & (L16_q[15]) # !N1L336 & L12_q[15]) # !H1_sour_reg[3] & (N1L336);


--N1L338 is bus_mux:inst28|alu_sr[15]~1411
N1L338 = H1_sour_reg[0] & (N1L335 & (N1L337) # !N1L335 & N1L330) # !H1_sour_reg[0] & (N1L335);


--N1L339 is bus_mux:inst28|alu_sr[15]~1412
N1L339 = !H1_alu_in_sel[2] & !H1_alu_in_sel[1];


--N1L229 is bus_mux:inst28|alu_sr[6]~1413
N1L229 = H1_alu_in_sel[0] & H1_alu_in_sel[1] & !H1_alu_in_sel[2];


--N1L340 is bus_mux:inst28|alu_sr[15]~1414
N1L340 = H1_offset[7] & (N1L229 # N1L338 & N1L339) # !H1_offset[7] & N1L338 & N1L339;


--N1L152 is bus_mux:inst28|alu_dr[15]~1216
N1L152 = !H1_alu_in_sel[2] & !H1_alu_in_sel[0];


--N1L153 is bus_mux:inst28|alu_dr[15]~1217
N1L153 = H1_dest_reg[2] & (H1_dest_reg[3]) # !H1_dest_reg[2] & (H1_dest_reg[3] & L10_q[15] # !H1_dest_reg[3] & (L2_q[15]));


--N1L154 is bus_mux:inst28|alu_dr[15]~1218
N1L154 = H1_dest_reg[2] & (N1L153 & (L14_q[15]) # !N1L153 & L6_q[15]) # !H1_dest_reg[2] & (N1L153);


--N1L155 is bus_mux:inst28|alu_dr[15]~1219
N1L155 = H1_dest_reg[3] & (H1_dest_reg[2]) # !H1_dest_reg[3] & (H1_dest_reg[2] & L7_q[15] # !H1_dest_reg[2] & (L3_q[15]));


--N1L156 is bus_mux:inst28|alu_dr[15]~1220
N1L156 = H1_dest_reg[3] & (N1L155 & (L15_q[15]) # !N1L155 & L11_q[15]) # !H1_dest_reg[3] & (N1L155);


--N1L157 is bus_mux:inst28|alu_dr[15]~1221
N1L157 = H1_dest_reg[2] & (H1_dest_reg[3]) # !H1_dest_reg[2] & (H1_dest_reg[3] & L9_q[15] # !H1_dest_reg[3] & (L1_q[15]));


--N1L158 is bus_mux:inst28|alu_dr[15]~1222
N1L158 = H1_dest_reg[2] & (N1L157 & (L13_q[15]) # !N1L157 & L5_q[15]) # !H1_dest_reg[2] & (N1L157);


--N1L159 is bus_mux:inst28|alu_dr[15]~1223
N1L159 = H1_dest_reg[0] & (H1_dest_reg[1]) # !H1_dest_reg[0] & (H1_dest_reg[1] & N1L156 # !H1_dest_reg[1] & (N1L158));


--N1L160 is bus_mux:inst28|alu_dr[15]~1224
N1L160 = H1_dest_reg[3] & (H1_dest_reg[2]) # !H1_dest_reg[3] & (H1_dest_reg[2] & L8_q[15] # !H1_dest_reg[2] & (L4_q[15]));


--N1L161 is bus_mux:inst28|alu_dr[15]~1225
N1L161 = H1_dest_reg[3] & (N1L160 & (L16_q[15]) # !N1L160 & L12_q[15]) # !H1_dest_reg[3] & (N1L160);


--N1L162 is bus_mux:inst28|alu_dr[15]~1226
N1L162 = H1_dest_reg[0] & (N1L159 & (N1L161) # !N1L159 & N1L154) # !H1_dest_reg[0] & (N1L159);


--N1L91 is bus_mux:inst28|alu_dr[9]~1227
N1L91 = H1_alu_in_sel[2] & (H1_alu_in_sel[0] # H1_alu_in_sel[1]) # !H1_alu_in_sel[2] & (!H1_alu_in_sel[1] # !H1_alu_in_sel[0]);


--B1L1 is alu:inst|add~3703
B1L1 = N1L152 & (N1L162 # K1_q[15] & !N1L91) # !N1L152 & (K1_q[15] & !N1L91);


--B1L2 is alu:inst|add~3704
B1L2 = H1_alu_in_sel[2] & H1_alu_in_sel[0] & !H1_alu_in_sel[1];


--B1L3 is alu:inst|add~3705
B1L3 = B1L1 # A1L37 & B1L2;


--R1L272 is reg_out:inst33|reg_data[15]~3068
R1L272 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & B1L3 # !reg_sel[1] & (H1_offset[7]));


--B1L166 is alu:inst|alu_out[15]~5362
B1L166 = H1_alu_func[1] & !H1_alu_func[2];


--B1L167 is alu:inst|alu_out[15]~5363
B1L167 = B1L166 & (N1L340 & (B1L3 # H1_alu_func[0]) # !N1L340 & B1L3 & H1_alu_func[0]);


--B1L4 is alu:inst|add~3706
B1L4 = N1L340 $ H1_alu_func[0];


--L11_q[14] is reg:inst21|q[14]
L11_q[14] = DFFEAS(J1L45, clk, reset,  , M1L11,  ,  ,  ,  );


--L10_q[14] is reg:inst20|q[14]
L10_q[14] = DFFEAS(J1L45, clk, reset,  , M1L10,  ,  ,  ,  );


--L9_q[14] is reg:inst19|q[14]
L9_q[14] = DFFEAS(J1L45, clk, reset,  , M1L9,  ,  ,  ,  );


--N1L318 is bus_mux:inst28|alu_sr[14]~1415
N1L318 = H1_sour_reg[1] & (H1_sour_reg[0]) # !H1_sour_reg[1] & (H1_sour_reg[0] & L10_q[14] # !H1_sour_reg[0] & (L9_q[14]));


--L12_q[14] is reg:inst22|q[14]
L12_q[14] = DFFEAS(J1L45, clk, reset,  , M1L12,  ,  ,  ,  );


--N1L319 is bus_mux:inst28|alu_sr[14]~1416
N1L319 = H1_sour_reg[1] & (N1L318 & (L12_q[14]) # !N1L318 & L11_q[14]) # !H1_sour_reg[1] & (N1L318);


--L6_q[14] is reg:inst16|q[14]
L6_q[14] = DFFEAS(J1L45, clk, reset,  , M1L6,  ,  ,  ,  );


--L7_q[14] is reg:inst17|q[14]
L7_q[14] = DFFEAS(J1L45, clk, reset,  , M1L7,  ,  ,  ,  );


--L5_q[14] is reg:inst15|q[14]
L5_q[14] = DFFEAS(J1L45, clk, reset,  , M1L5,  ,  ,  ,  );


--N1L320 is bus_mux:inst28|alu_sr[14]~1417
N1L320 = H1_sour_reg[0] & (H1_sour_reg[1]) # !H1_sour_reg[0] & (H1_sour_reg[1] & L7_q[14] # !H1_sour_reg[1] & (L5_q[14]));


--L8_q[14] is reg:inst18|q[14]
L8_q[14] = DFFEAS(J1L45, clk, reset,  , M1L8,  ,  ,  ,  );


--N1L321 is bus_mux:inst28|alu_sr[14]~1418
N1L321 = H1_sour_reg[0] & (N1L320 & (L8_q[14]) # !N1L320 & L6_q[14]) # !H1_sour_reg[0] & (N1L320);


--L2_q[14] is reg:inst12|q[14]
L2_q[14] = DFFEAS(J1L45, clk, reset,  , M1L2,  ,  ,  ,  );


--L1_q[14] is reg:inst30|q[14]
L1_q[14] = DFFEAS(J1L45, clk, reset,  , M1L1,  ,  ,  ,  );


--N1L322 is bus_mux:inst28|alu_sr[14]~1419
N1L322 = H1_sour_reg[0] & (H1_sour_reg[1]) # !H1_sour_reg[0] & (H1_sour_reg[1] & L3_q[14] # !H1_sour_reg[1] & (L1_q[14]));


--L4_q[14] is reg:inst14|q[14]
L4_q[14] = DFFEAS(J1L45, clk, reset,  , M1L4,  ,  ,  ,  );


--N1L323 is bus_mux:inst28|alu_sr[14]~1420
N1L323 = H1_sour_reg[0] & (N1L322 & (L4_q[14]) # !N1L322 & L2_q[14]) # !H1_sour_reg[0] & (N1L322);


--N1L324 is bus_mux:inst28|alu_sr[14]~1421
N1L324 = H1_sour_reg[3] & (H1_sour_reg[2]) # !H1_sour_reg[3] & (H1_sour_reg[2] & N1L321 # !H1_sour_reg[2] & (N1L323));


--L15_q[14] is reg:inst25|q[14]
L15_q[14] = DFFEAS(J1L45, clk, reset,  , M1L15,  ,  ,  ,  );


--L14_q[14] is reg:inst24|q[14]
L14_q[14] = DFFEAS(J1L45, clk, reset,  , M1L14,  ,  ,  ,  );


--L13_q[14] is reg:inst23|q[14]
L13_q[14] = DFFEAS(J1L45, clk, reset,  , M1L13,  ,  ,  ,  );


--N1L325 is bus_mux:inst28|alu_sr[14]~1422
N1L325 = H1_sour_reg[1] & (H1_sour_reg[0]) # !H1_sour_reg[1] & (H1_sour_reg[0] & L14_q[14] # !H1_sour_reg[0] & (L13_q[14]));


--L16_q[14] is reg:inst26|q[14]
L16_q[14] = DFFEAS(J1L45, clk, reset,  , M1L16,  ,  ,  ,  );


--N1L326 is bus_mux:inst28|alu_sr[14]~1423
N1L326 = H1_sour_reg[1] & (N1L325 & (L16_q[14]) # !N1L325 & L15_q[14]) # !H1_sour_reg[1] & (N1L325);


--N1L327 is bus_mux:inst28|alu_sr[14]~1424
N1L327 = H1_sour_reg[3] & (N1L324 & (N1L326) # !N1L324 & N1L319) # !H1_sour_reg[3] & (N1L324);


--N1L328 is bus_mux:inst28|alu_sr[14]~1425
N1L328 = H1_offset[7] & (N1L229 # N1L339 & N1L327) # !H1_offset[7] & N1L339 & N1L327;


--B1L5 is alu:inst|add~3707
B1L5 = H1_alu_func[0] $ N1L328;


--N1L142 is bus_mux:inst28|alu_dr[14]~1228
N1L142 = H1_dest_reg[1] & (H1_dest_reg[0]) # !H1_dest_reg[1] & (H1_dest_reg[0] & L10_q[14] # !H1_dest_reg[0] & (L9_q[14]));


--N1L143 is bus_mux:inst28|alu_dr[14]~1229
N1L143 = H1_dest_reg[1] & (N1L142 & (L12_q[14]) # !N1L142 & L11_q[14]) # !H1_dest_reg[1] & (N1L142);


--N1L144 is bus_mux:inst28|alu_dr[14]~1230
N1L144 = H1_dest_reg[0] & (H1_dest_reg[1]) # !H1_dest_reg[0] & (H1_dest_reg[1] & L7_q[14] # !H1_dest_reg[1] & (L5_q[14]));


--N1L145 is bus_mux:inst28|alu_dr[14]~1231
N1L145 = H1_dest_reg[0] & (N1L144 & (L8_q[14]) # !N1L144 & L6_q[14]) # !H1_dest_reg[0] & (N1L144);


--N1L146 is bus_mux:inst28|alu_dr[14]~1232
N1L146 = H1_dest_reg[0] & (H1_dest_reg[1]) # !H1_dest_reg[0] & (H1_dest_reg[1] & L3_q[14] # !H1_dest_reg[1] & (L1_q[14]));


--N1L147 is bus_mux:inst28|alu_dr[14]~1233
N1L147 = H1_dest_reg[0] & (N1L146 & (L4_q[14]) # !N1L146 & L2_q[14]) # !H1_dest_reg[0] & (N1L146);


--N1L148 is bus_mux:inst28|alu_dr[14]~1234
N1L148 = H1_dest_reg[3] & (H1_dest_reg[2]) # !H1_dest_reg[3] & (H1_dest_reg[2] & N1L145 # !H1_dest_reg[2] & (N1L147));


--N1L149 is bus_mux:inst28|alu_dr[14]~1235
N1L149 = H1_dest_reg[1] & (H1_dest_reg[0]) # !H1_dest_reg[1] & (H1_dest_reg[0] & L14_q[14] # !H1_dest_reg[0] & (L13_q[14]));


--N1L150 is bus_mux:inst28|alu_dr[14]~1236
N1L150 = H1_dest_reg[1] & (N1L149 & (L16_q[14]) # !N1L149 & L15_q[14]) # !H1_dest_reg[1] & (N1L149);


--N1L151 is bus_mux:inst28|alu_dr[14]~1237
N1L151 = H1_dest_reg[3] & (N1L148 & (N1L150) # !N1L148 & N1L143) # !H1_dest_reg[3] & (N1L148);


--K1_q[14] is pc:inst10|q[14]
K1_q[14] = DFFEAS(J1L45, clk, reset,  , H1L24,  ,  ,  ,  );


--B1L6 is alu:inst|add~3708
B1L6 = N1L152 & (N1L151 # K1_q[14] & !N1L91) # !N1L152 & (K1_q[14] & !N1L91);


--B1L7 is alu:inst|add~3709
B1L7 = B1L6 # B1L2 & A1L38;


--L7_q[13] is reg:inst17|q[13]
L7_q[13] = DFFEAS(J1L42, clk, reset,  , M1L7,  ,  ,  ,  );


--L11_q[13] is reg:inst21|q[13]
L11_q[13] = DFFEAS(J1L42, clk, reset,  , M1L11,  ,  ,  ,  );


--N1L307 is bus_mux:inst28|alu_sr[13]~1426
N1L307 = H1_sour_reg[2] & (H1_sour_reg[3]) # !H1_sour_reg[2] & (H1_sour_reg[3] & L11_q[13] # !H1_sour_reg[3] & (L3_q[13]));


--L15_q[13] is reg:inst25|q[13]
L15_q[13] = DFFEAS(J1L42, clk, reset,  , M1L15,  ,  ,  ,  );


--N1L308 is bus_mux:inst28|alu_sr[13]~1427
N1L308 = H1_sour_reg[2] & (N1L307 & (L15_q[13]) # !N1L307 & L7_q[13]) # !H1_sour_reg[2] & (N1L307);


--L10_q[13] is reg:inst20|q[13]
L10_q[13] = DFFEAS(J1L42, clk, reset,  , M1L10,  ,  ,  ,  );


--L6_q[13] is reg:inst16|q[13]
L6_q[13] = DFFEAS(J1L42, clk, reset,  , M1L6,  ,  ,  ,  );


--L2_q[13] is reg:inst12|q[13]
L2_q[13] = DFFEAS(J1L42, clk, reset,  , M1L2,  ,  ,  ,  );


--N1L309 is bus_mux:inst28|alu_sr[13]~1428
N1L309 = H1_sour_reg[3] & (H1_sour_reg[2]) # !H1_sour_reg[3] & (H1_sour_reg[2] & L6_q[13] # !H1_sour_reg[2] & (L2_q[13]));


--L14_q[13] is reg:inst24|q[13]
L14_q[13] = DFFEAS(J1L42, clk, reset,  , M1L14,  ,  ,  ,  );


--N1L310 is bus_mux:inst28|alu_sr[13]~1429
N1L310 = H1_sour_reg[3] & (N1L309 & (L14_q[13]) # !N1L309 & L10_q[13]) # !H1_sour_reg[3] & (N1L309);


--L9_q[13] is reg:inst19|q[13]
L9_q[13] = DFFEAS(J1L42, clk, reset,  , M1L9,  ,  ,  ,  );


--L5_q[13] is reg:inst15|q[13]
L5_q[13] = DFFEAS(J1L42, clk, reset,  , M1L5,  ,  ,  ,  );


--L1_q[13] is reg:inst30|q[13]
L1_q[13] = DFFEAS(J1L42, clk, reset,  , M1L1,  ,  ,  ,  );


--N1L311 is bus_mux:inst28|alu_sr[13]~1430
N1L311 = H1_sour_reg[3] & (H1_sour_reg[2]) # !H1_sour_reg[3] & (H1_sour_reg[2] & L5_q[13] # !H1_sour_reg[2] & (L1_q[13]));


--L13_q[13] is reg:inst23|q[13]
L13_q[13] = DFFEAS(J1L42, clk, reset,  , M1L13,  ,  ,  ,  );


--N1L312 is bus_mux:inst28|alu_sr[13]~1431
N1L312 = H1_sour_reg[3] & (N1L311 & (L13_q[13]) # !N1L311 & L9_q[13]) # !H1_sour_reg[3] & (N1L311);


--N1L313 is bus_mux:inst28|alu_sr[13]~1432
N1L313 = H1_sour_reg[1] & (H1_sour_reg[0]) # !H1_sour_reg[1] & (H1_sour_reg[0] & N1L310 # !H1_sour_reg[0] & (N1L312));


--L8_q[13] is reg:inst18|q[13]
L8_q[13] = DFFEAS(J1L42, clk, reset,  , M1L8,  ,  ,  ,  );


--L12_q[13] is reg:inst22|q[13]
L12_q[13] = DFFEAS(J1L42, clk, reset,  , M1L12,  ,  ,  ,  );


--L4_q[13] is reg:inst14|q[13]
L4_q[13] = DFFEAS(J1L42, clk, reset,  , M1L4,  ,  ,  ,  );


--N1L314 is bus_mux:inst28|alu_sr[13]~1433
N1L314 = H1_sour_reg[2] & (H1_sour_reg[3]) # !H1_sour_reg[2] & (H1_sour_reg[3] & L12_q[13] # !H1_sour_reg[3] & (L4_q[13]));


--L16_q[13] is reg:inst26|q[13]
L16_q[13] = DFFEAS(J1L42, clk, reset,  , M1L16,  ,  ,  ,  );


--N1L315 is bus_mux:inst28|alu_sr[13]~1434
N1L315 = H1_sour_reg[2] & (N1L314 & (L16_q[13]) # !N1L314 & L8_q[13]) # !H1_sour_reg[2] & (N1L314);


--N1L316 is bus_mux:inst28|alu_sr[13]~1435
N1L316 = H1_sour_reg[1] & (N1L313 & (N1L315) # !N1L313 & N1L308) # !H1_sour_reg[1] & (N1L313);


--N1L317 is bus_mux:inst28|alu_sr[13]~1436
N1L317 = H1_offset[7] & (N1L229 # N1L339 & N1L316) # !H1_offset[7] & N1L339 & N1L316;


--B1L8 is alu:inst|add~3710
B1L8 = H1_alu_func[0] $ N1L317;


--N1L132 is bus_mux:inst28|alu_dr[13]~1238
N1L132 = H1_dest_reg[2] & (H1_dest_reg[3]) # !H1_dest_reg[2] & (H1_dest_reg[3] & L11_q[13] # !H1_dest_reg[3] & (L3_q[13]));


--N1L133 is bus_mux:inst28|alu_dr[13]~1239
N1L133 = H1_dest_reg[2] & (N1L132 & (L15_q[13]) # !N1L132 & L7_q[13]) # !H1_dest_reg[2] & (N1L132);


--N1L134 is bus_mux:inst28|alu_dr[13]~1240
N1L134 = H1_dest_reg[3] & (H1_dest_reg[2]) # !H1_dest_reg[3] & (H1_dest_reg[2] & L6_q[13] # !H1_dest_reg[2] & (L2_q[13]));


--N1L135 is bus_mux:inst28|alu_dr[13]~1241
N1L135 = H1_dest_reg[3] & (N1L134 & (L14_q[13]) # !N1L134 & L10_q[13]) # !H1_dest_reg[3] & (N1L134);


--N1L136 is bus_mux:inst28|alu_dr[13]~1242
N1L136 = H1_dest_reg[3] & (H1_dest_reg[2]) # !H1_dest_reg[3] & (H1_dest_reg[2] & L5_q[13] # !H1_dest_reg[2] & (L1_q[13]));


--N1L137 is bus_mux:inst28|alu_dr[13]~1243
N1L137 = H1_dest_reg[3] & (N1L136 & (L13_q[13]) # !N1L136 & L9_q[13]) # !H1_dest_reg[3] & (N1L136);


--N1L138 is bus_mux:inst28|alu_dr[13]~1244
N1L138 = H1_dest_reg[1] & (H1_dest_reg[0]) # !H1_dest_reg[1] & (H1_dest_reg[0] & N1L135 # !H1_dest_reg[0] & (N1L137));


--N1L139 is bus_mux:inst28|alu_dr[13]~1245
N1L139 = H1_dest_reg[2] & (H1_dest_reg[3]) # !H1_dest_reg[2] & (H1_dest_reg[3] & L12_q[13] # !H1_dest_reg[3] & (L4_q[13]));


--N1L140 is bus_mux:inst28|alu_dr[13]~1246
N1L140 = H1_dest_reg[2] & (N1L139 & (L16_q[13]) # !N1L139 & L8_q[13]) # !H1_dest_reg[2] & (N1L139);


--N1L141 is bus_mux:inst28|alu_dr[13]~1247
N1L141 = H1_dest_reg[1] & (N1L138 & (N1L140) # !N1L138 & N1L133) # !H1_dest_reg[1] & (N1L138);


--K1_q[13] is pc:inst10|q[13]
K1_q[13] = DFFEAS(J1L42, clk, reset,  , H1L24,  ,  ,  ,  );


--B1L9 is alu:inst|add~3711
B1L9 = N1L152 & (N1L141 # K1_q[13] & !N1L91) # !N1L152 & (K1_q[13] & !N1L91);


--B1L10 is alu:inst|add~3712
B1L10 = B1L9 # B1L2 & A1L39;


--L7_q[12] is reg:inst17|q[12]
L7_q[12] = DFFEAS(J1L39, clk, reset,  , M1L7,  ,  ,  ,  );


--L6_q[12] is reg:inst16|q[12]
L6_q[12] = DFFEAS(J1L39, clk, reset,  , M1L6,  ,  ,  ,  );


--L5_q[12] is reg:inst15|q[12]
L5_q[12] = DFFEAS(J1L39, clk, reset,  , M1L5,  ,  ,  ,  );


--N1L296 is bus_mux:inst28|alu_sr[12]~1437
N1L296 = H1_sour_reg[1] & (H1_sour_reg[0]) # !H1_sour_reg[1] & (H1_sour_reg[0] & L6_q[12] # !H1_sour_reg[0] & (L5_q[12]));


--L8_q[12] is reg:inst18|q[12]
L8_q[12] = DFFEAS(J1L39, clk, reset,  , M1L8,  ,  ,  ,  );


--N1L297 is bus_mux:inst28|alu_sr[12]~1438
N1L297 = H1_sour_reg[1] & (N1L296 & (L8_q[12]) # !N1L296 & L7_q[12]) # !H1_sour_reg[1] & (N1L296);


--L10_q[12] is reg:inst20|q[12]
L10_q[12] = DFFEAS(J1L39, clk, reset,  , M1L10,  ,  ,  ,  );


--L11_q[12] is reg:inst21|q[12]
L11_q[12] = DFFEAS(J1L39, clk, reset,  , M1L11,  ,  ,  ,  );


--L9_q[12] is reg:inst19|q[12]
L9_q[12] = DFFEAS(J1L39, clk, reset,  , M1L9,  ,  ,  ,  );


--N1L298 is bus_mux:inst28|alu_sr[12]~1439
N1L298 = H1_sour_reg[0] & (H1_sour_reg[1]) # !H1_sour_reg[0] & (H1_sour_reg[1] & L11_q[12] # !H1_sour_reg[1] & (L9_q[12]));


--L12_q[12] is reg:inst22|q[12]
L12_q[12] = DFFEAS(J1L39, clk, reset,  , M1L12,  ,  ,  ,  );


--N1L299 is bus_mux:inst28|alu_sr[12]~1440
N1L299 = H1_sour_reg[0] & (N1L298 & (L12_q[12]) # !N1L298 & L10_q[12]) # !H1_sour_reg[0] & (N1L298);


--L2_q[12] is reg:inst12|q[12]
L2_q[12] = DFFEAS(J1L39, clk, reset,  , M1L2,  ,  ,  ,  );


--L1_q[12] is reg:inst30|q[12]
L1_q[12] = DFFEAS(J1L39, clk, reset,  , M1L1,  ,  ,  ,  );


--N1L300 is bus_mux:inst28|alu_sr[12]~1441
N1L300 = H1_sour_reg[1] & (H1_sour_reg[0]) # !H1_sour_reg[1] & (H1_sour_reg[0] & L2_q[12] # !H1_sour_reg[0] & (L1_q[12]));


--L4_q[12] is reg:inst14|q[12]
L4_q[12] = DFFEAS(J1L39, clk, reset,  , M1L4,  ,  ,  ,  );


--N1L301 is bus_mux:inst28|alu_sr[12]~1442
N1L301 = H1_sour_reg[1] & (N1L300 & (L4_q[12]) # !N1L300 & L3_q[12]) # !H1_sour_reg[1] & (N1L300);


--N1L302 is bus_mux:inst28|alu_sr[12]~1443
N1L302 = H1_sour_reg[2] & (H1_sour_reg[3]) # !H1_sour_reg[2] & (H1_sour_reg[3] & N1L299 # !H1_sour_reg[3] & (N1L301));


--L14_q[12] is reg:inst24|q[12]
L14_q[12] = DFFEAS(J1L39, clk, reset,  , M1L14,  ,  ,  ,  );


--L15_q[12] is reg:inst25|q[12]
L15_q[12] = DFFEAS(J1L39, clk, reset,  , M1L15,  ,  ,  ,  );


--L13_q[12] is reg:inst23|q[12]
L13_q[12] = DFFEAS(J1L39, clk, reset,  , M1L13,  ,  ,  ,  );


--N1L303 is bus_mux:inst28|alu_sr[12]~1444
N1L303 = H1_sour_reg[0] & (H1_sour_reg[1]) # !H1_sour_reg[0] & (H1_sour_reg[1] & L15_q[12] # !H1_sour_reg[1] & (L13_q[12]));


--L16_q[12] is reg:inst26|q[12]
L16_q[12] = DFFEAS(J1L39, clk, reset,  , M1L16,  ,  ,  ,  );


--N1L304 is bus_mux:inst28|alu_sr[12]~1445
N1L304 = H1_sour_reg[0] & (N1L303 & (L16_q[12]) # !N1L303 & L14_q[12]) # !H1_sour_reg[0] & (N1L303);


--N1L305 is bus_mux:inst28|alu_sr[12]~1446
N1L305 = H1_sour_reg[2] & (N1L302 & (N1L304) # !N1L302 & N1L297) # !H1_sour_reg[2] & (N1L302);


--N1L306 is bus_mux:inst28|alu_sr[12]~1447
N1L306 = H1_offset[7] & (N1L229 # N1L339 & N1L305) # !H1_offset[7] & N1L339 & N1L305;


--B1L11 is alu:inst|add~3713
B1L11 = H1_alu_func[0] $ N1L306;


--N1L122 is bus_mux:inst28|alu_dr[12]~1248
N1L122 = H1_dest_reg[1] & (H1_dest_reg[0]) # !H1_dest_reg[1] & (H1_dest_reg[0] & L6_q[12] # !H1_dest_reg[0] & (L5_q[12]));


--N1L123 is bus_mux:inst28|alu_dr[12]~1249
N1L123 = H1_dest_reg[1] & (N1L122 & (L8_q[12]) # !N1L122 & L7_q[12]) # !H1_dest_reg[1] & (N1L122);


--N1L124 is bus_mux:inst28|alu_dr[12]~1250
N1L124 = H1_dest_reg[0] & (H1_dest_reg[1]) # !H1_dest_reg[0] & (H1_dest_reg[1] & L11_q[12] # !H1_dest_reg[1] & (L9_q[12]));


--N1L125 is bus_mux:inst28|alu_dr[12]~1251
N1L125 = H1_dest_reg[0] & (N1L124 & (L12_q[12]) # !N1L124 & L10_q[12]) # !H1_dest_reg[0] & (N1L124);


--N1L126 is bus_mux:inst28|alu_dr[12]~1252
N1L126 = H1_dest_reg[1] & (H1_dest_reg[0]) # !H1_dest_reg[1] & (H1_dest_reg[0] & L2_q[12] # !H1_dest_reg[0] & (L1_q[12]));


--N1L127 is bus_mux:inst28|alu_dr[12]~1253
N1L127 = H1_dest_reg[1] & (N1L126 & (L4_q[12]) # !N1L126 & L3_q[12]) # !H1_dest_reg[1] & (N1L126);


--N1L128 is bus_mux:inst28|alu_dr[12]~1254
N1L128 = H1_dest_reg[2] & (H1_dest_reg[3]) # !H1_dest_reg[2] & (H1_dest_reg[3] & N1L125 # !H1_dest_reg[3] & (N1L127));


--N1L129 is bus_mux:inst28|alu_dr[12]~1255
N1L129 = H1_dest_reg[0] & (H1_dest_reg[1]) # !H1_dest_reg[0] & (H1_dest_reg[1] & L15_q[12] # !H1_dest_reg[1] & (L13_q[12]));


--N1L130 is bus_mux:inst28|alu_dr[12]~1256
N1L130 = H1_dest_reg[0] & (N1L129 & (L16_q[12]) # !N1L129 & L14_q[12]) # !H1_dest_reg[0] & (N1L129);


--N1L131 is bus_mux:inst28|alu_dr[12]~1257
N1L131 = H1_dest_reg[2] & (N1L128 & (N1L130) # !N1L128 & N1L123) # !H1_dest_reg[2] & (N1L128);


--K1_q[12] is pc:inst10|q[12]
K1_q[12] = DFFEAS(J1L39, clk, reset,  , H1L24,  ,  ,  ,  );


--B1L12 is alu:inst|add~3714
B1L12 = N1L152 & (N1L131 # K1_q[12] & !N1L91) # !N1L152 & (K1_q[12] & !N1L91);


--B1L13 is alu:inst|add~3715
B1L13 = B1L12 # B1L2 & A1L40;


--L6_q[11] is reg:inst16|q[11]
L6_q[11] = DFFEAS(J1L36, clk, reset,  , M1L6,  ,  ,  ,  );


--L10_q[11] is reg:inst20|q[11]
L10_q[11] = DFFEAS(J1L36, clk, reset,  , M1L10,  ,  ,  ,  );


--L2_q[11] is reg:inst12|q[11]
L2_q[11] = DFFEAS(J1L36, clk, reset,  , M1L2,  ,  ,  ,  );


--N1L285 is bus_mux:inst28|alu_sr[11]~1448
N1L285 = H1_sour_reg[2] & (H1_sour_reg[3]) # !H1_sour_reg[2] & (H1_sour_reg[3] & L10_q[11] # !H1_sour_reg[3] & (L2_q[11]));


--L14_q[11] is reg:inst24|q[11]
L14_q[11] = DFFEAS(J1L36, clk, reset,  , M1L14,  ,  ,  ,  );


--N1L286 is bus_mux:inst28|alu_sr[11]~1449
N1L286 = H1_sour_reg[2] & (N1L285 & (L14_q[11]) # !N1L285 & L6_q[11]) # !H1_sour_reg[2] & (N1L285);


--L11_q[11] is reg:inst21|q[11]
L11_q[11] = DFFEAS(J1L36, clk, reset,  , M1L11,  ,  ,  ,  );


--L7_q[11] is reg:inst17|q[11]
L7_q[11] = DFFEAS(J1L36, clk, reset,  , M1L7,  ,  ,  ,  );


--N1L287 is bus_mux:inst28|alu_sr[11]~1450
N1L287 = H1_sour_reg[3] & (H1_sour_reg[2]) # !H1_sour_reg[3] & (H1_sour_reg[2] & L7_q[11] # !H1_sour_reg[2] & (L3_q[11]));


--L15_q[11] is reg:inst25|q[11]
L15_q[11] = DFFEAS(J1L36, clk, reset,  , M1L15,  ,  ,  ,  );


--N1L288 is bus_mux:inst28|alu_sr[11]~1451
N1L288 = H1_sour_reg[3] & (N1L287 & (L15_q[11]) # !N1L287 & L11_q[11]) # !H1_sour_reg[3] & (N1L287);


--L5_q[11] is reg:inst15|q[11]
L5_q[11] = DFFEAS(J1L36, clk, reset,  , M1L5,  ,  ,  ,  );


--L9_q[11] is reg:inst19|q[11]
L9_q[11] = DFFEAS(J1L36, clk, reset,  , M1L9,  ,  ,  ,  );


--L1_q[11] is reg:inst30|q[11]
L1_q[11] = DFFEAS(J1L36, clk, reset,  , M1L1,  ,  ,  ,  );


--N1L289 is bus_mux:inst28|alu_sr[11]~1452
N1L289 = H1_sour_reg[2] & (H1_sour_reg[3]) # !H1_sour_reg[2] & (H1_sour_reg[3] & L9_q[11] # !H1_sour_reg[3] & (L1_q[11]));


--L13_q[11] is reg:inst23|q[11]
L13_q[11] = DFFEAS(J1L36, clk, reset,  , M1L13,  ,  ,  ,  );


--N1L290 is bus_mux:inst28|alu_sr[11]~1453
N1L290 = H1_sour_reg[2] & (N1L289 & (L13_q[11]) # !N1L289 & L5_q[11]) # !H1_sour_reg[2] & (N1L289);


--N1L291 is bus_mux:inst28|alu_sr[11]~1454
N1L291 = H1_sour_reg[0] & (H1_sour_reg[1]) # !H1_sour_reg[0] & (H1_sour_reg[1] & N1L288 # !H1_sour_reg[1] & (N1L290));


--L12_q[11] is reg:inst22|q[11]
L12_q[11] = DFFEAS(J1L36, clk, reset,  , M1L12,  ,  ,  ,  );


--L8_q[11] is reg:inst18|q[11]
L8_q[11] = DFFEAS(J1L36, clk, reset,  , M1L8,  ,  ,  ,  );


--L4_q[11] is reg:inst14|q[11]
L4_q[11] = DFFEAS(J1L36, clk, reset,  , M1L4,  ,  ,  ,  );


--N1L292 is bus_mux:inst28|alu_sr[11]~1455
N1L292 = H1_sour_reg[3] & (H1_sour_reg[2]) # !H1_sour_reg[3] & (H1_sour_reg[2] & L8_q[11] # !H1_sour_reg[2] & (L4_q[11]));


--L16_q[11] is reg:inst26|q[11]
L16_q[11] = DFFEAS(J1L36, clk, reset,  , M1L16,  ,  ,  ,  );


--N1L293 is bus_mux:inst28|alu_sr[11]~1456
N1L293 = H1_sour_reg[3] & (N1L292 & (L16_q[11]) # !N1L292 & L12_q[11]) # !H1_sour_reg[3] & (N1L292);


--N1L294 is bus_mux:inst28|alu_sr[11]~1457
N1L294 = H1_sour_reg[0] & (N1L291 & (N1L293) # !N1L291 & N1L286) # !H1_sour_reg[0] & (N1L291);


--N1L295 is bus_mux:inst28|alu_sr[11]~1458
N1L295 = H1_offset[7] & (N1L229 # N1L339 & N1L294) # !H1_offset[7] & N1L339 & N1L294;


--B1L14 is alu:inst|add~3716
B1L14 = H1_alu_func[0] $ N1L295;


--N1L112 is bus_mux:inst28|alu_dr[11]~1258
N1L112 = H1_dest_reg[2] & (H1_dest_reg[3]) # !H1_dest_reg[2] & (H1_dest_reg[3] & L10_q[11] # !H1_dest_reg[3] & (L2_q[11]));


--N1L113 is bus_mux:inst28|alu_dr[11]~1259
N1L113 = H1_dest_reg[2] & (N1L112 & (L14_q[11]) # !N1L112 & L6_q[11]) # !H1_dest_reg[2] & (N1L112);


--N1L114 is bus_mux:inst28|alu_dr[11]~1260
N1L114 = H1_dest_reg[3] & (H1_dest_reg[2]) # !H1_dest_reg[3] & (H1_dest_reg[2] & L7_q[11] # !H1_dest_reg[2] & (L3_q[11]));


--N1L115 is bus_mux:inst28|alu_dr[11]~1261
N1L115 = H1_dest_reg[3] & (N1L114 & (L15_q[11]) # !N1L114 & L11_q[11]) # !H1_dest_reg[3] & (N1L114);


--N1L116 is bus_mux:inst28|alu_dr[11]~1262
N1L116 = H1_dest_reg[2] & (H1_dest_reg[3]) # !H1_dest_reg[2] & (H1_dest_reg[3] & L9_q[11] # !H1_dest_reg[3] & (L1_q[11]));


--N1L117 is bus_mux:inst28|alu_dr[11]~1263
N1L117 = H1_dest_reg[2] & (N1L116 & (L13_q[11]) # !N1L116 & L5_q[11]) # !H1_dest_reg[2] & (N1L116);


--N1L118 is bus_mux:inst28|alu_dr[11]~1264
N1L118 = H1_dest_reg[0] & (H1_dest_reg[1]) # !H1_dest_reg[0] & (H1_dest_reg[1] & N1L115 # !H1_dest_reg[1] & (N1L117));


--N1L119 is bus_mux:inst28|alu_dr[11]~1265
N1L119 = H1_dest_reg[3] & (H1_dest_reg[2]) # !H1_dest_reg[3] & (H1_dest_reg[2] & L8_q[11] # !H1_dest_reg[2] & (L4_q[11]));


--N1L120 is bus_mux:inst28|alu_dr[11]~1266
N1L120 = H1_dest_reg[3] & (N1L119 & (L16_q[11]) # !N1L119 & L12_q[11]) # !H1_dest_reg[3] & (N1L119);


--N1L121 is bus_mux:inst28|alu_dr[11]~1267
N1L121 = H1_dest_reg[0] & (N1L118 & (N1L120) # !N1L118 & N1L113) # !H1_dest_reg[0] & (N1L118);


--K1_q[11] is pc:inst10|q[11]
K1_q[11] = DFFEAS(J1L36, clk, reset,  , H1L24,  ,  ,  ,  );


--B1L15 is alu:inst|add~3717
B1L15 = N1L152 & (N1L121 # K1_q[11] & !N1L91) # !N1L152 & (K1_q[11] & !N1L91);


--B1L16 is alu:inst|add~3718
B1L16 = B1L15 # B1L2 & A1L41;


--L11_q[10] is reg:inst21|q[10]
L11_q[10] = DFFEAS(J1L33, clk, reset,  , M1L11,  ,  ,  ,  );


--L10_q[10] is reg:inst20|q[10]
L10_q[10] = DFFEAS(J1L33, clk, reset,  , M1L10,  ,  ,  ,  );


--L9_q[10] is reg:inst19|q[10]
L9_q[10] = DFFEAS(J1L33, clk, reset,  , M1L9,  ,  ,  ,  );


--N1L274 is bus_mux:inst28|alu_sr[10]~1459
N1L274 = H1_sour_reg[1] & (H1_sour_reg[0]) # !H1_sour_reg[1] & (H1_sour_reg[0] & L10_q[10] # !H1_sour_reg[0] & (L9_q[10]));


--L12_q[10] is reg:inst22|q[10]
L12_q[10] = DFFEAS(J1L33, clk, reset,  , M1L12,  ,  ,  ,  );


--N1L275 is bus_mux:inst28|alu_sr[10]~1460
N1L275 = H1_sour_reg[1] & (N1L274 & (L12_q[10]) # !N1L274 & L11_q[10]) # !H1_sour_reg[1] & (N1L274);


--L6_q[10] is reg:inst16|q[10]
L6_q[10] = DFFEAS(J1L33, clk, reset,  , M1L6,  ,  ,  ,  );


--L7_q[10] is reg:inst17|q[10]
L7_q[10] = DFFEAS(J1L33, clk, reset,  , M1L7,  ,  ,  ,  );


--L5_q[10] is reg:inst15|q[10]
L5_q[10] = DFFEAS(J1L33, clk, reset,  , M1L5,  ,  ,  ,  );


--N1L276 is bus_mux:inst28|alu_sr[10]~1461
N1L276 = H1_sour_reg[0] & (H1_sour_reg[1]) # !H1_sour_reg[0] & (H1_sour_reg[1] & L7_q[10] # !H1_sour_reg[1] & (L5_q[10]));


--L8_q[10] is reg:inst18|q[10]
L8_q[10] = DFFEAS(J1L33, clk, reset,  , M1L8,  ,  ,  ,  );


--N1L277 is bus_mux:inst28|alu_sr[10]~1462
N1L277 = H1_sour_reg[0] & (N1L276 & (L8_q[10]) # !N1L276 & L6_q[10]) # !H1_sour_reg[0] & (N1L276);


--L2_q[10] is reg:inst12|q[10]
L2_q[10] = DFFEAS(J1L33, clk, reset,  , M1L2,  ,  ,  ,  );


--L1_q[10] is reg:inst30|q[10]
L1_q[10] = DFFEAS(J1L33, clk, reset,  , M1L1,  ,  ,  ,  );


--N1L278 is bus_mux:inst28|alu_sr[10]~1463
N1L278 = H1_sour_reg[0] & (H1_sour_reg[1]) # !H1_sour_reg[0] & (H1_sour_reg[1] & L3_q[10] # !H1_sour_reg[1] & (L1_q[10]));


--L4_q[10] is reg:inst14|q[10]
L4_q[10] = DFFEAS(J1L33, clk, reset,  , M1L4,  ,  ,  ,  );


--N1L279 is bus_mux:inst28|alu_sr[10]~1464
N1L279 = H1_sour_reg[0] & (N1L278 & (L4_q[10]) # !N1L278 & L2_q[10]) # !H1_sour_reg[0] & (N1L278);


--N1L280 is bus_mux:inst28|alu_sr[10]~1465
N1L280 = H1_sour_reg[3] & (H1_sour_reg[2]) # !H1_sour_reg[3] & (H1_sour_reg[2] & N1L277 # !H1_sour_reg[2] & (N1L279));


--L15_q[10] is reg:inst25|q[10]
L15_q[10] = DFFEAS(J1L33, clk, reset,  , M1L15,  ,  ,  ,  );


--L14_q[10] is reg:inst24|q[10]
L14_q[10] = DFFEAS(J1L33, clk, reset,  , M1L14,  ,  ,  ,  );


--L13_q[10] is reg:inst23|q[10]
L13_q[10] = DFFEAS(J1L33, clk, reset,  , M1L13,  ,  ,  ,  );


--N1L281 is bus_mux:inst28|alu_sr[10]~1466
N1L281 = H1_sour_reg[1] & (H1_sour_reg[0]) # !H1_sour_reg[1] & (H1_sour_reg[0] & L14_q[10] # !H1_sour_reg[0] & (L13_q[10]));


--L16_q[10] is reg:inst26|q[10]
L16_q[10] = DFFEAS(J1L33, clk, reset,  , M1L16,  ,  ,  ,  );


--N1L282 is bus_mux:inst28|alu_sr[10]~1467
N1L282 = H1_sour_reg[1] & (N1L281 & (L16_q[10]) # !N1L281 & L15_q[10]) # !H1_sour_reg[1] & (N1L281);


--N1L283 is bus_mux:inst28|alu_sr[10]~1468
N1L283 = H1_sour_reg[3] & (N1L280 & (N1L282) # !N1L280 & N1L275) # !H1_sour_reg[3] & (N1L280);


--N1L284 is bus_mux:inst28|alu_sr[10]~1469
N1L284 = H1_offset[7] & (N1L229 # N1L339 & N1L283) # !H1_offset[7] & N1L339 & N1L283;


--B1L17 is alu:inst|add~3719
B1L17 = H1_alu_func[0] $ N1L284;


--N1L102 is bus_mux:inst28|alu_dr[10]~1268
N1L102 = H1_dest_reg[1] & (H1_dest_reg[0]) # !H1_dest_reg[1] & (H1_dest_reg[0] & L10_q[10] # !H1_dest_reg[0] & (L9_q[10]));


--N1L103 is bus_mux:inst28|alu_dr[10]~1269
N1L103 = H1_dest_reg[1] & (N1L102 & (L12_q[10]) # !N1L102 & L11_q[10]) # !H1_dest_reg[1] & (N1L102);


--N1L104 is bus_mux:inst28|alu_dr[10]~1270
N1L104 = H1_dest_reg[0] & (H1_dest_reg[1]) # !H1_dest_reg[0] & (H1_dest_reg[1] & L7_q[10] # !H1_dest_reg[1] & (L5_q[10]));


--N1L105 is bus_mux:inst28|alu_dr[10]~1271
N1L105 = H1_dest_reg[0] & (N1L104 & (L8_q[10]) # !N1L104 & L6_q[10]) # !H1_dest_reg[0] & (N1L104);


--N1L106 is bus_mux:inst28|alu_dr[10]~1272
N1L106 = H1_dest_reg[0] & (H1_dest_reg[1]) # !H1_dest_reg[0] & (H1_dest_reg[1] & L3_q[10] # !H1_dest_reg[1] & (L1_q[10]));


--N1L107 is bus_mux:inst28|alu_dr[10]~1273
N1L107 = H1_dest_reg[0] & (N1L106 & (L4_q[10]) # !N1L106 & L2_q[10]) # !H1_dest_reg[0] & (N1L106);


--N1L108 is bus_mux:inst28|alu_dr[10]~1274
N1L108 = H1_dest_reg[3] & (H1_dest_reg[2]) # !H1_dest_reg[3] & (H1_dest_reg[2] & N1L105 # !H1_dest_reg[2] & (N1L107));


--N1L109 is bus_mux:inst28|alu_dr[10]~1275
N1L109 = H1_dest_reg[1] & (H1_dest_reg[0]) # !H1_dest_reg[1] & (H1_dest_reg[0] & L14_q[10] # !H1_dest_reg[0] & (L13_q[10]));


--N1L110 is bus_mux:inst28|alu_dr[10]~1276
N1L110 = H1_dest_reg[1] & (N1L109 & (L16_q[10]) # !N1L109 & L15_q[10]) # !H1_dest_reg[1] & (N1L109);


--N1L111 is bus_mux:inst28|alu_dr[10]~1277
N1L111 = H1_dest_reg[3] & (N1L108 & (N1L110) # !N1L108 & N1L103) # !H1_dest_reg[3] & (N1L108);


--K1_q[10] is pc:inst10|q[10]
K1_q[10] = DFFEAS(J1L33, clk, reset,  , H1L24,  ,  ,  ,  );


--B1L18 is alu:inst|add~3720
B1L18 = N1L152 & (N1L111 # K1_q[10] & !N1L91) # !N1L152 & (K1_q[10] & !N1L91);


--B1L19 is alu:inst|add~3721
B1L19 = B1L18 # B1L2 & A1L42;


--L7_q[9] is reg:inst17|q[9]
L7_q[9] = DFFEAS(J1L30, clk, reset,  , M1L7,  ,  ,  ,  );


--L11_q[9] is reg:inst21|q[9]
L11_q[9] = DFFEAS(J1L30, clk, reset,  , M1L11,  ,  ,  ,  );


--N1L263 is bus_mux:inst28|alu_sr[9]~1470
N1L263 = H1_sour_reg[2] & (H1_sour_reg[3]) # !H1_sour_reg[2] & (H1_sour_reg[3] & L11_q[9] # !H1_sour_reg[3] & (L3_q[9]));


--L15_q[9] is reg:inst25|q[9]
L15_q[9] = DFFEAS(J1L30, clk, reset,  , M1L15,  ,  ,  ,  );


--N1L264 is bus_mux:inst28|alu_sr[9]~1471
N1L264 = H1_sour_reg[2] & (N1L263 & (L15_q[9]) # !N1L263 & L7_q[9]) # !H1_sour_reg[2] & (N1L263);


--L10_q[9] is reg:inst20|q[9]
L10_q[9] = DFFEAS(J1L30, clk, reset,  , M1L10,  ,  ,  ,  );


--L6_q[9] is reg:inst16|q[9]
L6_q[9] = DFFEAS(J1L30, clk, reset,  , M1L6,  ,  ,  ,  );


--L2_q[9] is reg:inst12|q[9]
L2_q[9] = DFFEAS(J1L30, clk, reset,  , M1L2,  ,  ,  ,  );


--N1L265 is bus_mux:inst28|alu_sr[9]~1472
N1L265 = H1_sour_reg[3] & (H1_sour_reg[2]) # !H1_sour_reg[3] & (H1_sour_reg[2] & L6_q[9] # !H1_sour_reg[2] & (L2_q[9]));


--L14_q[9] is reg:inst24|q[9]
L14_q[9] = DFFEAS(J1L30, clk, reset,  , M1L14,  ,  ,  ,  );


--N1L266 is bus_mux:inst28|alu_sr[9]~1473
N1L266 = H1_sour_reg[3] & (N1L265 & (L14_q[9]) # !N1L265 & L10_q[9]) # !H1_sour_reg[3] & (N1L265);


--L9_q[9] is reg:inst19|q[9]
L9_q[9] = DFFEAS(J1L30, clk, reset,  , M1L9,  ,  ,  ,  );


--L5_q[9] is reg:inst15|q[9]
L5_q[9] = DFFEAS(J1L30, clk, reset,  , M1L5,  ,  ,  ,  );


--L1_q[9] is reg:inst30|q[9]
L1_q[9] = DFFEAS(J1L30, clk, reset,  , M1L1,  ,  ,  ,  );


--N1L267 is bus_mux:inst28|alu_sr[9]~1474
N1L267 = H1_sour_reg[3] & (H1_sour_reg[2]) # !H1_sour_reg[3] & (H1_sour_reg[2] & L5_q[9] # !H1_sour_reg[2] & (L1_q[9]));


--L13_q[9] is reg:inst23|q[9]
L13_q[9] = DFFEAS(J1L30, clk, reset,  , M1L13,  ,  ,  ,  );


--N1L268 is bus_mux:inst28|alu_sr[9]~1475
N1L268 = H1_sour_reg[3] & (N1L267 & (L13_q[9]) # !N1L267 & L9_q[9]) # !H1_sour_reg[3] & (N1L267);


--N1L269 is bus_mux:inst28|alu_sr[9]~1476
N1L269 = H1_sour_reg[1] & (H1_sour_reg[0]) # !H1_sour_reg[1] & (H1_sour_reg[0] & N1L266 # !H1_sour_reg[0] & (N1L268));


--L8_q[9] is reg:inst18|q[9]
L8_q[9] = DFFEAS(J1L30, clk, reset,  , M1L8,  ,  ,  ,  );


--L12_q[9] is reg:inst22|q[9]
L12_q[9] = DFFEAS(J1L30, clk, reset,  , M1L12,  ,  ,  ,  );


--L4_q[9] is reg:inst14|q[9]
L4_q[9] = DFFEAS(J1L30, clk, reset,  , M1L4,  ,  ,  ,  );


--N1L270 is bus_mux:inst28|alu_sr[9]~1477
N1L270 = H1_sour_reg[2] & (H1_sour_reg[3]) # !H1_sour_reg[2] & (H1_sour_reg[3] & L12_q[9] # !H1_sour_reg[3] & (L4_q[9]));


--L16_q[9] is reg:inst26|q[9]
L16_q[9] = DFFEAS(J1L30, clk, reset,  , M1L16,  ,  ,  ,  );


--N1L271 is bus_mux:inst28|alu_sr[9]~1478
N1L271 = H1_sour_reg[2] & (N1L270 & (L16_q[9]) # !N1L270 & L8_q[9]) # !H1_sour_reg[2] & (N1L270);


--N1L272 is bus_mux:inst28|alu_sr[9]~1479
N1L272 = H1_sour_reg[1] & (N1L269 & (N1L271) # !N1L269 & N1L264) # !H1_sour_reg[1] & (N1L269);


--N1L273 is bus_mux:inst28|alu_sr[9]~1480
N1L273 = H1_offset[7] & (N1L229 # N1L339 & N1L272) # !H1_offset[7] & N1L339 & N1L272;


--B1L20 is alu:inst|add~3722
B1L20 = H1_alu_func[0] $ N1L273;


--N1L92 is bus_mux:inst28|alu_dr[9]~1278
N1L92 = H1_dest_reg[2] & (H1_dest_reg[3]) # !H1_dest_reg[2] & (H1_dest_reg[3] & L11_q[9] # !H1_dest_reg[3] & (L3_q[9]));


--N1L93 is bus_mux:inst28|alu_dr[9]~1279
N1L93 = H1_dest_reg[2] & (N1L92 & (L15_q[9]) # !N1L92 & L7_q[9]) # !H1_dest_reg[2] & (N1L92);


--N1L94 is bus_mux:inst28|alu_dr[9]~1280
N1L94 = H1_dest_reg[3] & (H1_dest_reg[2]) # !H1_dest_reg[3] & (H1_dest_reg[2] & L6_q[9] # !H1_dest_reg[2] & (L2_q[9]));


--N1L95 is bus_mux:inst28|alu_dr[9]~1281
N1L95 = H1_dest_reg[3] & (N1L94 & (L14_q[9]) # !N1L94 & L10_q[9]) # !H1_dest_reg[3] & (N1L94);


--N1L96 is bus_mux:inst28|alu_dr[9]~1282
N1L96 = H1_dest_reg[3] & (H1_dest_reg[2]) # !H1_dest_reg[3] & (H1_dest_reg[2] & L5_q[9] # !H1_dest_reg[2] & (L1_q[9]));


--N1L97 is bus_mux:inst28|alu_dr[9]~1283
N1L97 = H1_dest_reg[3] & (N1L96 & (L13_q[9]) # !N1L96 & L9_q[9]) # !H1_dest_reg[3] & (N1L96);


--N1L98 is bus_mux:inst28|alu_dr[9]~1284
N1L98 = H1_dest_reg[1] & (H1_dest_reg[0]) # !H1_dest_reg[1] & (H1_dest_reg[0] & N1L95 # !H1_dest_reg[0] & (N1L97));


--N1L99 is bus_mux:inst28|alu_dr[9]~1285
N1L99 = H1_dest_reg[2] & (H1_dest_reg[3]) # !H1_dest_reg[2] & (H1_dest_reg[3] & L12_q[9] # !H1_dest_reg[3] & (L4_q[9]));


--N1L100 is bus_mux:inst28|alu_dr[9]~1286
N1L100 = H1_dest_reg[2] & (N1L99 & (L16_q[9]) # !N1L99 & L8_q[9]) # !H1_dest_reg[2] & (N1L99);


--N1L101 is bus_mux:inst28|alu_dr[9]~1287
N1L101 = H1_dest_reg[1] & (N1L98 & (N1L100) # !N1L98 & N1L93) # !H1_dest_reg[1] & (N1L98);


--K1_q[9] is pc:inst10|q[9]
K1_q[9] = DFFEAS(J1L30, clk, reset,  , H1L24,  ,  ,  ,  );


--B1L21 is alu:inst|add~3723
B1L21 = N1L152 & (N1L101 # K1_q[9] & !N1L91) # !N1L152 & (K1_q[9] & !N1L91);


--B1L22 is alu:inst|add~3724
B1L22 = B1L21 # B1L2 & A1L43;


--L7_q[8] is reg:inst17|q[8]
L7_q[8] = DFFEAS(J1L27, clk, reset,  , M1L7,  ,  ,  ,  );


--L6_q[8] is reg:inst16|q[8]
L6_q[8] = DFFEAS(J1L27, clk, reset,  , M1L6,  ,  ,  ,  );


--L5_q[8] is reg:inst15|q[8]
L5_q[8] = DFFEAS(J1L27, clk, reset,  , M1L5,  ,  ,  ,  );


--N1L252 is bus_mux:inst28|alu_sr[8]~1481
N1L252 = H1_sour_reg[1] & (H1_sour_reg[0]) # !H1_sour_reg[1] & (H1_sour_reg[0] & L6_q[8] # !H1_sour_reg[0] & (L5_q[8]));


--L8_q[8] is reg:inst18|q[8]
L8_q[8] = DFFEAS(J1L27, clk, reset,  , M1L8,  ,  ,  ,  );


--N1L253 is bus_mux:inst28|alu_sr[8]~1482
N1L253 = H1_sour_reg[1] & (N1L252 & (L8_q[8]) # !N1L252 & L7_q[8]) # !H1_sour_reg[1] & (N1L252);


--L10_q[8] is reg:inst20|q[8]
L10_q[8] = DFFEAS(J1L27, clk, reset,  , M1L10,  ,  ,  ,  );


--L11_q[8] is reg:inst21|q[8]
L11_q[8] = DFFEAS(J1L27, clk, reset,  , M1L11,  ,  ,  ,  );


--L9_q[8] is reg:inst19|q[8]
L9_q[8] = DFFEAS(J1L27, clk, reset,  , M1L9,  ,  ,  ,  );


--N1L254 is bus_mux:inst28|alu_sr[8]~1483
N1L254 = H1_sour_reg[0] & (H1_sour_reg[1]) # !H1_sour_reg[0] & (H1_sour_reg[1] & L11_q[8] # !H1_sour_reg[1] & (L9_q[8]));


--L12_q[8] is reg:inst22|q[8]
L12_q[8] = DFFEAS(J1L27, clk, reset,  , M1L12,  ,  ,  ,  );


--N1L255 is bus_mux:inst28|alu_sr[8]~1484
N1L255 = H1_sour_reg[0] & (N1L254 & (L12_q[8]) # !N1L254 & L10_q[8]) # !H1_sour_reg[0] & (N1L254);


--L2_q[8] is reg:inst12|q[8]
L2_q[8] = DFFEAS(J1L27, clk, reset,  , M1L2,  ,  ,  ,  );


--L1_q[8] is reg:inst30|q[8]
L1_q[8] = DFFEAS(J1L27, clk, reset,  , M1L1,  ,  ,  ,  );


--N1L256 is bus_mux:inst28|alu_sr[8]~1485
N1L256 = H1_sour_reg[1] & (H1_sour_reg[0]) # !H1_sour_reg[1] & (H1_sour_reg[0] & L2_q[8] # !H1_sour_reg[0] & (L1_q[8]));


--L4_q[8] is reg:inst14|q[8]
L4_q[8] = DFFEAS(J1L27, clk, reset,  , M1L4,  ,  ,  ,  );


--N1L257 is bus_mux:inst28|alu_sr[8]~1486
N1L257 = H1_sour_reg[1] & (N1L256 & (L4_q[8]) # !N1L256 & L3_q[8]) # !H1_sour_reg[1] & (N1L256);


--N1L258 is bus_mux:inst28|alu_sr[8]~1487
N1L258 = H1_sour_reg[2] & (H1_sour_reg[3]) # !H1_sour_reg[2] & (H1_sour_reg[3] & N1L255 # !H1_sour_reg[3] & (N1L257));


--L14_q[8] is reg:inst24|q[8]
L14_q[8] = DFFEAS(J1L27, clk, reset,  , M1L14,  ,  ,  ,  );


--L15_q[8] is reg:inst25|q[8]
L15_q[8] = DFFEAS(J1L27, clk, reset,  , M1L15,  ,  ,  ,  );


--L13_q[8] is reg:inst23|q[8]
L13_q[8] = DFFEAS(J1L27, clk, reset,  , M1L13,  ,  ,  ,  );


--N1L259 is bus_mux:inst28|alu_sr[8]~1488
N1L259 = H1_sour_reg[0] & (H1_sour_reg[1]) # !H1_sour_reg[0] & (H1_sour_reg[1] & L15_q[8] # !H1_sour_reg[1] & (L13_q[8]));


--L16_q[8] is reg:inst26|q[8]
L16_q[8] = DFFEAS(J1L27, clk, reset,  , M1L16,  ,  ,  ,  );


--N1L260 is bus_mux:inst28|alu_sr[8]~1489
N1L260 = H1_sour_reg[0] & (N1L259 & (L16_q[8]) # !N1L259 & L14_q[8]) # !H1_sour_reg[0] & (N1L259);


--N1L261 is bus_mux:inst28|alu_sr[8]~1490
N1L261 = H1_sour_reg[2] & (N1L258 & (N1L260) # !N1L258 & N1L253) # !H1_sour_reg[2] & (N1L258);


--N1L262 is bus_mux:inst28|alu_sr[8]~1491
N1L262 = H1_offset[7] & (N1L229 # N1L339 & N1L261) # !H1_offset[7] & N1L339 & N1L261;


--B1L23 is alu:inst|add~3725
B1L23 = H1_alu_func[0] $ N1L262;


--N1L81 is bus_mux:inst28|alu_dr[8]~1288
N1L81 = H1_dest_reg[1] & (H1_dest_reg[0]) # !H1_dest_reg[1] & (H1_dest_reg[0] & L6_q[8] # !H1_dest_reg[0] & (L5_q[8]));


--N1L82 is bus_mux:inst28|alu_dr[8]~1289
N1L82 = H1_dest_reg[1] & (N1L81 & (L8_q[8]) # !N1L81 & L7_q[8]) # !H1_dest_reg[1] & (N1L81);


--N1L83 is bus_mux:inst28|alu_dr[8]~1290
N1L83 = H1_dest_reg[0] & (H1_dest_reg[1]) # !H1_dest_reg[0] & (H1_dest_reg[1] & L11_q[8] # !H1_dest_reg[1] & (L9_q[8]));


--N1L84 is bus_mux:inst28|alu_dr[8]~1291
N1L84 = H1_dest_reg[0] & (N1L83 & (L12_q[8]) # !N1L83 & L10_q[8]) # !H1_dest_reg[0] & (N1L83);


--N1L85 is bus_mux:inst28|alu_dr[8]~1292
N1L85 = H1_dest_reg[1] & (H1_dest_reg[0]) # !H1_dest_reg[1] & (H1_dest_reg[0] & L2_q[8] # !H1_dest_reg[0] & (L1_q[8]));


--N1L86 is bus_mux:inst28|alu_dr[8]~1293
N1L86 = H1_dest_reg[1] & (N1L85 & (L4_q[8]) # !N1L85 & L3_q[8]) # !H1_dest_reg[1] & (N1L85);


--N1L87 is bus_mux:inst28|alu_dr[8]~1294
N1L87 = H1_dest_reg[2] & (H1_dest_reg[3]) # !H1_dest_reg[2] & (H1_dest_reg[3] & N1L84 # !H1_dest_reg[3] & (N1L86));


--N1L88 is bus_mux:inst28|alu_dr[8]~1295
N1L88 = H1_dest_reg[0] & (H1_dest_reg[1]) # !H1_dest_reg[0] & (H1_dest_reg[1] & L15_q[8] # !H1_dest_reg[1] & (L13_q[8]));


--N1L89 is bus_mux:inst28|alu_dr[8]~1296
N1L89 = H1_dest_reg[0] & (N1L88 & (L16_q[8]) # !N1L88 & L14_q[8]) # !H1_dest_reg[0] & (N1L88);


--N1L90 is bus_mux:inst28|alu_dr[8]~1297
N1L90 = H1_dest_reg[2] & (N1L87 & (N1L89) # !N1L87 & N1L82) # !H1_dest_reg[2] & (N1L87);


--K1_q[8] is pc:inst10|q[8]
K1_q[8] = DFFEAS(J1L27, clk, reset,  , H1L24,  ,  ,  ,  );


--B1L24 is alu:inst|add~3726
B1L24 = N1L152 & (N1L90 # K1_q[8] & !N1L91) # !N1L152 & (K1_q[8] & !N1L91);


--B1L25 is alu:inst|add~3727
B1L25 = B1L24 # B1L2 & A1L44;


--L6_q[7] is reg:inst16|q[7]
L6_q[7] = DFFEAS(J1L24, clk, reset,  , M1L6,  ,  ,  ,  );


--L10_q[7] is reg:inst20|q[7]
L10_q[7] = DFFEAS(J1L24, clk, reset,  , M1L10,  ,  ,  ,  );


--L2_q[7] is reg:inst12|q[7]
L2_q[7] = DFFEAS(J1L24, clk, reset,  , M1L2,  ,  ,  ,  );


--N1L241 is bus_mux:inst28|alu_sr[7]~1492
N1L241 = H1_sour_reg[2] & (H1_sour_reg[3]) # !H1_sour_reg[2] & (H1_sour_reg[3] & L10_q[7] # !H1_sour_reg[3] & (L2_q[7]));


--L14_q[7] is reg:inst24|q[7]
L14_q[7] = DFFEAS(J1L24, clk, reset,  , M1L14,  ,  ,  ,  );


--N1L242 is bus_mux:inst28|alu_sr[7]~1493
N1L242 = H1_sour_reg[2] & (N1L241 & (L14_q[7]) # !N1L241 & L6_q[7]) # !H1_sour_reg[2] & (N1L241);


--L11_q[7] is reg:inst21|q[7]
L11_q[7] = DFFEAS(J1L24, clk, reset,  , M1L11,  ,  ,  ,  );


--L7_q[7] is reg:inst17|q[7]
L7_q[7] = DFFEAS(J1L24, clk, reset,  , M1L7,  ,  ,  ,  );


--N1L243 is bus_mux:inst28|alu_sr[7]~1494
N1L243 = H1_sour_reg[3] & (H1_sour_reg[2]) # !H1_sour_reg[3] & (H1_sour_reg[2] & L7_q[7] # !H1_sour_reg[2] & (L3_q[7]));


--L15_q[7] is reg:inst25|q[7]
L15_q[7] = DFFEAS(J1L24, clk, reset,  , M1L15,  ,  ,  ,  );


--N1L244 is bus_mux:inst28|alu_sr[7]~1495
N1L244 = H1_sour_reg[3] & (N1L243 & (L15_q[7]) # !N1L243 & L11_q[7]) # !H1_sour_reg[3] & (N1L243);


--L5_q[7] is reg:inst15|q[7]
L5_q[7] = DFFEAS(J1L24, clk, reset,  , M1L5,  ,  ,  ,  );


--L9_q[7] is reg:inst19|q[7]
L9_q[7] = DFFEAS(J1L24, clk, reset,  , M1L9,  ,  ,  ,  );


--L1_q[7] is reg:inst30|q[7]
L1_q[7] = DFFEAS(J1L24, clk, reset,  , M1L1,  ,  ,  ,  );


--N1L245 is bus_mux:inst28|alu_sr[7]~1496
N1L245 = H1_sour_reg[2] & (H1_sour_reg[3]) # !H1_sour_reg[2] & (H1_sour_reg[3] & L9_q[7] # !H1_sour_reg[3] & (L1_q[7]));


--L13_q[7] is reg:inst23|q[7]
L13_q[7] = DFFEAS(J1L24, clk, reset,  , M1L13,  ,  ,  ,  );


--N1L246 is bus_mux:inst28|alu_sr[7]~1497
N1L246 = H1_sour_reg[2] & (N1L245 & (L13_q[7]) # !N1L245 & L5_q[7]) # !H1_sour_reg[2] & (N1L245);


--N1L247 is bus_mux:inst28|alu_sr[7]~1498
N1L247 = H1_sour_reg[0] & (H1_sour_reg[1]) # !H1_sour_reg[0] & (H1_sour_reg[1] & N1L244 # !H1_sour_reg[1] & (N1L246));


--L12_q[7] is reg:inst22|q[7]
L12_q[7] = DFFEAS(J1L24, clk, reset,  , M1L12,  ,  ,  ,  );


--L8_q[7] is reg:inst18|q[7]
L8_q[7] = DFFEAS(J1L24, clk, reset,  , M1L8,  ,  ,  ,  );


--L4_q[7] is reg:inst14|q[7]
L4_q[7] = DFFEAS(J1L24, clk, reset,  , M1L4,  ,  ,  ,  );


--N1L248 is bus_mux:inst28|alu_sr[7]~1499
N1L248 = H1_sour_reg[3] & (H1_sour_reg[2]) # !H1_sour_reg[3] & (H1_sour_reg[2] & L8_q[7] # !H1_sour_reg[2] & (L4_q[7]));


--L16_q[7] is reg:inst26|q[7]
L16_q[7] = DFFEAS(J1L24, clk, reset,  , M1L16,  ,  ,  ,  );


--N1L249 is bus_mux:inst28|alu_sr[7]~1500
N1L249 = H1_sour_reg[3] & (N1L248 & (L16_q[7]) # !N1L248 & L12_q[7]) # !H1_sour_reg[3] & (N1L248);


--N1L250 is bus_mux:inst28|alu_sr[7]~1501
N1L250 = H1_sour_reg[0] & (N1L247 & (N1L249) # !N1L247 & N1L242) # !H1_sour_reg[0] & (N1L247);


--N1L251 is bus_mux:inst28|alu_sr[7]~1502
N1L251 = H1_offset[7] & (N1L229 # N1L339 & N1L250) # !H1_offset[7] & N1L339 & N1L250;


--B1L26 is alu:inst|add~3728
B1L26 = H1_alu_func[0] $ N1L251;


--N1L71 is bus_mux:inst28|alu_dr[7]~1298
N1L71 = H1_dest_reg[2] & (H1_dest_reg[3]) # !H1_dest_reg[2] & (H1_dest_reg[3] & L10_q[7] # !H1_dest_reg[3] & (L2_q[7]));


--N1L72 is bus_mux:inst28|alu_dr[7]~1299
N1L72 = H1_dest_reg[2] & (N1L71 & (L14_q[7]) # !N1L71 & L6_q[7]) # !H1_dest_reg[2] & (N1L71);


--N1L73 is bus_mux:inst28|alu_dr[7]~1300
N1L73 = H1_dest_reg[3] & (H1_dest_reg[2]) # !H1_dest_reg[3] & (H1_dest_reg[2] & L7_q[7] # !H1_dest_reg[2] & (L3_q[7]));


--N1L74 is bus_mux:inst28|alu_dr[7]~1301
N1L74 = H1_dest_reg[3] & (N1L73 & (L15_q[7]) # !N1L73 & L11_q[7]) # !H1_dest_reg[3] & (N1L73);


--N1L75 is bus_mux:inst28|alu_dr[7]~1302
N1L75 = H1_dest_reg[2] & (H1_dest_reg[3]) # !H1_dest_reg[2] & (H1_dest_reg[3] & L9_q[7] # !H1_dest_reg[3] & (L1_q[7]));


--N1L76 is bus_mux:inst28|alu_dr[7]~1303
N1L76 = H1_dest_reg[2] & (N1L75 & (L13_q[7]) # !N1L75 & L5_q[7]) # !H1_dest_reg[2] & (N1L75);


--N1L77 is bus_mux:inst28|alu_dr[7]~1304
N1L77 = H1_dest_reg[0] & (H1_dest_reg[1]) # !H1_dest_reg[0] & (H1_dest_reg[1] & N1L74 # !H1_dest_reg[1] & (N1L76));


--N1L78 is bus_mux:inst28|alu_dr[7]~1305
N1L78 = H1_dest_reg[3] & (H1_dest_reg[2]) # !H1_dest_reg[3] & (H1_dest_reg[2] & L8_q[7] # !H1_dest_reg[2] & (L4_q[7]));


--N1L79 is bus_mux:inst28|alu_dr[7]~1306
N1L79 = H1_dest_reg[3] & (N1L78 & (L16_q[7]) # !N1L78 & L12_q[7]) # !H1_dest_reg[3] & (N1L78);


--N1L80 is bus_mux:inst28|alu_dr[7]~1307
N1L80 = H1_dest_reg[0] & (N1L77 & (N1L79) # !N1L77 & N1L72) # !H1_dest_reg[0] & (N1L77);


--K1_q[7] is pc:inst10|q[7]
K1_q[7] = DFFEAS(J1L24, clk, reset,  , H1L24,  ,  ,  ,  );


--B1L27 is alu:inst|add~3729
B1L27 = N1L152 & (N1L80 # K1_q[7] & !N1L91) # !N1L152 & (K1_q[7] & !N1L91);


--B1L28 is alu:inst|add~3730
B1L28 = B1L27 # B1L2 & A1L45;


--L11_q[6] is reg:inst21|q[6]
L11_q[6] = DFFEAS(J1L21, clk, reset,  , M1L11,  ,  ,  ,  );


--L10_q[6] is reg:inst20|q[6]
L10_q[6] = DFFEAS(J1L21, clk, reset,  , M1L10,  ,  ,  ,  );


--L9_q[6] is reg:inst19|q[6]
L9_q[6] = DFFEAS(J1L21, clk, reset,  , M1L9,  ,  ,  ,  );


--N1L230 is bus_mux:inst28|alu_sr[6]~1503
N1L230 = H1_sour_reg[1] & (H1_sour_reg[0]) # !H1_sour_reg[1] & (H1_sour_reg[0] & L10_q[6] # !H1_sour_reg[0] & (L9_q[6]));


--L12_q[6] is reg:inst22|q[6]
L12_q[6] = DFFEAS(J1L21, clk, reset,  , M1L12,  ,  ,  ,  );


--N1L231 is bus_mux:inst28|alu_sr[6]~1504
N1L231 = H1_sour_reg[1] & (N1L230 & (L12_q[6]) # !N1L230 & L11_q[6]) # !H1_sour_reg[1] & (N1L230);


--L6_q[6] is reg:inst16|q[6]
L6_q[6] = DFFEAS(J1L21, clk, reset,  , M1L6,  ,  ,  ,  );


--L7_q[6] is reg:inst17|q[6]
L7_q[6] = DFFEAS(J1L21, clk, reset,  , M1L7,  ,  ,  ,  );


--L5_q[6] is reg:inst15|q[6]
L5_q[6] = DFFEAS(J1L21, clk, reset,  , M1L5,  ,  ,  ,  );


--N1L232 is bus_mux:inst28|alu_sr[6]~1505
N1L232 = H1_sour_reg[0] & (H1_sour_reg[1]) # !H1_sour_reg[0] & (H1_sour_reg[1] & L7_q[6] # !H1_sour_reg[1] & (L5_q[6]));


--L8_q[6] is reg:inst18|q[6]
L8_q[6] = DFFEAS(J1L21, clk, reset,  , M1L8,  ,  ,  ,  );


--N1L233 is bus_mux:inst28|alu_sr[6]~1506
N1L233 = H1_sour_reg[0] & (N1L232 & (L8_q[6]) # !N1L232 & L6_q[6]) # !H1_sour_reg[0] & (N1L232);


--L2_q[6] is reg:inst12|q[6]
L2_q[6] = DFFEAS(J1L21, clk, reset,  , M1L2,  ,  ,  ,  );


--L1_q[6] is reg:inst30|q[6]
L1_q[6] = DFFEAS(J1L21, clk, reset,  , M1L1,  ,  ,  ,  );


--N1L234 is bus_mux:inst28|alu_sr[6]~1507
N1L234 = H1_sour_reg[0] & (H1_sour_reg[1]) # !H1_sour_reg[0] & (H1_sour_reg[1] & L3_q[6] # !H1_sour_reg[1] & (L1_q[6]));


--L4_q[6] is reg:inst14|q[6]
L4_q[6] = DFFEAS(J1L21, clk, reset,  , M1L4,  ,  ,  ,  );


--N1L235 is bus_mux:inst28|alu_sr[6]~1508
N1L235 = H1_sour_reg[0] & (N1L234 & (L4_q[6]) # !N1L234 & L2_q[6]) # !H1_sour_reg[0] & (N1L234);


--N1L236 is bus_mux:inst28|alu_sr[6]~1509
N1L236 = H1_sour_reg[3] & (H1_sour_reg[2]) # !H1_sour_reg[3] & (H1_sour_reg[2] & N1L233 # !H1_sour_reg[2] & (N1L235));


--L15_q[6] is reg:inst25|q[6]
L15_q[6] = DFFEAS(J1L21, clk, reset,  , M1L15,  ,  ,  ,  );


--L14_q[6] is reg:inst24|q[6]
L14_q[6] = DFFEAS(J1L21, clk, reset,  , M1L14,  ,  ,  ,  );


--L13_q[6] is reg:inst23|q[6]
L13_q[6] = DFFEAS(J1L21, clk, reset,  , M1L13,  ,  ,  ,  );


--N1L237 is bus_mux:inst28|alu_sr[6]~1510
N1L237 = H1_sour_reg[1] & (H1_sour_reg[0]) # !H1_sour_reg[1] & (H1_sour_reg[0] & L14_q[6] # !H1_sour_reg[0] & (L13_q[6]));


--L16_q[6] is reg:inst26|q[6]
L16_q[6] = DFFEAS(J1L21, clk, reset,  , M1L16,  ,  ,  ,  );


--N1L238 is bus_mux:inst28|alu_sr[6]~1511
N1L238 = H1_sour_reg[1] & (N1L237 & (L16_q[6]) # !N1L237 & L15_q[6]) # !H1_sour_reg[1] & (N1L237);


--N1L239 is bus_mux:inst28|alu_sr[6]~1512
N1L239 = H1_sour_reg[3] & (N1L236 & (N1L238) # !N1L236 & N1L231) # !H1_sour_reg[3] & (N1L236);


--N1L240 is bus_mux:inst28|alu_sr[6]~1513
N1L240 = N1L229 & (H1_offset[6] # N1L339 & N1L239) # !N1L229 & N1L339 & N1L239;


--B1L29 is alu:inst|add~3731
B1L29 = H1_alu_func[0] $ N1L240;


--N1L61 is bus_mux:inst28|alu_dr[6]~1308
N1L61 = H1_dest_reg[1] & (H1_dest_reg[0]) # !H1_dest_reg[1] & (H1_dest_reg[0] & L10_q[6] # !H1_dest_reg[0] & (L9_q[6]));


--N1L62 is bus_mux:inst28|alu_dr[6]~1309
N1L62 = H1_dest_reg[1] & (N1L61 & (L12_q[6]) # !N1L61 & L11_q[6]) # !H1_dest_reg[1] & (N1L61);


--N1L63 is bus_mux:inst28|alu_dr[6]~1310
N1L63 = H1_dest_reg[0] & (H1_dest_reg[1]) # !H1_dest_reg[0] & (H1_dest_reg[1] & L7_q[6] # !H1_dest_reg[1] & (L5_q[6]));


--N1L64 is bus_mux:inst28|alu_dr[6]~1311
N1L64 = H1_dest_reg[0] & (N1L63 & (L8_q[6]) # !N1L63 & L6_q[6]) # !H1_dest_reg[0] & (N1L63);


--N1L65 is bus_mux:inst28|alu_dr[6]~1312
N1L65 = H1_dest_reg[0] & (H1_dest_reg[1]) # !H1_dest_reg[0] & (H1_dest_reg[1] & L3_q[6] # !H1_dest_reg[1] & (L1_q[6]));


--N1L66 is bus_mux:inst28|alu_dr[6]~1313
N1L66 = H1_dest_reg[0] & (N1L65 & (L4_q[6]) # !N1L65 & L2_q[6]) # !H1_dest_reg[0] & (N1L65);


--N1L67 is bus_mux:inst28|alu_dr[6]~1314
N1L67 = H1_dest_reg[3] & (H1_dest_reg[2]) # !H1_dest_reg[3] & (H1_dest_reg[2] & N1L64 # !H1_dest_reg[2] & (N1L66));


--N1L68 is bus_mux:inst28|alu_dr[6]~1315
N1L68 = H1_dest_reg[1] & (H1_dest_reg[0]) # !H1_dest_reg[1] & (H1_dest_reg[0] & L14_q[6] # !H1_dest_reg[0] & (L13_q[6]));


--N1L69 is bus_mux:inst28|alu_dr[6]~1316
N1L69 = H1_dest_reg[1] & (N1L68 & (L16_q[6]) # !N1L68 & L15_q[6]) # !H1_dest_reg[1] & (N1L68);


--N1L70 is bus_mux:inst28|alu_dr[6]~1317
N1L70 = H1_dest_reg[3] & (N1L67 & (N1L69) # !N1L67 & N1L62) # !H1_dest_reg[3] & (N1L67);


--K1_q[6] is pc:inst10|q[6]
K1_q[6] = DFFEAS(J1L21, clk, reset,  , H1L24,  ,  ,  ,  );


--B1L30 is alu:inst|add~3732
B1L30 = N1L152 & (N1L70 # K1_q[6] & !N1L91) # !N1L152 & (K1_q[6] & !N1L91);


--B1L31 is alu:inst|add~3733
B1L31 = B1L30 # B1L2 & A1L46;


--L7_q[5] is reg:inst17|q[5]
L7_q[5] = DFFEAS(J1L18, clk, reset,  , M1L7,  ,  ,  ,  );


--L11_q[5] is reg:inst21|q[5]
L11_q[5] = DFFEAS(J1L18, clk, reset,  , M1L11,  ,  ,  ,  );


--N1L218 is bus_mux:inst28|alu_sr[5]~1514
N1L218 = H1_sour_reg[2] & (H1_sour_reg[3]) # !H1_sour_reg[2] & (H1_sour_reg[3] & L11_q[5] # !H1_sour_reg[3] & (L3_q[5]));


--L15_q[5] is reg:inst25|q[5]
L15_q[5] = DFFEAS(J1L18, clk, reset,  , M1L15,  ,  ,  ,  );


--N1L219 is bus_mux:inst28|alu_sr[5]~1515
N1L219 = H1_sour_reg[2] & (N1L218 & (L15_q[5]) # !N1L218 & L7_q[5]) # !H1_sour_reg[2] & (N1L218);


--L10_q[5] is reg:inst20|q[5]
L10_q[5] = DFFEAS(J1L18, clk, reset,  , M1L10,  ,  ,  ,  );


--L6_q[5] is reg:inst16|q[5]
L6_q[5] = DFFEAS(J1L18, clk, reset,  , M1L6,  ,  ,  ,  );


--L2_q[5] is reg:inst12|q[5]
L2_q[5] = DFFEAS(J1L18, clk, reset,  , M1L2,  ,  ,  ,  );


--N1L220 is bus_mux:inst28|alu_sr[5]~1516
N1L220 = H1_sour_reg[3] & (H1_sour_reg[2]) # !H1_sour_reg[3] & (H1_sour_reg[2] & L6_q[5] # !H1_sour_reg[2] & (L2_q[5]));


--L14_q[5] is reg:inst24|q[5]
L14_q[5] = DFFEAS(J1L18, clk, reset,  , M1L14,  ,  ,  ,  );


--N1L221 is bus_mux:inst28|alu_sr[5]~1517
N1L221 = H1_sour_reg[3] & (N1L220 & (L14_q[5]) # !N1L220 & L10_q[5]) # !H1_sour_reg[3] & (N1L220);


--L9_q[5] is reg:inst19|q[5]
L9_q[5] = DFFEAS(J1L18, clk, reset,  , M1L9,  ,  ,  ,  );


--L5_q[5] is reg:inst15|q[5]
L5_q[5] = DFFEAS(J1L18, clk, reset,  , M1L5,  ,  ,  ,  );


--L1_q[5] is reg:inst30|q[5]
L1_q[5] = DFFEAS(J1L18, clk, reset,  , M1L1,  ,  ,  ,  );


--N1L222 is bus_mux:inst28|alu_sr[5]~1518
N1L222 = H1_sour_reg[3] & (H1_sour_reg[2]) # !H1_sour_reg[3] & (H1_sour_reg[2] & L5_q[5] # !H1_sour_reg[2] & (L1_q[5]));


--L13_q[5] is reg:inst23|q[5]
L13_q[5] = DFFEAS(J1L18, clk, reset,  , M1L13,  ,  ,  ,  );


--N1L223 is bus_mux:inst28|alu_sr[5]~1519
N1L223 = H1_sour_reg[3] & (N1L222 & (L13_q[5]) # !N1L222 & L9_q[5]) # !H1_sour_reg[3] & (N1L222);


--N1L224 is bus_mux:inst28|alu_sr[5]~1520
N1L224 = H1_sour_reg[1] & (H1_sour_reg[0]) # !H1_sour_reg[1] & (H1_sour_reg[0] & N1L221 # !H1_sour_reg[0] & (N1L223));


--L8_q[5] is reg:inst18|q[5]
L8_q[5] = DFFEAS(J1L18, clk, reset,  , M1L8,  ,  ,  ,  );


--L12_q[5] is reg:inst22|q[5]
L12_q[5] = DFFEAS(J1L18, clk, reset,  , M1L12,  ,  ,  ,  );


--L4_q[5] is reg:inst14|q[5]
L4_q[5] = DFFEAS(J1L18, clk, reset,  , M1L4,  ,  ,  ,  );


--N1L225 is bus_mux:inst28|alu_sr[5]~1521
N1L225 = H1_sour_reg[2] & (H1_sour_reg[3]) # !H1_sour_reg[2] & (H1_sour_reg[3] & L12_q[5] # !H1_sour_reg[3] & (L4_q[5]));


--L16_q[5] is reg:inst26|q[5]
L16_q[5] = DFFEAS(J1L18, clk, reset,  , M1L16,  ,  ,  ,  );


--N1L226 is bus_mux:inst28|alu_sr[5]~1522
N1L226 = H1_sour_reg[2] & (N1L225 & (L16_q[5]) # !N1L225 & L8_q[5]) # !H1_sour_reg[2] & (N1L225);


--N1L227 is bus_mux:inst28|alu_sr[5]~1523
N1L227 = H1_sour_reg[1] & (N1L224 & (N1L226) # !N1L224 & N1L219) # !H1_sour_reg[1] & (N1L224);


--N1L228 is bus_mux:inst28|alu_sr[5]~1524
N1L228 = N1L229 & (H1_offset[5] # N1L339 & N1L227) # !N1L229 & N1L339 & N1L227;


--B1L32 is alu:inst|add~3734
B1L32 = H1_alu_func[0] $ N1L228;


--N1L51 is bus_mux:inst28|alu_dr[5]~1318
N1L51 = H1_dest_reg[2] & (H1_dest_reg[3]) # !H1_dest_reg[2] & (H1_dest_reg[3] & L11_q[5] # !H1_dest_reg[3] & (L3_q[5]));


--N1L52 is bus_mux:inst28|alu_dr[5]~1319
N1L52 = H1_dest_reg[2] & (N1L51 & (L15_q[5]) # !N1L51 & L7_q[5]) # !H1_dest_reg[2] & (N1L51);


--N1L53 is bus_mux:inst28|alu_dr[5]~1320
N1L53 = H1_dest_reg[3] & (H1_dest_reg[2]) # !H1_dest_reg[3] & (H1_dest_reg[2] & L6_q[5] # !H1_dest_reg[2] & (L2_q[5]));


--N1L54 is bus_mux:inst28|alu_dr[5]~1321
N1L54 = H1_dest_reg[3] & (N1L53 & (L14_q[5]) # !N1L53 & L10_q[5]) # !H1_dest_reg[3] & (N1L53);


--N1L55 is bus_mux:inst28|alu_dr[5]~1322
N1L55 = H1_dest_reg[3] & (H1_dest_reg[2]) # !H1_dest_reg[3] & (H1_dest_reg[2] & L5_q[5] # !H1_dest_reg[2] & (L1_q[5]));


--N1L56 is bus_mux:inst28|alu_dr[5]~1323
N1L56 = H1_dest_reg[3] & (N1L55 & (L13_q[5]) # !N1L55 & L9_q[5]) # !H1_dest_reg[3] & (N1L55);


--N1L57 is bus_mux:inst28|alu_dr[5]~1324
N1L57 = H1_dest_reg[1] & (H1_dest_reg[0]) # !H1_dest_reg[1] & (H1_dest_reg[0] & N1L54 # !H1_dest_reg[0] & (N1L56));


--N1L58 is bus_mux:inst28|alu_dr[5]~1325
N1L58 = H1_dest_reg[2] & (H1_dest_reg[3]) # !H1_dest_reg[2] & (H1_dest_reg[3] & L12_q[5] # !H1_dest_reg[3] & (L4_q[5]));


--N1L59 is bus_mux:inst28|alu_dr[5]~1326
N1L59 = H1_dest_reg[2] & (N1L58 & (L16_q[5]) # !N1L58 & L8_q[5]) # !H1_dest_reg[2] & (N1L58);


--N1L60 is bus_mux:inst28|alu_dr[5]~1327
N1L60 = H1_dest_reg[1] & (N1L57 & (N1L59) # !N1L57 & N1L52) # !H1_dest_reg[1] & (N1L57);


--K1_q[5] is pc:inst10|q[5]
K1_q[5] = DFFEAS(J1L18, clk, reset,  , H1L24,  ,  ,  ,  );


--B1L33 is alu:inst|add~3735
B1L33 = N1L152 & (N1L60 # K1_q[5] & !N1L91) # !N1L152 & (K1_q[5] & !N1L91);


--B1L34 is alu:inst|add~3736
B1L34 = B1L33 # B1L2 & A1L47;


--L7_q[4] is reg:inst17|q[4]
L7_q[4] = DFFEAS(J1L15, clk, reset,  , M1L7,  ,  ,  ,  );


--L6_q[4] is reg:inst16|q[4]
L6_q[4] = DFFEAS(J1L15, clk, reset,  , M1L6,  ,  ,  ,  );


--L5_q[4] is reg:inst15|q[4]
L5_q[4] = DFFEAS(J1L15, clk, reset,  , M1L5,  ,  ,  ,  );


--N1L207 is bus_mux:inst28|alu_sr[4]~1525
N1L207 = H1_sour_reg[1] & (H1_sour_reg[0]) # !H1_sour_reg[1] & (H1_sour_reg[0] & L6_q[4] # !H1_sour_reg[0] & (L5_q[4]));


--L8_q[4] is reg:inst18|q[4]
L8_q[4] = DFFEAS(J1L15, clk, reset,  , M1L8,  ,  ,  ,  );


--N1L208 is bus_mux:inst28|alu_sr[4]~1526
N1L208 = H1_sour_reg[1] & (N1L207 & (L8_q[4]) # !N1L207 & L7_q[4]) # !H1_sour_reg[1] & (N1L207);


--L10_q[4] is reg:inst20|q[4]
L10_q[4] = DFFEAS(J1L15, clk, reset,  , M1L10,  ,  ,  ,  );


--L11_q[4] is reg:inst21|q[4]
L11_q[4] = DFFEAS(J1L15, clk, reset,  , M1L11,  ,  ,  ,  );


--L9_q[4] is reg:inst19|q[4]
L9_q[4] = DFFEAS(J1L15, clk, reset,  , M1L9,  ,  ,  ,  );


--N1L209 is bus_mux:inst28|alu_sr[4]~1527
N1L209 = H1_sour_reg[0] & (H1_sour_reg[1]) # !H1_sour_reg[0] & (H1_sour_reg[1] & L11_q[4] # !H1_sour_reg[1] & (L9_q[4]));


--L12_q[4] is reg:inst22|q[4]
L12_q[4] = DFFEAS(J1L15, clk, reset,  , M1L12,  ,  ,  ,  );


--N1L210 is bus_mux:inst28|alu_sr[4]~1528
N1L210 = H1_sour_reg[0] & (N1L209 & (L12_q[4]) # !N1L209 & L10_q[4]) # !H1_sour_reg[0] & (N1L209);


--L2_q[4] is reg:inst12|q[4]
L2_q[4] = DFFEAS(J1L15, clk, reset,  , M1L2,  ,  ,  ,  );


--L1_q[4] is reg:inst30|q[4]
L1_q[4] = DFFEAS(J1L15, clk, reset,  , M1L1,  ,  ,  ,  );


--N1L211 is bus_mux:inst28|alu_sr[4]~1529
N1L211 = H1_sour_reg[1] & (H1_sour_reg[0]) # !H1_sour_reg[1] & (H1_sour_reg[0] & L2_q[4] # !H1_sour_reg[0] & (L1_q[4]));


--L4_q[4] is reg:inst14|q[4]
L4_q[4] = DFFEAS(J1L15, clk, reset,  , M1L4,  ,  ,  ,  );


--N1L212 is bus_mux:inst28|alu_sr[4]~1530
N1L212 = H1_sour_reg[1] & (N1L211 & (L4_q[4]) # !N1L211 & L3_q[4]) # !H1_sour_reg[1] & (N1L211);


--N1L213 is bus_mux:inst28|alu_sr[4]~1531
N1L213 = H1_sour_reg[2] & (H1_sour_reg[3]) # !H1_sour_reg[2] & (H1_sour_reg[3] & N1L210 # !H1_sour_reg[3] & (N1L212));


--L14_q[4] is reg:inst24|q[4]
L14_q[4] = DFFEAS(J1L15, clk, reset,  , M1L14,  ,  ,  ,  );


--L15_q[4] is reg:inst25|q[4]
L15_q[4] = DFFEAS(J1L15, clk, reset,  , M1L15,  ,  ,  ,  );


--L13_q[4] is reg:inst23|q[4]
L13_q[4] = DFFEAS(J1L15, clk, reset,  , M1L13,  ,  ,  ,  );


--N1L214 is bus_mux:inst28|alu_sr[4]~1532
N1L214 = H1_sour_reg[0] & (H1_sour_reg[1]) # !H1_sour_reg[0] & (H1_sour_reg[1] & L15_q[4] # !H1_sour_reg[1] & (L13_q[4]));


--L16_q[4] is reg:inst26|q[4]
L16_q[4] = DFFEAS(J1L15, clk, reset,  , M1L16,  ,  ,  ,  );


--N1L215 is bus_mux:inst28|alu_sr[4]~1533
N1L215 = H1_sour_reg[0] & (N1L214 & (L16_q[4]) # !N1L214 & L14_q[4]) # !H1_sour_reg[0] & (N1L214);


--N1L216 is bus_mux:inst28|alu_sr[4]~1534
N1L216 = H1_sour_reg[2] & (N1L213 & (N1L215) # !N1L213 & N1L208) # !H1_sour_reg[2] & (N1L213);


--N1L217 is bus_mux:inst28|alu_sr[4]~1535
N1L217 = N1L229 & (H1_offset[4] # N1L339 & N1L216) # !N1L229 & N1L339 & N1L216;


--B1L35 is alu:inst|add~3737
B1L35 = H1_alu_func[0] $ N1L217;


--N1L41 is bus_mux:inst28|alu_dr[4]~1328
N1L41 = H1_dest_reg[1] & (H1_dest_reg[0]) # !H1_dest_reg[1] & (H1_dest_reg[0] & L6_q[4] # !H1_dest_reg[0] & (L5_q[4]));


--N1L42 is bus_mux:inst28|alu_dr[4]~1329
N1L42 = H1_dest_reg[1] & (N1L41 & (L8_q[4]) # !N1L41 & L7_q[4]) # !H1_dest_reg[1] & (N1L41);


--N1L43 is bus_mux:inst28|alu_dr[4]~1330
N1L43 = H1_dest_reg[0] & (H1_dest_reg[1]) # !H1_dest_reg[0] & (H1_dest_reg[1] & L11_q[4] # !H1_dest_reg[1] & (L9_q[4]));


--N1L44 is bus_mux:inst28|alu_dr[4]~1331
N1L44 = H1_dest_reg[0] & (N1L43 & (L12_q[4]) # !N1L43 & L10_q[4]) # !H1_dest_reg[0] & (N1L43);


--N1L45 is bus_mux:inst28|alu_dr[4]~1332
N1L45 = H1_dest_reg[1] & (H1_dest_reg[0]) # !H1_dest_reg[1] & (H1_dest_reg[0] & L2_q[4] # !H1_dest_reg[0] & (L1_q[4]));


--N1L46 is bus_mux:inst28|alu_dr[4]~1333
N1L46 = H1_dest_reg[1] & (N1L45 & (L4_q[4]) # !N1L45 & L3_q[4]) # !H1_dest_reg[1] & (N1L45);


--N1L47 is bus_mux:inst28|alu_dr[4]~1334
N1L47 = H1_dest_reg[2] & (H1_dest_reg[3]) # !H1_dest_reg[2] & (H1_dest_reg[3] & N1L44 # !H1_dest_reg[3] & (N1L46));


--N1L48 is bus_mux:inst28|alu_dr[4]~1335
N1L48 = H1_dest_reg[0] & (H1_dest_reg[1]) # !H1_dest_reg[0] & (H1_dest_reg[1] & L15_q[4] # !H1_dest_reg[1] & (L13_q[4]));


--N1L49 is bus_mux:inst28|alu_dr[4]~1336
N1L49 = H1_dest_reg[0] & (N1L48 & (L16_q[4]) # !N1L48 & L14_q[4]) # !H1_dest_reg[0] & (N1L48);


--N1L50 is bus_mux:inst28|alu_dr[4]~1337
N1L50 = H1_dest_reg[2] & (N1L47 & (N1L49) # !N1L47 & N1L42) # !H1_dest_reg[2] & (N1L47);


--K1_q[4] is pc:inst10|q[4]
K1_q[4] = DFFEAS(J1L15, clk, reset,  , H1L24,  ,  ,  ,  );


--B1L36 is alu:inst|add~3738
B1L36 = N1L152 & (N1L50 # K1_q[4] & !N1L91) # !N1L152 & (K1_q[4] & !N1L91);


--B1L37 is alu:inst|add~3739
B1L37 = B1L36 # B1L2 & A1L48;


--L6_q[3] is reg:inst16|q[3]
L6_q[3] = DFFEAS(J1L12, clk, reset,  , M1L6,  ,  ,  ,  );


--L10_q[3] is reg:inst20|q[3]
L10_q[3] = DFFEAS(J1L12, clk, reset,  , M1L10,  ,  ,  ,  );


--L2_q[3] is reg:inst12|q[3]
L2_q[3] = DFFEAS(J1L12, clk, reset,  , M1L2,  ,  ,  ,  );


--N1L196 is bus_mux:inst28|alu_sr[3]~1536
N1L196 = H1_sour_reg[2] & (H1_sour_reg[3]) # !H1_sour_reg[2] & (H1_sour_reg[3] & L10_q[3] # !H1_sour_reg[3] & (L2_q[3]));


--L14_q[3] is reg:inst24|q[3]
L14_q[3] = DFFEAS(J1L12, clk, reset,  , M1L14,  ,  ,  ,  );


--N1L197 is bus_mux:inst28|alu_sr[3]~1537
N1L197 = H1_sour_reg[2] & (N1L196 & (L14_q[3]) # !N1L196 & L6_q[3]) # !H1_sour_reg[2] & (N1L196);


--L11_q[3] is reg:inst21|q[3]
L11_q[3] = DFFEAS(J1L12, clk, reset,  , M1L11,  ,  ,  ,  );


--L7_q[3] is reg:inst17|q[3]
L7_q[3] = DFFEAS(J1L12, clk, reset,  , M1L7,  ,  ,  ,  );


--N1L198 is bus_mux:inst28|alu_sr[3]~1538
N1L198 = H1_sour_reg[3] & (H1_sour_reg[2]) # !H1_sour_reg[3] & (H1_sour_reg[2] & L7_q[3] # !H1_sour_reg[2] & (L3_q[3]));


--L15_q[3] is reg:inst25|q[3]
L15_q[3] = DFFEAS(J1L12, clk, reset,  , M1L15,  ,  ,  ,  );


--N1L199 is bus_mux:inst28|alu_sr[3]~1539
N1L199 = H1_sour_reg[3] & (N1L198 & (L15_q[3]) # !N1L198 & L11_q[3]) # !H1_sour_reg[3] & (N1L198);


--L5_q[3] is reg:inst15|q[3]
L5_q[3] = DFFEAS(J1L12, clk, reset,  , M1L5,  ,  ,  ,  );


--L9_q[3] is reg:inst19|q[3]
L9_q[3] = DFFEAS(J1L12, clk, reset,  , M1L9,  ,  ,  ,  );


--L1_q[3] is reg:inst30|q[3]
L1_q[3] = DFFEAS(J1L12, clk, reset,  , M1L1,  ,  ,  ,  );


--N1L200 is bus_mux:inst28|alu_sr[3]~1540
N1L200 = H1_sour_reg[2] & (H1_sour_reg[3]) # !H1_sour_reg[2] & (H1_sour_reg[3] & L9_q[3] # !H1_sour_reg[3] & (L1_q[3]));


--L13_q[3] is reg:inst23|q[3]
L13_q[3] = DFFEAS(J1L12, clk, reset,  , M1L13,  ,  ,  ,  );


--N1L201 is bus_mux:inst28|alu_sr[3]~1541
N1L201 = H1_sour_reg[2] & (N1L200 & (L13_q[3]) # !N1L200 & L5_q[3]) # !H1_sour_reg[2] & (N1L200);


--N1L202 is bus_mux:inst28|alu_sr[3]~1542
N1L202 = H1_sour_reg[0] & (H1_sour_reg[1]) # !H1_sour_reg[0] & (H1_sour_reg[1] & N1L199 # !H1_sour_reg[1] & (N1L201));


--L12_q[3] is reg:inst22|q[3]
L12_q[3] = DFFEAS(J1L12, clk, reset,  , M1L12,  ,  ,  ,  );


--L8_q[3] is reg:inst18|q[3]
L8_q[3] = DFFEAS(J1L12, clk, reset,  , M1L8,  ,  ,  ,  );


--L4_q[3] is reg:inst14|q[3]
L4_q[3] = DFFEAS(J1L12, clk, reset,  , M1L4,  ,  ,  ,  );


--N1L203 is bus_mux:inst28|alu_sr[3]~1543
N1L203 = H1_sour_reg[3] & (H1_sour_reg[2]) # !H1_sour_reg[3] & (H1_sour_reg[2] & L8_q[3] # !H1_sour_reg[2] & (L4_q[3]));


--L16_q[3] is reg:inst26|q[3]
L16_q[3] = DFFEAS(J1L12, clk, reset,  , M1L16,  ,  ,  ,  );


--N1L204 is bus_mux:inst28|alu_sr[3]~1544
N1L204 = H1_sour_reg[3] & (N1L203 & (L16_q[3]) # !N1L203 & L12_q[3]) # !H1_sour_reg[3] & (N1L203);


--N1L205 is bus_mux:inst28|alu_sr[3]~1545
N1L205 = H1_sour_reg[0] & (N1L202 & (N1L204) # !N1L202 & N1L197) # !H1_sour_reg[0] & (N1L202);


--N1L206 is bus_mux:inst28|alu_sr[3]~1546
N1L206 = N1L229 & (H1_offset[3] # N1L339 & N1L205) # !N1L229 & N1L339 & N1L205;


--B1L38 is alu:inst|add~3740
B1L38 = H1_alu_func[0] $ N1L206;


--N1L31 is bus_mux:inst28|alu_dr[3]~1338
N1L31 = H1_dest_reg[2] & (H1_dest_reg[3]) # !H1_dest_reg[2] & (H1_dest_reg[3] & L10_q[3] # !H1_dest_reg[3] & (L2_q[3]));


--N1L32 is bus_mux:inst28|alu_dr[3]~1339
N1L32 = H1_dest_reg[2] & (N1L31 & (L14_q[3]) # !N1L31 & L6_q[3]) # !H1_dest_reg[2] & (N1L31);


--N1L33 is bus_mux:inst28|alu_dr[3]~1340
N1L33 = H1_dest_reg[3] & (H1_dest_reg[2]) # !H1_dest_reg[3] & (H1_dest_reg[2] & L7_q[3] # !H1_dest_reg[2] & (L3_q[3]));


--N1L34 is bus_mux:inst28|alu_dr[3]~1341
N1L34 = H1_dest_reg[3] & (N1L33 & (L15_q[3]) # !N1L33 & L11_q[3]) # !H1_dest_reg[3] & (N1L33);


--N1L35 is bus_mux:inst28|alu_dr[3]~1342
N1L35 = H1_dest_reg[2] & (H1_dest_reg[3]) # !H1_dest_reg[2] & (H1_dest_reg[3] & L9_q[3] # !H1_dest_reg[3] & (L1_q[3]));


--N1L36 is bus_mux:inst28|alu_dr[3]~1343
N1L36 = H1_dest_reg[2] & (N1L35 & (L13_q[3]) # !N1L35 & L5_q[3]) # !H1_dest_reg[2] & (N1L35);


--N1L37 is bus_mux:inst28|alu_dr[3]~1344
N1L37 = H1_dest_reg[0] & (H1_dest_reg[1]) # !H1_dest_reg[0] & (H1_dest_reg[1] & N1L34 # !H1_dest_reg[1] & (N1L36));


--N1L38 is bus_mux:inst28|alu_dr[3]~1345
N1L38 = H1_dest_reg[3] & (H1_dest_reg[2]) # !H1_dest_reg[3] & (H1_dest_reg[2] & L8_q[3] # !H1_dest_reg[2] & (L4_q[3]));


--N1L39 is bus_mux:inst28|alu_dr[3]~1346
N1L39 = H1_dest_reg[3] & (N1L38 & (L16_q[3]) # !N1L38 & L12_q[3]) # !H1_dest_reg[3] & (N1L38);


--N1L40 is bus_mux:inst28|alu_dr[3]~1347
N1L40 = H1_dest_reg[0] & (N1L37 & (N1L39) # !N1L37 & N1L32) # !H1_dest_reg[0] & (N1L37);


--K1_q[3] is pc:inst10|q[3]
K1_q[3] = DFFEAS(J1L12, clk, reset,  , H1L24,  ,  ,  ,  );


--B1L39 is alu:inst|add~3741
B1L39 = N1L152 & (N1L40 # K1_q[3] & !N1L91) # !N1L152 & (K1_q[3] & !N1L91);


--B1L40 is alu:inst|add~3742
B1L40 = B1L39 # B1L2 & A1L49;


--L11_q[2] is reg:inst21|q[2]
L11_q[2] = DFFEAS(J1L9, clk, reset,  , M1L11,  ,  ,  ,  );


--L10_q[2] is reg:inst20|q[2]
L10_q[2] = DFFEAS(J1L9, clk, reset,  , M1L10,  ,  ,  ,  );


--L9_q[2] is reg:inst19|q[2]
L9_q[2] = DFFEAS(J1L9, clk, reset,  , M1L9,  ,  ,  ,  );


--N1L185 is bus_mux:inst28|alu_sr[2]~1547
N1L185 = H1_sour_reg[1] & (H1_sour_reg[0]) # !H1_sour_reg[1] & (H1_sour_reg[0] & L10_q[2] # !H1_sour_reg[0] & (L9_q[2]));


--L12_q[2] is reg:inst22|q[2]
L12_q[2] = DFFEAS(J1L9, clk, reset,  , M1L12,  ,  ,  ,  );


--N1L186 is bus_mux:inst28|alu_sr[2]~1548
N1L186 = H1_sour_reg[1] & (N1L185 & (L12_q[2]) # !N1L185 & L11_q[2]) # !H1_sour_reg[1] & (N1L185);


--L6_q[2] is reg:inst16|q[2]
L6_q[2] = DFFEAS(J1L9, clk, reset,  , M1L6,  ,  ,  ,  );


--L7_q[2] is reg:inst17|q[2]
L7_q[2] = DFFEAS(J1L9, clk, reset,  , M1L7,  ,  ,  ,  );


--L5_q[2] is reg:inst15|q[2]
L5_q[2] = DFFEAS(J1L9, clk, reset,  , M1L5,  ,  ,  ,  );


--N1L187 is bus_mux:inst28|alu_sr[2]~1549
N1L187 = H1_sour_reg[0] & (H1_sour_reg[1]) # !H1_sour_reg[0] & (H1_sour_reg[1] & L7_q[2] # !H1_sour_reg[1] & (L5_q[2]));


--L8_q[2] is reg:inst18|q[2]
L8_q[2] = DFFEAS(J1L9, clk, reset,  , M1L8,  ,  ,  ,  );


--N1L188 is bus_mux:inst28|alu_sr[2]~1550
N1L188 = H1_sour_reg[0] & (N1L187 & (L8_q[2]) # !N1L187 & L6_q[2]) # !H1_sour_reg[0] & (N1L187);


--L2_q[2] is reg:inst12|q[2]
L2_q[2] = DFFEAS(J1L9, clk, reset,  , M1L2,  ,  ,  ,  );


--L1_q[2] is reg:inst30|q[2]
L1_q[2] = DFFEAS(J1L9, clk, reset,  , M1L1,  ,  ,  ,  );


--N1L189 is bus_mux:inst28|alu_sr[2]~1551
N1L189 = H1_sour_reg[0] & (H1_sour_reg[1]) # !H1_sour_reg[0] & (H1_sour_reg[1] & L3_q[2] # !H1_sour_reg[1] & (L1_q[2]));


--L4_q[2] is reg:inst14|q[2]
L4_q[2] = DFFEAS(J1L9, clk, reset,  , M1L4,  ,  ,  ,  );


--N1L190 is bus_mux:inst28|alu_sr[2]~1552
N1L190 = H1_sour_reg[0] & (N1L189 & (L4_q[2]) # !N1L189 & L2_q[2]) # !H1_sour_reg[0] & (N1L189);


--N1L191 is bus_mux:inst28|alu_sr[2]~1553
N1L191 = H1_sour_reg[3] & (H1_sour_reg[2]) # !H1_sour_reg[3] & (H1_sour_reg[2] & N1L188 # !H1_sour_reg[2] & (N1L190));


--L15_q[2] is reg:inst25|q[2]
L15_q[2] = DFFEAS(J1L9, clk, reset,  , M1L15,  ,  ,  ,  );


--L14_q[2] is reg:inst24|q[2]
L14_q[2] = DFFEAS(J1L9, clk, reset,  , M1L14,  ,  ,  ,  );


--L13_q[2] is reg:inst23|q[2]
L13_q[2] = DFFEAS(J1L9, clk, reset,  , M1L13,  ,  ,  ,  );


--N1L192 is bus_mux:inst28|alu_sr[2]~1554
N1L192 = H1_sour_reg[1] & (H1_sour_reg[0]) # !H1_sour_reg[1] & (H1_sour_reg[0] & L14_q[2] # !H1_sour_reg[0] & (L13_q[2]));


--L16_q[2] is reg:inst26|q[2]
L16_q[2] = DFFEAS(J1L9, clk, reset,  , M1L16,  ,  ,  ,  );


--N1L193 is bus_mux:inst28|alu_sr[2]~1555
N1L193 = H1_sour_reg[1] & (N1L192 & (L16_q[2]) # !N1L192 & L15_q[2]) # !H1_sour_reg[1] & (N1L192);


--N1L194 is bus_mux:inst28|alu_sr[2]~1556
N1L194 = H1_sour_reg[3] & (N1L191 & (N1L193) # !N1L191 & N1L186) # !H1_sour_reg[3] & (N1L191);


--N1L195 is bus_mux:inst28|alu_sr[2]~1557
N1L195 = N1L229 & (H1_offset[2] # N1L339 & N1L194) # !N1L229 & N1L339 & N1L194;


--B1L41 is alu:inst|add~3743
B1L41 = H1_alu_func[0] $ N1L195;


--N1L21 is bus_mux:inst28|alu_dr[2]~1348
N1L21 = H1_dest_reg[1] & (H1_dest_reg[0]) # !H1_dest_reg[1] & (H1_dest_reg[0] & L10_q[2] # !H1_dest_reg[0] & (L9_q[2]));


--N1L22 is bus_mux:inst28|alu_dr[2]~1349
N1L22 = H1_dest_reg[1] & (N1L21 & (L12_q[2]) # !N1L21 & L11_q[2]) # !H1_dest_reg[1] & (N1L21);


--N1L23 is bus_mux:inst28|alu_dr[2]~1350
N1L23 = H1_dest_reg[0] & (H1_dest_reg[1]) # !H1_dest_reg[0] & (H1_dest_reg[1] & L7_q[2] # !H1_dest_reg[1] & (L5_q[2]));


--N1L24 is bus_mux:inst28|alu_dr[2]~1351
N1L24 = H1_dest_reg[0] & (N1L23 & (L8_q[2]) # !N1L23 & L6_q[2]) # !H1_dest_reg[0] & (N1L23);


--N1L25 is bus_mux:inst28|alu_dr[2]~1352
N1L25 = H1_dest_reg[0] & (H1_dest_reg[1]) # !H1_dest_reg[0] & (H1_dest_reg[1] & L3_q[2] # !H1_dest_reg[1] & (L1_q[2]));


--N1L26 is bus_mux:inst28|alu_dr[2]~1353
N1L26 = H1_dest_reg[0] & (N1L25 & (L4_q[2]) # !N1L25 & L2_q[2]) # !H1_dest_reg[0] & (N1L25);


--N1L27 is bus_mux:inst28|alu_dr[2]~1354
N1L27 = H1_dest_reg[3] & (H1_dest_reg[2]) # !H1_dest_reg[3] & (H1_dest_reg[2] & N1L24 # !H1_dest_reg[2] & (N1L26));


--N1L28 is bus_mux:inst28|alu_dr[2]~1355
N1L28 = H1_dest_reg[1] & (H1_dest_reg[0]) # !H1_dest_reg[1] & (H1_dest_reg[0] & L14_q[2] # !H1_dest_reg[0] & (L13_q[2]));


--N1L29 is bus_mux:inst28|alu_dr[2]~1356
N1L29 = H1_dest_reg[1] & (N1L28 & (L16_q[2]) # !N1L28 & L15_q[2]) # !H1_dest_reg[1] & (N1L28);


--N1L30 is bus_mux:inst28|alu_dr[2]~1357
N1L30 = H1_dest_reg[3] & (N1L27 & (N1L29) # !N1L27 & N1L22) # !H1_dest_reg[3] & (N1L27);


--K1_q[2] is pc:inst10|q[2]
K1_q[2] = DFFEAS(J1L9, clk, reset,  , H1L24,  ,  ,  ,  );


--B1L42 is alu:inst|add~3744
B1L42 = N1L152 & (N1L30 # K1_q[2] & !N1L91) # !N1L152 & (K1_q[2] & !N1L91);


--B1L43 is alu:inst|add~3745
B1L43 = B1L42 # B1L2 & A1L50;


--L7_q[1] is reg:inst17|q[1]
L7_q[1] = DFFEAS(J1L6, clk, reset,  , M1L7,  ,  ,  ,  );


--L11_q[1] is reg:inst21|q[1]
L11_q[1] = DFFEAS(J1L6, clk, reset,  , M1L11,  ,  ,  ,  );


--N1L174 is bus_mux:inst28|alu_sr[1]~1558
N1L174 = H1_sour_reg[2] & (H1_sour_reg[3]) # !H1_sour_reg[2] & (H1_sour_reg[3] & L11_q[1] # !H1_sour_reg[3] & (L3_q[1]));


--L15_q[1] is reg:inst25|q[1]
L15_q[1] = DFFEAS(J1L6, clk, reset,  , M1L15,  ,  ,  ,  );


--N1L175 is bus_mux:inst28|alu_sr[1]~1559
N1L175 = H1_sour_reg[2] & (N1L174 & (L15_q[1]) # !N1L174 & L7_q[1]) # !H1_sour_reg[2] & (N1L174);


--L10_q[1] is reg:inst20|q[1]
L10_q[1] = DFFEAS(J1L6, clk, reset,  , M1L10,  ,  ,  ,  );


--L6_q[1] is reg:inst16|q[1]
L6_q[1] = DFFEAS(J1L6, clk, reset,  , M1L6,  ,  ,  ,  );


--L2_q[1] is reg:inst12|q[1]
L2_q[1] = DFFEAS(J1L6, clk, reset,  , M1L2,  ,  ,  ,  );


--N1L176 is bus_mux:inst28|alu_sr[1]~1560
N1L176 = H1_sour_reg[3] & (H1_sour_reg[2]) # !H1_sour_reg[3] & (H1_sour_reg[2] & L6_q[1] # !H1_sour_reg[2] & (L2_q[1]));


--L14_q[1] is reg:inst24|q[1]
L14_q[1] = DFFEAS(J1L6, clk, reset,  , M1L14,  ,  ,  ,  );


--N1L177 is bus_mux:inst28|alu_sr[1]~1561
N1L177 = H1_sour_reg[3] & (N1L176 & (L14_q[1]) # !N1L176 & L10_q[1]) # !H1_sour_reg[3] & (N1L176);


--L9_q[1] is reg:inst19|q[1]
L9_q[1] = DFFEAS(J1L6, clk, reset,  , M1L9,  ,  ,  ,  );


--L5_q[1] is reg:inst15|q[1]
L5_q[1] = DFFEAS(J1L6, clk, reset,  , M1L5,  ,  ,  ,  );


--L1_q[1] is reg:inst30|q[1]
L1_q[1] = DFFEAS(J1L6, clk, reset,  , M1L1,  ,  ,  ,  );


--N1L178 is bus_mux:inst28|alu_sr[1]~1562
N1L178 = H1_sour_reg[3] & (H1_sour_reg[2]) # !H1_sour_reg[3] & (H1_sour_reg[2] & L5_q[1] # !H1_sour_reg[2] & (L1_q[1]));


--L13_q[1] is reg:inst23|q[1]
L13_q[1] = DFFEAS(J1L6, clk, reset,  , M1L13,  ,  ,  ,  );


--N1L179 is bus_mux:inst28|alu_sr[1]~1563
N1L179 = H1_sour_reg[3] & (N1L178 & (L13_q[1]) # !N1L178 & L9_q[1]) # !H1_sour_reg[3] & (N1L178);


--N1L180 is bus_mux:inst28|alu_sr[1]~1564
N1L180 = H1_sour_reg[1] & (H1_sour_reg[0]) # !H1_sour_reg[1] & (H1_sour_reg[0] & N1L177 # !H1_sour_reg[0] & (N1L179));


--L8_q[1] is reg:inst18|q[1]
L8_q[1] = DFFEAS(J1L6, clk, reset,  , M1L8,  ,  ,  ,  );


--L12_q[1] is reg:inst22|q[1]
L12_q[1] = DFFEAS(J1L6, clk, reset,  , M1L12,  ,  ,  ,  );


--L4_q[1] is reg:inst14|q[1]
L4_q[1] = DFFEAS(J1L6, clk, reset,  , M1L4,  ,  ,  ,  );


--N1L181 is bus_mux:inst28|alu_sr[1]~1565
N1L181 = H1_sour_reg[2] & (H1_sour_reg[3]) # !H1_sour_reg[2] & (H1_sour_reg[3] & L12_q[1] # !H1_sour_reg[3] & (L4_q[1]));


--L16_q[1] is reg:inst26|q[1]
L16_q[1] = DFFEAS(J1L6, clk, reset,  , M1L16,  ,  ,  ,  );


--N1L182 is bus_mux:inst28|alu_sr[1]~1566
N1L182 = H1_sour_reg[2] & (N1L181 & (L16_q[1]) # !N1L181 & L8_q[1]) # !H1_sour_reg[2] & (N1L181);


--N1L183 is bus_mux:inst28|alu_sr[1]~1567
N1L183 = H1_sour_reg[1] & (N1L180 & (N1L182) # !N1L180 & N1L175) # !H1_sour_reg[1] & (N1L180);


--N1L184 is bus_mux:inst28|alu_sr[1]~1568
N1L184 = N1L229 & (H1_offset[1] # N1L339 & N1L183) # !N1L229 & N1L339 & N1L183;


--B1L44 is alu:inst|add~3746
B1L44 = H1_alu_func[0] $ N1L184;


--N1L11 is bus_mux:inst28|alu_dr[1]~1358
N1L11 = H1_dest_reg[2] & (H1_dest_reg[3]) # !H1_dest_reg[2] & (H1_dest_reg[3] & L11_q[1] # !H1_dest_reg[3] & (L3_q[1]));


--N1L12 is bus_mux:inst28|alu_dr[1]~1359
N1L12 = H1_dest_reg[2] & (N1L11 & (L15_q[1]) # !N1L11 & L7_q[1]) # !H1_dest_reg[2] & (N1L11);


--N1L13 is bus_mux:inst28|alu_dr[1]~1360
N1L13 = H1_dest_reg[3] & (H1_dest_reg[2]) # !H1_dest_reg[3] & (H1_dest_reg[2] & L6_q[1] # !H1_dest_reg[2] & (L2_q[1]));


--N1L14 is bus_mux:inst28|alu_dr[1]~1361
N1L14 = H1_dest_reg[3] & (N1L13 & (L14_q[1]) # !N1L13 & L10_q[1]) # !H1_dest_reg[3] & (N1L13);


--N1L15 is bus_mux:inst28|alu_dr[1]~1362
N1L15 = H1_dest_reg[3] & (H1_dest_reg[2]) # !H1_dest_reg[3] & (H1_dest_reg[2] & L5_q[1] # !H1_dest_reg[2] & (L1_q[1]));


--N1L16 is bus_mux:inst28|alu_dr[1]~1363
N1L16 = H1_dest_reg[3] & (N1L15 & (L13_q[1]) # !N1L15 & L9_q[1]) # !H1_dest_reg[3] & (N1L15);


--N1L17 is bus_mux:inst28|alu_dr[1]~1364
N1L17 = H1_dest_reg[1] & (H1_dest_reg[0]) # !H1_dest_reg[1] & (H1_dest_reg[0] & N1L14 # !H1_dest_reg[0] & (N1L16));


--N1L18 is bus_mux:inst28|alu_dr[1]~1365
N1L18 = H1_dest_reg[2] & (H1_dest_reg[3]) # !H1_dest_reg[2] & (H1_dest_reg[3] & L12_q[1] # !H1_dest_reg[3] & (L4_q[1]));


--N1L19 is bus_mux:inst28|alu_dr[1]~1366
N1L19 = H1_dest_reg[2] & (N1L18 & (L16_q[1]) # !N1L18 & L8_q[1]) # !H1_dest_reg[2] & (N1L18);


--N1L20 is bus_mux:inst28|alu_dr[1]~1367
N1L20 = H1_dest_reg[1] & (N1L17 & (N1L19) # !N1L17 & N1L12) # !H1_dest_reg[1] & (N1L17);


--K1_q[1] is pc:inst10|q[1]
K1_q[1] = DFFEAS(J1L6, clk, reset,  , H1L24,  ,  ,  ,  );


--B1L45 is alu:inst|add~3747
B1L45 = N1L152 & (N1L20 # K1_q[1] & !N1L91) # !N1L152 & (K1_q[1] & !N1L91);


--B1L46 is alu:inst|add~3748
B1L46 = B1L45 # B1L2 & A1L51;


--L7_q[0] is reg:inst17|q[0]
L7_q[0] = DFFEAS(B1L120, clk, reset,  , M1L7,  ,  ,  ,  );


--L6_q[0] is reg:inst16|q[0]
L6_q[0] = DFFEAS(B1L120, clk, reset,  , M1L6,  ,  ,  ,  );


--L5_q[0] is reg:inst15|q[0]
L5_q[0] = DFFEAS(B1L120, clk, reset,  , M1L5,  ,  ,  ,  );


--N1L163 is bus_mux:inst28|alu_sr[0]~1569
N1L163 = H1_sour_reg[1] & (H1_sour_reg[0]) # !H1_sour_reg[1] & (H1_sour_reg[0] & L6_q[0] # !H1_sour_reg[0] & (L5_q[0]));


--L8_q[0] is reg:inst18|q[0]
L8_q[0] = DFFEAS(B1L120, clk, reset,  , M1L8,  ,  ,  ,  );


--N1L164 is bus_mux:inst28|alu_sr[0]~1570
N1L164 = H1_sour_reg[1] & (N1L163 & (L8_q[0]) # !N1L163 & L7_q[0]) # !H1_sour_reg[1] & (N1L163);


--L10_q[0] is reg:inst20|q[0]
L10_q[0] = DFFEAS(B1L120, clk, reset,  , M1L10,  ,  ,  ,  );


--L11_q[0] is reg:inst21|q[0]
L11_q[0] = DFFEAS(B1L120, clk, reset,  , M1L11,  ,  ,  ,  );


--L9_q[0] is reg:inst19|q[0]
L9_q[0] = DFFEAS(B1L120, clk, reset,  , M1L9,  ,  ,  ,  );


--N1L165 is bus_mux:inst28|alu_sr[0]~1571
N1L165 = H1_sour_reg[0] & (H1_sour_reg[1]) # !H1_sour_reg[0] & (H1_sour_reg[1] & L11_q[0] # !H1_sour_reg[1] & (L9_q[0]));


--L12_q[0] is reg:inst22|q[0]
L12_q[0] = DFFEAS(B1L120, clk, reset,  , M1L12,  ,  ,  ,  );


--N1L166 is bus_mux:inst28|alu_sr[0]~1572
N1L166 = H1_sour_reg[0] & (N1L165 & (L12_q[0]) # !N1L165 & L10_q[0]) # !H1_sour_reg[0] & (N1L165);


--L2_q[0] is reg:inst12|q[0]
L2_q[0] = DFFEAS(B1L120, clk, reset,  , M1L2,  ,  ,  ,  );


--L1_q[0] is reg:inst30|q[0]
L1_q[0] = DFFEAS(B1L120, clk, reset,  , M1L1,  ,  ,  ,  );


--N1L167 is bus_mux:inst28|alu_sr[0]~1573
N1L167 = H1_sour_reg[1] & (H1_sour_reg[0]) # !H1_sour_reg[1] & (H1_sour_reg[0] & L2_q[0] # !H1_sour_reg[0] & (L1_q[0]));


--L4_q[0] is reg:inst14|q[0]
L4_q[0] = DFFEAS(B1L120, clk, reset,  , M1L4,  ,  ,  ,  );


--N1L168 is bus_mux:inst28|alu_sr[0]~1574
N1L168 = H1_sour_reg[1] & (N1L167 & (L4_q[0]) # !N1L167 & L3_q[0]) # !H1_sour_reg[1] & (N1L167);


--N1L169 is bus_mux:inst28|alu_sr[0]~1575
N1L169 = H1_sour_reg[2] & (H1_sour_reg[3]) # !H1_sour_reg[2] & (H1_sour_reg[3] & N1L166 # !H1_sour_reg[3] & (N1L168));


--L14_q[0] is reg:inst24|q[0]
L14_q[0] = DFFEAS(B1L120, clk, reset,  , M1L14,  ,  ,  ,  );


--L15_q[0] is reg:inst25|q[0]
L15_q[0] = DFFEAS(B1L120, clk, reset,  , M1L15,  ,  ,  ,  );


--L13_q[0] is reg:inst23|q[0]
L13_q[0] = DFFEAS(B1L120, clk, reset,  , M1L13,  ,  ,  ,  );


--N1L170 is bus_mux:inst28|alu_sr[0]~1576
N1L170 = H1_sour_reg[0] & (H1_sour_reg[1]) # !H1_sour_reg[0] & (H1_sour_reg[1] & L15_q[0] # !H1_sour_reg[1] & (L13_q[0]));


--L16_q[0] is reg:inst26|q[0]
L16_q[0] = DFFEAS(B1L120, clk, reset,  , M1L16,  ,  ,  ,  );


--N1L171 is bus_mux:inst28|alu_sr[0]~1577
N1L171 = H1_sour_reg[0] & (N1L170 & (L16_q[0]) # !N1L170 & L14_q[0]) # !H1_sour_reg[0] & (N1L170);


--N1L172 is bus_mux:inst28|alu_sr[0]~1578
N1L172 = H1_sour_reg[2] & (N1L169 & (N1L171) # !N1L169 & N1L164) # !H1_sour_reg[2] & (N1L169);


--N1L173 is bus_mux:inst28|alu_sr[0]~1579
N1L173 = N1L229 & (H1_offset[0] # N1L339 & N1L172) # !N1L229 & N1L339 & N1L172;


--B1L47 is alu:inst|add~3749
B1L47 = H1_alu_func[0] $ N1L173;


--N1L1 is bus_mux:inst28|alu_dr[0]~1368
N1L1 = H1_dest_reg[1] & (H1_dest_reg[0]) # !H1_dest_reg[1] & (H1_dest_reg[0] & L6_q[0] # !H1_dest_reg[0] & (L5_q[0]));


--N1L2 is bus_mux:inst28|alu_dr[0]~1369
N1L2 = H1_dest_reg[1] & (N1L1 & (L8_q[0]) # !N1L1 & L7_q[0]) # !H1_dest_reg[1] & (N1L1);


--N1L3 is bus_mux:inst28|alu_dr[0]~1370
N1L3 = H1_dest_reg[0] & (H1_dest_reg[1]) # !H1_dest_reg[0] & (H1_dest_reg[1] & L11_q[0] # !H1_dest_reg[1] & (L9_q[0]));


--N1L4 is bus_mux:inst28|alu_dr[0]~1371
N1L4 = H1_dest_reg[0] & (N1L3 & (L12_q[0]) # !N1L3 & L10_q[0]) # !H1_dest_reg[0] & (N1L3);


--N1L5 is bus_mux:inst28|alu_dr[0]~1372
N1L5 = H1_dest_reg[1] & (H1_dest_reg[0]) # !H1_dest_reg[1] & (H1_dest_reg[0] & L2_q[0] # !H1_dest_reg[0] & (L1_q[0]));


--N1L6 is bus_mux:inst28|alu_dr[0]~1373
N1L6 = H1_dest_reg[1] & (N1L5 & (L4_q[0]) # !N1L5 & L3_q[0]) # !H1_dest_reg[1] & (N1L5);


--N1L7 is bus_mux:inst28|alu_dr[0]~1374
N1L7 = H1_dest_reg[2] & (H1_dest_reg[3]) # !H1_dest_reg[2] & (H1_dest_reg[3] & N1L4 # !H1_dest_reg[3] & (N1L6));


--N1L8 is bus_mux:inst28|alu_dr[0]~1375
N1L8 = H1_dest_reg[0] & (H1_dest_reg[1]) # !H1_dest_reg[0] & (H1_dest_reg[1] & L15_q[0] # !H1_dest_reg[1] & (L13_q[0]));


--N1L9 is bus_mux:inst28|alu_dr[0]~1376
N1L9 = H1_dest_reg[0] & (N1L8 & (L16_q[0]) # !N1L8 & L14_q[0]) # !H1_dest_reg[0] & (N1L8);


--N1L10 is bus_mux:inst28|alu_dr[0]~1377
N1L10 = H1_dest_reg[2] & (N1L7 & (N1L9) # !N1L7 & N1L2) # !H1_dest_reg[2] & (N1L7);


--K1_q[0] is pc:inst10|q[0]
K1_q[0] = DFFEAS(B1L120, clk, reset,  , H1L24,  ,  ,  ,  );


--B1L48 is alu:inst|add~3750
B1L48 = N1L152 & (N1L10 # K1_q[0] & !N1L91) # !N1L152 & (K1_q[0] & !N1L91);


--B1L49 is alu:inst|add~3751
B1L49 = B1L48 # B1L2 & A1L52;


--P1L1 is t1:inst31|alu_cin~52
P1L1 = H1_sci[1] & (H1_sci[0] # !D1_flag_c) # !H1_sci[1] & !H1_sci[0];


--B1L51 is alu:inst|add~3753
B1L51 = CARRY(H1_alu_func[0] $ !P1L1);


--B1L52 is alu:inst|add~3754
B1L52 = B1L47 & (B1L49 & B1L51 & VCC # !B1L49 & !B1L51) # !B1L47 & (B1L49 & !B1L51 # !B1L49 & (B1L51 # GND));

--B1L53 is alu:inst|add~3755
B1L53 = CARRY(B1L47 & !B1L49 & !B1L51 # !B1L47 & (!B1L51 # !B1L49));


--B1L54 is alu:inst|add~3756
B1L54 = (B1L44 $ B1L46 $ !B1L53) # GND;

--B1L55 is alu:inst|add~3757
B1L55 = CARRY(B1L44 & (B1L46 # !B1L53) # !B1L44 & B1L46 & !B1L53);


--B1L56 is alu:inst|add~3758
B1L56 = B1L41 & (B1L43 & B1L55 & VCC # !B1L43 & !B1L55) # !B1L41 & (B1L43 & !B1L55 # !B1L43 & (B1L55 # GND));

--B1L57 is alu:inst|add~3759
B1L57 = CARRY(B1L41 & !B1L43 & !B1L55 # !B1L41 & (!B1L55 # !B1L43));


--B1L58 is alu:inst|add~3760
B1L58 = (B1L38 $ B1L40 $ !B1L57) # GND;

--B1L59 is alu:inst|add~3761
B1L59 = CARRY(B1L38 & (B1L40 # !B1L57) # !B1L38 & B1L40 & !B1L57);


--B1L60 is alu:inst|add~3762
B1L60 = B1L35 & (B1L37 & B1L59 & VCC # !B1L37 & !B1L59) # !B1L35 & (B1L37 & !B1L59 # !B1L37 & (B1L59 # GND));

--B1L61 is alu:inst|add~3763
B1L61 = CARRY(B1L35 & !B1L37 & !B1L59 # !B1L35 & (!B1L59 # !B1L37));


--B1L62 is alu:inst|add~3764
B1L62 = (B1L32 $ B1L34 $ !B1L61) # GND;

--B1L63 is alu:inst|add~3765
B1L63 = CARRY(B1L32 & (B1L34 # !B1L61) # !B1L32 & B1L34 & !B1L61);


--B1L64 is alu:inst|add~3766
B1L64 = B1L29 & (B1L31 & B1L63 & VCC # !B1L31 & !B1L63) # !B1L29 & (B1L31 & !B1L63 # !B1L31 & (B1L63 # GND));

--B1L65 is alu:inst|add~3767
B1L65 = CARRY(B1L29 & !B1L31 & !B1L63 # !B1L29 & (!B1L63 # !B1L31));


--B1L66 is alu:inst|add~3768
B1L66 = (B1L26 $ B1L28 $ !B1L65) # GND;

--B1L67 is alu:inst|add~3769
B1L67 = CARRY(B1L26 & (B1L28 # !B1L65) # !B1L26 & B1L28 & !B1L65);


--B1L68 is alu:inst|add~3770
B1L68 = B1L23 & (B1L25 & B1L67 & VCC # !B1L25 & !B1L67) # !B1L23 & (B1L25 & !B1L67 # !B1L25 & (B1L67 # GND));

--B1L69 is alu:inst|add~3771
B1L69 = CARRY(B1L23 & !B1L25 & !B1L67 # !B1L23 & (!B1L67 # !B1L25));


--B1L70 is alu:inst|add~3772
B1L70 = (B1L20 $ B1L22 $ !B1L69) # GND;

--B1L71 is alu:inst|add~3773
B1L71 = CARRY(B1L20 & (B1L22 # !B1L69) # !B1L20 & B1L22 & !B1L69);


--B1L72 is alu:inst|add~3774
B1L72 = B1L17 & (B1L19 & B1L71 & VCC # !B1L19 & !B1L71) # !B1L17 & (B1L19 & !B1L71 # !B1L19 & (B1L71 # GND));

--B1L73 is alu:inst|add~3775
B1L73 = CARRY(B1L17 & !B1L19 & !B1L71 # !B1L17 & (!B1L71 # !B1L19));


--B1L74 is alu:inst|add~3776
B1L74 = (B1L14 $ B1L16 $ !B1L73) # GND;

--B1L75 is alu:inst|add~3777
B1L75 = CARRY(B1L14 & (B1L16 # !B1L73) # !B1L14 & B1L16 & !B1L73);


--B1L76 is alu:inst|add~3778
B1L76 = B1L11 & (B1L13 & B1L75 & VCC # !B1L13 & !B1L75) # !B1L11 & (B1L13 & !B1L75 # !B1L13 & (B1L75 # GND));

--B1L77 is alu:inst|add~3779
B1L77 = CARRY(B1L11 & !B1L13 & !B1L75 # !B1L11 & (!B1L75 # !B1L13));


--B1L78 is alu:inst|add~3780
B1L78 = (B1L8 $ B1L10 $ !B1L77) # GND;

--B1L79 is alu:inst|add~3781
B1L79 = CARRY(B1L8 & (B1L10 # !B1L77) # !B1L8 & B1L10 & !B1L77);


--B1L80 is alu:inst|add~3782
B1L80 = B1L5 & (B1L7 & B1L79 & VCC # !B1L7 & !B1L79) # !B1L5 & (B1L7 & !B1L79 # !B1L7 & (B1L79 # GND));

--B1L81 is alu:inst|add~3783
B1L81 = CARRY(B1L5 & !B1L7 & !B1L79 # !B1L5 & (!B1L79 # !B1L7));


--B1L82 is alu:inst|add~3784
B1L82 = B1L4 $ B1L3 $ !B1L81;


--B1L168 is alu:inst|alu_out[15]~5364
B1L168 = B1L82 & !H1_alu_func[1] & !H1_alu_func[2];


--B1L169 is alu:inst|alu_out[15]~5365
B1L169 = H1_alu_func[0] & B1L7 # !H1_alu_func[0] & (N1L340 $ B1L3);


--B1L127 is alu:inst|alu_out[3]~5366
B1L127 = H1_alu_func[2] & !H1_alu_func[1];


--B1L170 is alu:inst|alu_out[15]~5367
B1L170 = B1L167 # B1L168 # B1L169 & B1L127;


--R1L273 is reg_out:inst33|reg_data[15]~3069
R1L273 = reg_sel[0] & (R1L272 & (B1L170) # !R1L272 & N1L340) # !reg_sel[0] & (R1L272);


--R1L274 is reg_out:inst33|reg_data[15]~3070
R1L274 = R1L273 & !reg_sel[3] & !reg_sel[2];


--R1L275 is reg_out:inst33|reg_data[15]~3071
R1L275 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & L11_q[15] # !reg_sel[3] & (L3_q[15]));


--R1L276 is reg_out:inst33|reg_data[15]~3072
R1L276 = reg_sel[2] & (R1L275 & (L15_q[15]) # !R1L275 & L7_q[15]) # !reg_sel[2] & (R1L275);


--R1L277 is reg_out:inst33|reg_data[15]~3073
R1L277 = reg_sel[3] & (reg_sel[2]) # !reg_sel[3] & (reg_sel[2] & L6_q[15] # !reg_sel[2] & (L2_q[15]));


--R1L278 is reg_out:inst33|reg_data[15]~3074
R1L278 = reg_sel[3] & (R1L277 & (L14_q[15]) # !R1L277 & L10_q[15]) # !reg_sel[3] & (R1L277);


--R1L279 is reg_out:inst33|reg_data[15]~3075
R1L279 = reg_sel[3] & (reg_sel[2]) # !reg_sel[3] & (reg_sel[2] & L5_q[15] # !reg_sel[2] & (L1_q[15]));


--R1L280 is reg_out:inst33|reg_data[15]~3076
R1L280 = reg_sel[3] & (R1L279 & (L13_q[15]) # !R1L279 & L9_q[15]) # !reg_sel[3] & (R1L279);


--R1L281 is reg_out:inst33|reg_data[15]~3077
R1L281 = reg_sel[1] & (reg_sel[0]) # !reg_sel[1] & (reg_sel[0] & R1L278 # !reg_sel[0] & (R1L280));


--R1L282 is reg_out:inst33|reg_data[15]~3078
R1L282 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & L12_q[15] # !reg_sel[3] & (L4_q[15]));


--R1L283 is reg_out:inst33|reg_data[15]~3079
R1L283 = reg_sel[2] & (R1L282 & (L16_q[15]) # !R1L282 & L8_q[15]) # !reg_sel[2] & (R1L282);


--R1L284 is reg_out:inst33|reg_data[15]~3080
R1L284 = reg_sel[1] & (R1L281 & (R1L283) # !R1L281 & R1L276) # !reg_sel[1] & (R1L281);


--R1L285 is reg_out:inst33|reg_data[15]~3081
R1L285 = R1L284 & !sel[1];


--R1L286 is reg_out:inst33|reg_data[15]~3082
R1L286 = R1L268 & (!R1L270) # !R1L268 & (R1L270 & R1L274 # !R1L270 & (R1L285));


--R1_reg_data[15] is reg_out:inst33|reg_data[15]
R1_reg_data[15] = R1L271 & (R1L286 & (R1L267) # !R1L286 & G1_q[15]) # !R1L271 & (R1L286);


--G1_q[14] is ir:inst7|q[14]
G1_q[14] = DFFEAS(A1L38, clk, reset,  , G1L1,  ,  ,  ,  );


--R1L247 is reg_out:inst33|reg_data[14]~3083
R1L247 = reg_sel[3] & reg_sel[1] & reg_sel[2] & K1_q[14];


--R1L123 is reg_out:inst33|reg_data[7]~3084
R1L123 = reg_sel[0] & (sel[1] # reg_sel[1] & !reg_sel[2]);


--R1L124 is reg_out:inst33|reg_data[7]~3085
R1L124 = sel[1] & (reg_sel[3] & R1L269 # !R1L123);


--B1L128 is alu:inst|alu_out[3]~5368
B1L128 = H1_alu_func[2] & !H1_alu_func[0] # !H1_alu_func[1];


--B1L129 is alu:inst|alu_out[3]~5369
B1L129 = H1_alu_func[1] & (H1_alu_func[0] # H1_alu_func[2]);


--B1L163 is alu:inst|alu_out[14]~5370
B1L163 = B1L128 & (B1L129 & B1L3 # !B1L129 & (B1L80)) # !B1L128 & (!B1L129);


--B1L164 is alu:inst|alu_out[14]~5371
B1L164 = B1L163 & (N1L328 & B1L7 # !B1L166) # !B1L163 & B1L166 & (N1L328 # B1L7);


--B1L165 is alu:inst|alu_out[14]~5372
B1L165 = H1_alu_func[0] & B1L10 # !H1_alu_func[0] & (B1L7 $ N1L328);


--J1L45 is ar:inst9|q[14]~50
J1L45 = B1L127 & (B1L165) # !B1L127 & B1L164;


--R1L125 is reg_out:inst33|reg_data[7]~3086
R1L125 = reg_sel[1] # reg_sel[2];


--C1_q[14] is reg_testa:inst1|q[14]
C1_q[14] = DFFEAS(F1_output[2], clk, reset,  ,  ,  ,  ,  ,  );


--R1L248 is reg_out:inst33|reg_data[14]~3087
R1L248 = C1_q[14] & !reg_sel[0];


--R1L126 is reg_out:inst33|reg_data[7]~3088
R1L126 = reg_sel[1] $ !reg_sel[2];


--R1L127 is reg_out:inst33|reg_data[7]~3089
R1L127 = reg_sel[1] # reg_sel[0] & !reg_sel[2];


--R1L249 is reg_out:inst33|reg_data[14]~3090
R1L249 = R1L126 & (!R1L127) # !R1L126 & (R1L127 & B1L7 # !R1L127 & (R1L248));


--R1L250 is reg_out:inst33|reg_data[14]~3091
R1L250 = R1L125 & (R1L249) # !R1L125 & (R1L249 & (H1_offset[7]) # !R1L249 & N1L328);


--R1L251 is reg_out:inst33|reg_data[14]~3092
R1L251 = sel[1] & (!R1L123) # !sel[1] & (R1L123 & J1L45 # !R1L123 & (R1L250));


--R1L252 is reg_out:inst33|reg_data[14]~3093
R1L252 = R1L124 & (R1L251 & (R1L247) # !R1L251 & G1_q[14]) # !R1L124 & (R1L251);


--R1L253 is reg_out:inst33|reg_data[14]~3094
R1L253 = !sel[0] & !sel[1];


--R1L254 is reg_out:inst33|reg_data[14]~3095
R1L254 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & L11_q[14] # !reg_sel[3] & (L3_q[14]));


--R1L255 is reg_out:inst33|reg_data[14]~3096
R1L255 = reg_sel[2] & (R1L254 & (L15_q[14]) # !R1L254 & L7_q[14]) # !reg_sel[2] & (R1L254);


--R1L256 is reg_out:inst33|reg_data[14]~3097
R1L256 = reg_sel[3] & (reg_sel[2]) # !reg_sel[3] & (reg_sel[2] & L6_q[14] # !reg_sel[2] & (L2_q[14]));


--R1L257 is reg_out:inst33|reg_data[14]~3098
R1L257 = reg_sel[3] & (R1L256 & (L14_q[14]) # !R1L256 & L10_q[14]) # !reg_sel[3] & (R1L256);


--R1L258 is reg_out:inst33|reg_data[14]~3099
R1L258 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & L9_q[14] # !reg_sel[3] & (L1_q[14]));


--R1L259 is reg_out:inst33|reg_data[14]~3100
R1L259 = reg_sel[2] & (R1L258 & (L13_q[14]) # !R1L258 & L5_q[14]) # !reg_sel[2] & (R1L258);


--R1L260 is reg_out:inst33|reg_data[14]~3101
R1L260 = reg_sel[1] & (reg_sel[0]) # !reg_sel[1] & (reg_sel[0] & R1L257 # !reg_sel[0] & (R1L259));


--R1L261 is reg_out:inst33|reg_data[14]~3102
R1L261 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & L12_q[14] # !reg_sel[3] & (L4_q[14]));


--R1L262 is reg_out:inst33|reg_data[14]~3103
R1L262 = reg_sel[2] & (R1L261 & (L16_q[14]) # !R1L261 & L8_q[14]) # !reg_sel[2] & (R1L261);


--R1L263 is reg_out:inst33|reg_data[14]~3104
R1L263 = reg_sel[1] & (R1L260 & (R1L262) # !R1L260 & R1L255) # !reg_sel[1] & (R1L260);


--R1L264 is reg_out:inst33|reg_data[14]~3105
R1L264 = sel[0] & (sel[1] # !reg_sel[3]);


--R1L265 is reg_out:inst33|reg_data[14]~3106
R1L265 = R1L252 & (R1L264 # R1L253 & R1L263) # !R1L252 & R1L253 & R1L263;


--G1_q[13] is ir:inst7|q[13]
G1_q[13] = DFFEAS(A1L39, clk, reset,  , G1L1,  ,  ,  ,  );


--R1L230 is reg_out:inst33|reg_data[13]~3107
R1L230 = reg_sel[3] & reg_sel[1] & reg_sel[2] & K1_q[13];


--B1L160 is alu:inst|alu_out[13]~5373
B1L160 = B1L128 & (B1L129 & B1L7 # !B1L129 & (B1L78)) # !B1L128 & (!B1L129);


--B1L161 is alu:inst|alu_out[13]~5374
B1L161 = B1L160 & (B1L10 & N1L317 # !B1L166) # !B1L160 & B1L166 & (B1L10 # N1L317);


--B1L162 is alu:inst|alu_out[13]~5375
B1L162 = H1_alu_func[0] & B1L13 # !H1_alu_func[0] & (N1L317 $ B1L10);


--J1L42 is ar:inst9|q[13]~51
J1L42 = B1L127 & (B1L162) # !B1L127 & B1L161;


--C1_q[13] is reg_testa:inst1|q[13]
C1_q[13] = DFFEAS(F1L2, clk, reset,  ,  ,  ,  ,  ,  );


--R1L231 is reg_out:inst33|reg_data[13]~3108
R1L231 = C1_q[13] & !reg_sel[0];


--R1L232 is reg_out:inst33|reg_data[13]~3109
R1L232 = R1L126 & (!R1L127) # !R1L126 & (R1L127 & B1L10 # !R1L127 & (R1L231));


--R1L233 is reg_out:inst33|reg_data[13]~3110
R1L233 = R1L125 & (R1L232) # !R1L125 & (R1L232 & (H1_offset[7]) # !R1L232 & N1L317);


--R1L234 is reg_out:inst33|reg_data[13]~3111
R1L234 = sel[1] & (!R1L123) # !sel[1] & (R1L123 & J1L42 # !R1L123 & (R1L233));


--R1L235 is reg_out:inst33|reg_data[13]~3112
R1L235 = R1L124 & (R1L234 & (R1L230) # !R1L234 & G1_q[13]) # !R1L124 & (R1L234);


--R1L236 is reg_out:inst33|reg_data[13]~3113
R1L236 = reg_sel[3] & (reg_sel[2]) # !reg_sel[3] & (reg_sel[2] & L6_q[13] # !reg_sel[2] & (L2_q[13]));


--R1L237 is reg_out:inst33|reg_data[13]~3114
R1L237 = reg_sel[3] & (R1L236 & (L14_q[13]) # !R1L236 & L10_q[13]) # !reg_sel[3] & (R1L236);


--R1L238 is reg_out:inst33|reg_data[13]~3115
R1L238 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & L11_q[13] # !reg_sel[3] & (L3_q[13]));


--R1L239 is reg_out:inst33|reg_data[13]~3116
R1L239 = reg_sel[2] & (R1L238 & (L15_q[13]) # !R1L238 & L7_q[13]) # !reg_sel[2] & (R1L238);


--R1L240 is reg_out:inst33|reg_data[13]~3117
R1L240 = reg_sel[3] & (reg_sel[2]) # !reg_sel[3] & (reg_sel[2] & L5_q[13] # !reg_sel[2] & (L1_q[13]));


--R1L241 is reg_out:inst33|reg_data[13]~3118
R1L241 = reg_sel[3] & (R1L240 & (L13_q[13]) # !R1L240 & L9_q[13]) # !reg_sel[3] & (R1L240);


--R1L242 is reg_out:inst33|reg_data[13]~3119
R1L242 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & R1L239 # !reg_sel[1] & (R1L241));


--R1L243 is reg_out:inst33|reg_data[13]~3120
R1L243 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & L12_q[13] # !reg_sel[3] & (L4_q[13]));


--R1L244 is reg_out:inst33|reg_data[13]~3121
R1L244 = reg_sel[2] & (R1L243 & (L16_q[13]) # !R1L243 & L8_q[13]) # !reg_sel[2] & (R1L243);


--R1L245 is reg_out:inst33|reg_data[13]~3122
R1L245 = reg_sel[0] & (R1L242 & (R1L244) # !R1L242 & R1L237) # !reg_sel[0] & (R1L242);


--R1L246 is reg_out:inst33|reg_data[13]~3123
R1L246 = R1L253 & (R1L245 # R1L264 & R1L235) # !R1L253 & R1L264 & R1L235;


--G1_q[12] is ir:inst7|q[12]
G1_q[12] = DFFEAS(A1L40, clk, reset,  , G1L1,  ,  ,  ,  );


--R1L213 is reg_out:inst33|reg_data[12]~3124
R1L213 = reg_sel[3] & reg_sel[1] & reg_sel[2] & K1_q[12];


--B1L157 is alu:inst|alu_out[12]~5376
B1L157 = B1L128 & (B1L129 & B1L10 # !B1L129 & (B1L76)) # !B1L128 & (!B1L129);


--B1L158 is alu:inst|alu_out[12]~5377
B1L158 = B1L157 & (B1L13 & N1L306 # !B1L166) # !B1L157 & B1L166 & (B1L13 # N1L306);


--B1L159 is alu:inst|alu_out[12]~5378
B1L159 = H1_alu_func[0] & B1L16 # !H1_alu_func[0] & (N1L306 $ B1L13);


--J1L39 is ar:inst9|q[12]~52
J1L39 = B1L127 & (B1L159) # !B1L127 & B1L158;


--C1_q[12] is reg_testa:inst1|q[12]
C1_q[12] = DFFEAS(F1L4, clk, reset,  ,  ,  ,  ,  ,  );


--R1L214 is reg_out:inst33|reg_data[12]~3125
R1L214 = C1_q[12] & !reg_sel[0];


--R1L215 is reg_out:inst33|reg_data[12]~3126
R1L215 = R1L126 & (!R1L127) # !R1L126 & (R1L127 & B1L13 # !R1L127 & (R1L214));


--R1L216 is reg_out:inst33|reg_data[12]~3127
R1L216 = R1L125 & (R1L215) # !R1L125 & (R1L215 & (H1_offset[7]) # !R1L215 & N1L306);


--R1L217 is reg_out:inst33|reg_data[12]~3128
R1L217 = sel[1] & (!R1L123) # !sel[1] & (R1L123 & J1L39 # !R1L123 & (R1L216));


--R1L218 is reg_out:inst33|reg_data[12]~3129
R1L218 = R1L124 & (R1L217 & (R1L213) # !R1L217 & G1_q[12]) # !R1L124 & (R1L217);


--R1L219 is reg_out:inst33|reg_data[12]~3130
R1L219 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & L11_q[12] # !reg_sel[3] & (L3_q[12]));


--R1L220 is reg_out:inst33|reg_data[12]~3131
R1L220 = reg_sel[2] & (R1L219 & (L15_q[12]) # !R1L219 & L7_q[12]) # !reg_sel[2] & (R1L219);


--R1L221 is reg_out:inst33|reg_data[12]~3132
R1L221 = reg_sel[3] & (reg_sel[2]) # !reg_sel[3] & (reg_sel[2] & L6_q[12] # !reg_sel[2] & (L2_q[12]));


--R1L222 is reg_out:inst33|reg_data[12]~3133
R1L222 = reg_sel[3] & (R1L221 & (L14_q[12]) # !R1L221 & L10_q[12]) # !reg_sel[3] & (R1L221);


--R1L223 is reg_out:inst33|reg_data[12]~3134
R1L223 = reg_sel[3] & (reg_sel[2]) # !reg_sel[3] & (reg_sel[2] & L5_q[12] # !reg_sel[2] & (L1_q[12]));


--R1L224 is reg_out:inst33|reg_data[12]~3135
R1L224 = reg_sel[3] & (R1L223 & (L13_q[12]) # !R1L223 & L9_q[12]) # !reg_sel[3] & (R1L223);


--R1L225 is reg_out:inst33|reg_data[12]~3136
R1L225 = reg_sel[1] & (reg_sel[0]) # !reg_sel[1] & (reg_sel[0] & R1L222 # !reg_sel[0] & (R1L224));


--R1L226 is reg_out:inst33|reg_data[12]~3137
R1L226 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & L12_q[12] # !reg_sel[3] & (L4_q[12]));


--R1L227 is reg_out:inst33|reg_data[12]~3138
R1L227 = reg_sel[2] & (R1L226 & (L16_q[12]) # !R1L226 & L8_q[12]) # !reg_sel[2] & (R1L226);


--R1L228 is reg_out:inst33|reg_data[12]~3139
R1L228 = reg_sel[1] & (R1L225 & (R1L227) # !R1L225 & R1L220) # !reg_sel[1] & (R1L225);


--R1L229 is reg_out:inst33|reg_data[12]~3140
R1L229 = R1L253 & (R1L228 # R1L264 & R1L218) # !R1L253 & R1L264 & R1L218;


--G1_q[11] is ir:inst7|q[11]
G1_q[11] = DFFEAS(A1L41, clk, reset,  , G1L1,  ,  ,  ,  );


--R1L197 is reg_out:inst33|reg_data[11]~3141
R1L197 = reg_sel[3] & reg_sel[1] & reg_sel[2] & K1_q[11];


--R1L198 is reg_out:inst33|reg_data[11]~3142
R1L198 = reg_sel[1] & (reg_sel[0]) # !reg_sel[1] & (reg_sel[0] & N1L295 # !reg_sel[0] & (H1_offset[7]));


--B1L154 is alu:inst|alu_out[11]~5379
B1L154 = B1L128 & (B1L129 & B1L13 # !B1L129 & (B1L74)) # !B1L128 & (!B1L129);


--B1L155 is alu:inst|alu_out[11]~5380
B1L155 = B1L154 & (N1L295 & B1L16 # !B1L166) # !B1L154 & B1L166 & (N1L295 # B1L16);


--B1L156 is alu:inst|alu_out[11]~5381
B1L156 = H1_alu_func[0] & B1L19 # !H1_alu_func[0] & (N1L295 $ B1L16);


--J1L36 is ar:inst9|q[11]~53
J1L36 = B1L127 & (B1L156) # !B1L127 & B1L155;


--R1L199 is reg_out:inst33|reg_data[11]~3143
R1L199 = reg_sel[1] & (R1L198 & (J1L36) # !R1L198 & B1L16) # !reg_sel[1] & (R1L198);


--R1L200 is reg_out:inst33|reg_data[11]~3144
R1L200 = R1L199 & !reg_sel[3] & !reg_sel[2];


--R1L201 is reg_out:inst33|reg_data[11]~3145
R1L201 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & L11_q[11] # !reg_sel[1] & (L9_q[11]));


--R1L202 is reg_out:inst33|reg_data[11]~3146
R1L202 = reg_sel[0] & (R1L201 & (L12_q[11]) # !R1L201 & L10_q[11]) # !reg_sel[0] & (R1L201);


--R1L203 is reg_out:inst33|reg_data[11]~3147
R1L203 = reg_sel[1] & (reg_sel[0]) # !reg_sel[1] & (reg_sel[0] & L6_q[11] # !reg_sel[0] & (L5_q[11]));


--R1L204 is reg_out:inst33|reg_data[11]~3148
R1L204 = reg_sel[1] & (R1L203 & (L8_q[11]) # !R1L203 & L7_q[11]) # !reg_sel[1] & (R1L203);


--R1L205 is reg_out:inst33|reg_data[11]~3149
R1L205 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & L3_q[11] # !reg_sel[1] & (L1_q[11]));


--R1L206 is reg_out:inst33|reg_data[11]~3150
R1L206 = reg_sel[0] & (R1L205 & (L4_q[11]) # !R1L205 & L2_q[11]) # !reg_sel[0] & (R1L205);


--R1L207 is reg_out:inst33|reg_data[11]~3151
R1L207 = reg_sel[3] & (reg_sel[2]) # !reg_sel[3] & (reg_sel[2] & R1L204 # !reg_sel[2] & (R1L206));


--R1L208 is reg_out:inst33|reg_data[11]~3152
R1L208 = reg_sel[1] & (reg_sel[0]) # !reg_sel[1] & (reg_sel[0] & L14_q[11] # !reg_sel[0] & (L13_q[11]));


--R1L209 is reg_out:inst33|reg_data[11]~3153
R1L209 = reg_sel[1] & (R1L208 & (L16_q[11]) # !R1L208 & L15_q[11]) # !reg_sel[1] & (R1L208);


--R1L210 is reg_out:inst33|reg_data[11]~3154
R1L210 = reg_sel[3] & (R1L207 & (R1L209) # !R1L207 & R1L202) # !reg_sel[3] & (R1L207);


--R1L211 is reg_out:inst33|reg_data[11]~3155
R1L211 = R1L210 & !sel[1];


--R1L212 is reg_out:inst33|reg_data[11]~3156
R1L212 = R1L268 & (!R1L270) # !R1L268 & (R1L270 & R1L200 # !R1L270 & (R1L211));


--R1_reg_data[11] is reg_out:inst33|reg_data[11]
R1_reg_data[11] = R1L271 & (R1L212 & (R1L197) # !R1L212 & G1_q[11]) # !R1L271 & (R1L212);


--G1_q[10] is ir:inst7|q[10]
G1_q[10] = DFFEAS(A1L42, clk, reset,  , G1L1,  ,  ,  ,  );


--R1L179 is reg_out:inst33|reg_data[10]~3157
R1L179 = reg_sel[3] & reg_sel[1] & reg_sel[2] & K1_q[10];


--B1L151 is alu:inst|alu_out[10]~5382
B1L151 = B1L128 & (B1L129 & B1L16 # !B1L129 & (B1L72)) # !B1L128 & (!B1L129);


--B1L152 is alu:inst|alu_out[10]~5383
B1L152 = B1L151 & (B1L19 & N1L284 # !B1L166) # !B1L151 & B1L166 & (B1L19 # N1L284);


--B1L153 is alu:inst|alu_out[10]~5384
B1L153 = H1_alu_func[0] & B1L22 # !H1_alu_func[0] & (N1L284 $ B1L19);


--J1L33 is ar:inst9|q[10]~54
J1L33 = B1L127 & (B1L153) # !B1L127 & B1L152;


--C1_q[10] is reg_testa:inst1|q[10]
C1_q[10] = DFFEAS(H1_alu_func[2], clk, reset,  ,  ,  ,  ,  ,  );


--R1L180 is reg_out:inst33|reg_data[10]~3158
R1L180 = C1_q[10] & !reg_sel[0];


--R1L181 is reg_out:inst33|reg_data[10]~3159
R1L181 = R1L126 & (!R1L127) # !R1L126 & (R1L127 & B1L19 # !R1L127 & (R1L180));


--R1L182 is reg_out:inst33|reg_data[10]~3160
R1L182 = R1L125 & (R1L181) # !R1L125 & (R1L181 & (H1_offset[7]) # !R1L181 & N1L284);


--R1L183 is reg_out:inst33|reg_data[10]~3161
R1L183 = sel[1] & (!R1L123) # !sel[1] & (R1L123 & J1L33 # !R1L123 & (R1L182));


--R1L184 is reg_out:inst33|reg_data[10]~3162
R1L184 = R1L124 & (R1L183 & (R1L179) # !R1L183 & G1_q[10]) # !R1L124 & (R1L183);


--R1L185 is reg_out:inst33|reg_data[10]~3163
R1L185 = reg_sel[1] & (reg_sel[3]) # !reg_sel[1] & (reg_sel[3] & L13_q[10] # !reg_sel[3] & (L5_q[10]));


--R1L186 is reg_out:inst33|reg_data[10]~3164
R1L186 = reg_sel[1] & (R1L185 & (L15_q[10]) # !R1L185 & L7_q[10]) # !reg_sel[1] & (R1L185);


--R1L187 is reg_out:inst33|reg_data[10]~3165
R1L187 = reg_sel[3] & (reg_sel[1]) # !reg_sel[3] & (reg_sel[1] & L4_q[10] # !reg_sel[1] & (L2_q[10]));


--R1L188 is reg_out:inst33|reg_data[10]~3166
R1L188 = reg_sel[3] & (R1L187 & (L12_q[10]) # !R1L187 & L10_q[10]) # !reg_sel[3] & (R1L187);


--R1L189 is reg_out:inst33|reg_data[10]~3167
R1L189 = reg_sel[3] & (reg_sel[1]) # !reg_sel[3] & (reg_sel[1] & L3_q[10] # !reg_sel[1] & (L1_q[10]));


--R1L190 is reg_out:inst33|reg_data[10]~3168
R1L190 = reg_sel[3] & (R1L189 & (L11_q[10]) # !R1L189 & L9_q[10]) # !reg_sel[3] & (R1L189);


--R1L191 is reg_out:inst33|reg_data[10]~3169
R1L191 = reg_sel[2] & (reg_sel[0]) # !reg_sel[2] & (reg_sel[0] & R1L188 # !reg_sel[0] & (R1L190));


--R1L192 is reg_out:inst33|reg_data[10]~3170
R1L192 = reg_sel[1] & (reg_sel[3]) # !reg_sel[1] & (reg_sel[3] & L14_q[10] # !reg_sel[3] & (L6_q[10]));


--R1L193 is reg_out:inst33|reg_data[10]~3171
R1L193 = reg_sel[1] & (R1L192 & (L16_q[10]) # !R1L192 & L8_q[10]) # !reg_sel[1] & (R1L192);


--R1L194 is reg_out:inst33|reg_data[10]~3172
R1L194 = reg_sel[2] & (R1L191 & (R1L193) # !R1L191 & R1L186) # !reg_sel[2] & (R1L191);


--R1L195 is reg_out:inst33|reg_data[10]~3173
R1L195 = R1L253 & (R1L194 # R1L264 & R1L184) # !R1L253 & R1L264 & R1L184;


--G1_q[9] is ir:inst7|q[9]
G1_q[9] = DFFEAS(A1L43, clk, reset,  , G1L1,  ,  ,  ,  );


--R1L162 is reg_out:inst33|reg_data[9]~3174
R1L162 = reg_sel[3] & reg_sel[1] & reg_sel[2] & K1_q[9];


--B1L148 is alu:inst|alu_out[9]~5385
B1L148 = B1L128 & (B1L129 & B1L19 # !B1L129 & (B1L70)) # !B1L128 & (!B1L129);


--B1L149 is alu:inst|alu_out[9]~5386
B1L149 = B1L148 & (B1L22 & N1L273 # !B1L166) # !B1L148 & B1L166 & (B1L22 # N1L273);


--B1L150 is alu:inst|alu_out[9]~5387
B1L150 = H1_alu_func[0] & B1L25 # !H1_alu_func[0] & (N1L273 $ B1L22);


--J1L30 is ar:inst9|q[9]~55
J1L30 = B1L127 & (B1L150) # !B1L127 & B1L149;


--C1_q[9] is reg_testa:inst1|q[9]
C1_q[9] = DFFEAS(H1_alu_func[1], clk, reset,  ,  ,  ,  ,  ,  );


--R1L163 is reg_out:inst33|reg_data[9]~3175
R1L163 = C1_q[9] & !reg_sel[0];


--R1L164 is reg_out:inst33|reg_data[9]~3176
R1L164 = R1L126 & (!R1L127) # !R1L126 & (R1L127 & B1L22 # !R1L127 & (R1L163));


--R1L165 is reg_out:inst33|reg_data[9]~3177
R1L165 = R1L125 & (R1L164) # !R1L125 & (R1L164 & (H1_offset[7]) # !R1L164 & N1L273);


--R1L166 is reg_out:inst33|reg_data[9]~3178
R1L166 = sel[1] & (!R1L123) # !sel[1] & (R1L123 & J1L30 # !R1L123 & (R1L165));


--R1L167 is reg_out:inst33|reg_data[9]~3179
R1L167 = R1L124 & (R1L166 & (R1L162) # !R1L166 & G1_q[9]) # !R1L124 & (R1L166);


--R1L168 is reg_out:inst33|reg_data[9]~3180
R1L168 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & L10_q[9] # !reg_sel[3] & (L2_q[9]));


--R1L169 is reg_out:inst33|reg_data[9]~3181
R1L169 = reg_sel[2] & (R1L168 & (L14_q[9]) # !R1L168 & L6_q[9]) # !reg_sel[2] & (R1L168);


--R1L170 is reg_out:inst33|reg_data[9]~3182
R1L170 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & L11_q[9] # !reg_sel[3] & (L3_q[9]));


--R1L171 is reg_out:inst33|reg_data[9]~3183
R1L171 = reg_sel[2] & (R1L170 & (L15_q[9]) # !R1L170 & L7_q[9]) # !reg_sel[2] & (R1L170);


--R1L172 is reg_out:inst33|reg_data[9]~3184
R1L172 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & L9_q[9] # !reg_sel[3] & (L1_q[9]));


--R1L173 is reg_out:inst33|reg_data[9]~3185
R1L173 = reg_sel[2] & (R1L172 & (L13_q[9]) # !R1L172 & L5_q[9]) # !reg_sel[2] & (R1L172);


--R1L174 is reg_out:inst33|reg_data[9]~3186
R1L174 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & R1L171 # !reg_sel[1] & (R1L173));


--R1L175 is reg_out:inst33|reg_data[9]~3187
R1L175 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & L12_q[9] # !reg_sel[3] & (L4_q[9]));


--R1L176 is reg_out:inst33|reg_data[9]~3188
R1L176 = reg_sel[2] & (R1L175 & (L16_q[9]) # !R1L175 & L8_q[9]) # !reg_sel[2] & (R1L175);


--R1L177 is reg_out:inst33|reg_data[9]~3189
R1L177 = reg_sel[0] & (R1L174 & (R1L176) # !R1L174 & R1L169) # !reg_sel[0] & (R1L174);


--R1L178 is reg_out:inst33|reg_data[9]~3190
R1L178 = R1L253 & (R1L177 # R1L264 & R1L167) # !R1L253 & R1L264 & R1L167;


--G1_q[8] is ir:inst7|q[8]
G1_q[8] = DFFEAS(A1L44, clk, reset,  , G1L1,  ,  ,  ,  );


--R1L145 is reg_out:inst33|reg_data[8]~3191
R1L145 = reg_sel[3] & reg_sel[1] & reg_sel[2] & K1_q[8];


--B1L145 is alu:inst|alu_out[8]~5388
B1L145 = B1L128 & (B1L129 & B1L22 # !B1L129 & (B1L68)) # !B1L128 & (!B1L129);


--B1L146 is alu:inst|alu_out[8]~5389
B1L146 = B1L145 & (B1L25 & N1L262 # !B1L166) # !B1L145 & B1L166 & (B1L25 # N1L262);


--B1L147 is alu:inst|alu_out[8]~5390
B1L147 = H1_alu_func[0] & B1L28 # !H1_alu_func[0] & (N1L262 $ B1L25);


--J1L27 is ar:inst9|q[8]~56
J1L27 = B1L127 & (B1L147) # !B1L127 & B1L146;


--C1_q[8] is reg_testa:inst1|q[8]
C1_q[8] = DFFEAS(H1_alu_func[0], clk, reset,  ,  ,  ,  ,  ,  );


--R1L146 is reg_out:inst33|reg_data[8]~3192
R1L146 = C1_q[8] & !reg_sel[0];


--R1L147 is reg_out:inst33|reg_data[8]~3193
R1L147 = R1L126 & (!R1L127) # !R1L126 & (R1L127 & B1L25 # !R1L127 & (R1L146));


--R1L148 is reg_out:inst33|reg_data[8]~3194
R1L148 = R1L125 & (R1L147) # !R1L125 & (R1L147 & (H1_offset[7]) # !R1L147 & N1L262);


--R1L149 is reg_out:inst33|reg_data[8]~3195
R1L149 = sel[1] & (!R1L123) # !sel[1] & (R1L123 & J1L27 # !R1L123 & (R1L148));


--R1L150 is reg_out:inst33|reg_data[8]~3196
R1L150 = R1L124 & (R1L149 & (R1L145) # !R1L149 & G1_q[8]) # !R1L124 & (R1L149);


--R1L151 is reg_out:inst33|reg_data[8]~3197
R1L151 = reg_sel[1] & (reg_sel[3]) # !reg_sel[1] & (reg_sel[3] & L10_q[8] # !reg_sel[3] & (L2_q[8]));


--R1L152 is reg_out:inst33|reg_data[8]~3198
R1L152 = reg_sel[1] & (R1L151 & (L12_q[8]) # !R1L151 & L4_q[8]) # !reg_sel[1] & (R1L151);


--R1L153 is reg_out:inst33|reg_data[8]~3199
R1L153 = reg_sel[1] & (reg_sel[3]) # !reg_sel[1] & (reg_sel[3] & L13_q[8] # !reg_sel[3] & (L5_q[8]));


--R1L154 is reg_out:inst33|reg_data[8]~3200
R1L154 = reg_sel[1] & (R1L153 & (L15_q[8]) # !R1L153 & L7_q[8]) # !reg_sel[1] & (R1L153);


--R1L155 is reg_out:inst33|reg_data[8]~3201
R1L155 = reg_sel[1] & (reg_sel[3]) # !reg_sel[1] & (reg_sel[3] & L9_q[8] # !reg_sel[3] & (L1_q[8]));


--R1L156 is reg_out:inst33|reg_data[8]~3202
R1L156 = reg_sel[1] & (R1L155 & (L11_q[8]) # !R1L155 & L3_q[8]) # !reg_sel[1] & (R1L155);


--R1L157 is reg_out:inst33|reg_data[8]~3203
R1L157 = reg_sel[0] & (reg_sel[2]) # !reg_sel[0] & (reg_sel[2] & R1L154 # !reg_sel[2] & (R1L156));


--R1L158 is reg_out:inst33|reg_data[8]~3204
R1L158 = reg_sel[3] & (reg_sel[1]) # !reg_sel[3] & (reg_sel[1] & L8_q[8] # !reg_sel[1] & (L6_q[8]));


--R1L159 is reg_out:inst33|reg_data[8]~3205
R1L159 = reg_sel[3] & (R1L158 & (L16_q[8]) # !R1L158 & L14_q[8]) # !reg_sel[3] & (R1L158);


--R1L160 is reg_out:inst33|reg_data[8]~3206
R1L160 = reg_sel[0] & (R1L157 & (R1L159) # !R1L157 & R1L152) # !reg_sel[0] & (R1L157);


--R1L161 is reg_out:inst33|reg_data[8]~3207
R1L161 = R1L253 & (R1L160 # R1L264 & R1L150) # !R1L253 & R1L264 & R1L150;


--G1_q[7] is ir:inst7|q[7]
G1_q[7] = DFFEAS(A1L45, clk, reset,  , G1L1,  ,  ,  ,  );


--R1L128 is reg_out:inst33|reg_data[7]~3208
R1L128 = reg_sel[3] & reg_sel[1] & reg_sel[2] & K1_q[7];


--B1L142 is alu:inst|alu_out[7]~5391
B1L142 = B1L128 & (B1L129 & B1L25 # !B1L129 & (B1L66)) # !B1L128 & (!B1L129);


--B1L143 is alu:inst|alu_out[7]~5392
B1L143 = B1L142 & (B1L28 & N1L251 # !B1L166) # !B1L142 & B1L166 & (B1L28 # N1L251);


--B1L144 is alu:inst|alu_out[7]~5393
B1L144 = H1_alu_func[0] & B1L31 # !H1_alu_func[0] & (N1L251 $ B1L28);


--J1L24 is ar:inst9|q[7]~57
J1L24 = B1L127 & (B1L144) # !B1L127 & B1L143;


--C1_q[7] is reg_testa:inst1|q[7]
C1_q[7] = DFFEAS(C1L10, clk, reset,  ,  ,  ,  ,  ,  );


--R1L129 is reg_out:inst33|reg_data[7]~3209
R1L129 = C1_q[7] & !reg_sel[0];


--R1L130 is reg_out:inst33|reg_data[7]~3210
R1L130 = R1L126 & (!R1L127) # !R1L126 & (R1L127 & B1L28 # !R1L127 & (R1L129));


--R1L131 is reg_out:inst33|reg_data[7]~3211
R1L131 = R1L125 & (R1L130) # !R1L125 & (R1L130 & (H1_offset[7]) # !R1L130 & N1L251);


--R1L132 is reg_out:inst33|reg_data[7]~3212
R1L132 = sel[1] & (!R1L123) # !sel[1] & (R1L123 & J1L24 # !R1L123 & (R1L131));


--R1L133 is reg_out:inst33|reg_data[7]~3213
R1L133 = R1L124 & (R1L132 & (R1L128) # !R1L132 & G1_q[7]) # !R1L124 & (R1L132);


--R1L134 is reg_out:inst33|reg_data[7]~3214
R1L134 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & L10_q[7] # !reg_sel[3] & (L2_q[7]));


--R1L135 is reg_out:inst33|reg_data[7]~3215
R1L135 = reg_sel[2] & (R1L134 & (L14_q[7]) # !R1L134 & L6_q[7]) # !reg_sel[2] & (R1L134);


--R1L136 is reg_out:inst33|reg_data[7]~3216
R1L136 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & L11_q[7] # !reg_sel[3] & (L3_q[7]));


--R1L137 is reg_out:inst33|reg_data[7]~3217
R1L137 = reg_sel[2] & (R1L136 & (L15_q[7]) # !R1L136 & L7_q[7]) # !reg_sel[2] & (R1L136);


--R1L138 is reg_out:inst33|reg_data[7]~3218
R1L138 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & L9_q[7] # !reg_sel[3] & (L1_q[7]));


--R1L139 is reg_out:inst33|reg_data[7]~3219
R1L139 = reg_sel[2] & (R1L138 & (L13_q[7]) # !R1L138 & L5_q[7]) # !reg_sel[2] & (R1L138);


--R1L140 is reg_out:inst33|reg_data[7]~3220
R1L140 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & R1L137 # !reg_sel[1] & (R1L139));


--R1L141 is reg_out:inst33|reg_data[7]~3221
R1L141 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & L12_q[7] # !reg_sel[3] & (L4_q[7]));


--R1L142 is reg_out:inst33|reg_data[7]~3222
R1L142 = reg_sel[2] & (R1L141 & (L16_q[7]) # !R1L141 & L8_q[7]) # !reg_sel[2] & (R1L141);


--R1L143 is reg_out:inst33|reg_data[7]~3223
R1L143 = reg_sel[0] & (R1L140 & (R1L142) # !R1L140 & R1L135) # !reg_sel[0] & (R1L140);


--R1L144 is reg_out:inst33|reg_data[7]~3224
R1L144 = R1L253 & (R1L143 # R1L264 & R1L133) # !R1L253 & R1L264 & R1L133;


--G1_q[6] is ir:inst7|q[6]
G1_q[6] = DFFEAS(A1L46, clk, reset,  , G1L1,  ,  ,  ,  );


--R1L106 is reg_out:inst33|reg_data[6]~3225
R1L106 = reg_sel[3] & reg_sel[1] & reg_sel[2] & K1_q[6];


--R1L2 is reg_out:inst33|reg_data[0]~3226
R1L2 = sel[1] & reg_sel[0] # !sel[1] & (reg_sel[2]);


--R1L3 is reg_out:inst33|reg_data[0]~3227
R1L3 = sel[1] & (reg_sel[3] & R1L269 # !R1L2);


--C1_q[6] is reg_testa:inst1|q[6]
C1_q[6] = DFFEAS(H1_alu_in_sel[2], clk, reset,  ,  ,  ,  ,  ,  );


--R1L107 is reg_out:inst33|reg_data[6]~3228
R1L107 = C1_q[6] & !reg_sel[1] & !reg_sel[0];


--R1L108 is reg_out:inst33|reg_data[6]~3229
R1L108 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & B1L31 # !reg_sel[1] & (H1_offset[6]));


--B1L139 is alu:inst|alu_out[6]~5394
B1L139 = B1L128 & (B1L129 & B1L28 # !B1L129 & (B1L64)) # !B1L128 & (!B1L129);


--B1L140 is alu:inst|alu_out[6]~5395
B1L140 = B1L139 & (B1L31 & N1L240 # !B1L166) # !B1L139 & B1L166 & (B1L31 # N1L240);


--B1L141 is alu:inst|alu_out[6]~5396
B1L141 = H1_alu_func[0] & B1L34 # !H1_alu_func[0] & (N1L240 $ B1L31);


--J1L21 is ar:inst9|q[6]~58
J1L21 = B1L127 & (B1L141) # !B1L127 & B1L140;


--R1L109 is reg_out:inst33|reg_data[6]~3230
R1L109 = reg_sel[0] & (R1L108 & (J1L21) # !R1L108 & N1L240) # !reg_sel[0] & (R1L108);


--R1L110 is reg_out:inst33|reg_data[6]~3231
R1L110 = sel[1] & (!R1L2) # !sel[1] & (R1L2 & R1L107 # !R1L2 & (R1L109));


--R1L111 is reg_out:inst33|reg_data[6]~3232
R1L111 = R1L3 & (R1L110 & (R1L106) # !R1L110 & G1_q[6]) # !R1L3 & (R1L110);


--R1L112 is reg_out:inst33|reg_data[6]~3233
R1L112 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & L11_q[6] # !reg_sel[1] & (L9_q[6]));


--R1L113 is reg_out:inst33|reg_data[6]~3234
R1L113 = reg_sel[0] & (R1L112 & (L12_q[6]) # !R1L112 & L10_q[6]) # !reg_sel[0] & (R1L112);


--R1L114 is reg_out:inst33|reg_data[6]~3235
R1L114 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & L7_q[6] # !reg_sel[1] & (L5_q[6]));


--R1L115 is reg_out:inst33|reg_data[6]~3236
R1L115 = reg_sel[0] & (R1L114 & (L8_q[6]) # !R1L114 & L6_q[6]) # !reg_sel[0] & (R1L114);


--R1L116 is reg_out:inst33|reg_data[6]~3237
R1L116 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & L3_q[6] # !reg_sel[1] & (L1_q[6]));


--R1L117 is reg_out:inst33|reg_data[6]~3238
R1L117 = reg_sel[0] & (R1L116 & (L4_q[6]) # !R1L116 & L2_q[6]) # !reg_sel[0] & (R1L116);


--R1L118 is reg_out:inst33|reg_data[6]~3239
R1L118 = reg_sel[3] & (reg_sel[2]) # !reg_sel[3] & (reg_sel[2] & R1L115 # !reg_sel[2] & (R1L117));


--R1L119 is reg_out:inst33|reg_data[6]~3240
R1L119 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & L15_q[6] # !reg_sel[1] & (L13_q[6]));


--R1L120 is reg_out:inst33|reg_data[6]~3241
R1L120 = reg_sel[0] & (R1L119 & (L16_q[6]) # !R1L119 & L14_q[6]) # !reg_sel[0] & (R1L119);


--R1L121 is reg_out:inst33|reg_data[6]~3242
R1L121 = reg_sel[3] & (R1L118 & (R1L120) # !R1L118 & R1L113) # !reg_sel[3] & (R1L118);


--R1L122 is reg_out:inst33|reg_data[6]~3243
R1L122 = R1L253 & (R1L121 # R1L264 & R1L111) # !R1L253 & R1L264 & R1L111;


--G1_q[5] is ir:inst7|q[5]
G1_q[5] = DFFEAS(A1L47, clk, reset,  , G1L1,  ,  ,  ,  );


--R1L89 is reg_out:inst33|reg_data[5]~3244
R1L89 = reg_sel[3] & reg_sel[1] & reg_sel[2] & K1_q[5];


--C1_q[5] is reg_testa:inst1|q[5]
C1_q[5] = DFFEAS(H1_alu_in_sel[1], clk, reset,  ,  ,  ,  ,  ,  );


--R1L90 is reg_out:inst33|reg_data[5]~3245
R1L90 = C1_q[5] & !reg_sel[1] & !reg_sel[0];


--R1L91 is reg_out:inst33|reg_data[5]~3246
R1L91 = reg_sel[1] & (reg_sel[0]) # !reg_sel[1] & (reg_sel[0] & N1L228 # !reg_sel[0] & (H1_offset[5]));


--B1L136 is alu:inst|alu_out[5]~5397
B1L136 = B1L128 & (B1L129 & B1L31 # !B1L129 & (B1L62)) # !B1L128 & (!B1L129);


--B1L137 is alu:inst|alu_out[5]~5398
B1L137 = B1L136 & (N1L228 & B1L34 # !B1L166) # !B1L136 & B1L166 & (N1L228 # B1L34);


--B1L138 is alu:inst|alu_out[5]~5399
B1L138 = H1_alu_func[0] & B1L37 # !H1_alu_func[0] & (N1L228 $ B1L34);


--J1L18 is ar:inst9|q[5]~59
J1L18 = B1L127 & (B1L138) # !B1L127 & B1L137;


--R1L92 is reg_out:inst33|reg_data[5]~3247
R1L92 = reg_sel[1] & (R1L91 & (J1L18) # !R1L91 & B1L34) # !reg_sel[1] & (R1L91);


--R1L93 is reg_out:inst33|reg_data[5]~3248
R1L93 = sel[1] & (!R1L2) # !sel[1] & (R1L2 & R1L90 # !R1L2 & (R1L92));


--R1L94 is reg_out:inst33|reg_data[5]~3249
R1L94 = R1L3 & (R1L93 & (R1L89) # !R1L93 & G1_q[5]) # !R1L3 & (R1L93);


--R1L95 is reg_out:inst33|reg_data[5]~3250
R1L95 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & L10_q[5] # !reg_sel[3] & (L2_q[5]));


--R1L96 is reg_out:inst33|reg_data[5]~3251
R1L96 = reg_sel[2] & (R1L95 & (L14_q[5]) # !R1L95 & L6_q[5]) # !reg_sel[2] & (R1L95);


--R1L97 is reg_out:inst33|reg_data[5]~3252
R1L97 = reg_sel[3] & (reg_sel[2]) # !reg_sel[3] & (reg_sel[2] & L7_q[5] # !reg_sel[2] & (L3_q[5]));


--R1L98 is reg_out:inst33|reg_data[5]~3253
R1L98 = reg_sel[3] & (R1L97 & (L15_q[5]) # !R1L97 & L11_q[5]) # !reg_sel[3] & (R1L97);


--R1L99 is reg_out:inst33|reg_data[5]~3254
R1L99 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & L9_q[5] # !reg_sel[3] & (L1_q[5]));


--R1L100 is reg_out:inst33|reg_data[5]~3255
R1L100 = reg_sel[2] & (R1L99 & (L13_q[5]) # !R1L99 & L5_q[5]) # !reg_sel[2] & (R1L99);


--R1L101 is reg_out:inst33|reg_data[5]~3256
R1L101 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & R1L98 # !reg_sel[1] & (R1L100));


--R1L102 is reg_out:inst33|reg_data[5]~3257
R1L102 = reg_sel[3] & (reg_sel[2]) # !reg_sel[3] & (reg_sel[2] & L8_q[5] # !reg_sel[2] & (L4_q[5]));


--R1L103 is reg_out:inst33|reg_data[5]~3258
R1L103 = reg_sel[3] & (R1L102 & (L16_q[5]) # !R1L102 & L12_q[5]) # !reg_sel[3] & (R1L102);


--R1L104 is reg_out:inst33|reg_data[5]~3259
R1L104 = reg_sel[0] & (R1L101 & (R1L103) # !R1L101 & R1L96) # !reg_sel[0] & (R1L101);


--R1L105 is reg_out:inst33|reg_data[5]~3260
R1L105 = R1L253 & (R1L104 # R1L264 & R1L94) # !R1L253 & R1L264 & R1L94;


--G1_q[4] is ir:inst7|q[4]
G1_q[4] = DFFEAS(A1L48, clk, reset,  , G1L1,  ,  ,  ,  );


--R1L72 is reg_out:inst33|reg_data[4]~3261
R1L72 = reg_sel[3] & reg_sel[1] & reg_sel[2] & K1_q[4];


--C1_q[4] is reg_testa:inst1|q[4]
C1_q[4] = DFFEAS(H1_alu_in_sel[0], clk, reset,  ,  ,  ,  ,  ,  );


--R1L73 is reg_out:inst33|reg_data[4]~3262
R1L73 = C1_q[4] & !reg_sel[1] & !reg_sel[0];


--R1L74 is reg_out:inst33|reg_data[4]~3263
R1L74 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & B1L37 # !reg_sel[1] & (H1_offset[4]));


--B1L133 is alu:inst|alu_out[4]~5400
B1L133 = B1L128 & (B1L129 & B1L34 # !B1L129 & (B1L60)) # !B1L128 & (!B1L129);


--B1L134 is alu:inst|alu_out[4]~5401
B1L134 = B1L133 & (B1L37 & N1L217 # !B1L166) # !B1L133 & B1L166 & (B1L37 # N1L217);


--B1L135 is alu:inst|alu_out[4]~5402
B1L135 = H1_alu_func[0] & B1L40 # !H1_alu_func[0] & (N1L217 $ B1L37);


--J1L15 is ar:inst9|q[4]~60
J1L15 = B1L127 & (B1L135) # !B1L127 & B1L134;


--R1L75 is reg_out:inst33|reg_data[4]~3264
R1L75 = reg_sel[0] & (R1L74 & (J1L15) # !R1L74 & N1L217) # !reg_sel[0] & (R1L74);


--R1L76 is reg_out:inst33|reg_data[4]~3265
R1L76 = sel[1] & (!R1L2) # !sel[1] & (R1L2 & R1L73 # !R1L2 & (R1L75));


--R1L77 is reg_out:inst33|reg_data[4]~3266
R1L77 = R1L3 & (R1L76 & (R1L72) # !R1L76 & G1_q[4]) # !R1L3 & (R1L76);


--R1L78 is reg_out:inst33|reg_data[4]~3267
R1L78 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & L7_q[4] # !reg_sel[1] & (L5_q[4]));


--R1L79 is reg_out:inst33|reg_data[4]~3268
R1L79 = reg_sel[0] & (R1L78 & (L8_q[4]) # !R1L78 & L6_q[4]) # !reg_sel[0] & (R1L78);


--R1L80 is reg_out:inst33|reg_data[4]~3269
R1L80 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & L11_q[4] # !reg_sel[1] & (L9_q[4]));


--R1L81 is reg_out:inst33|reg_data[4]~3270
R1L81 = reg_sel[0] & (R1L80 & (L12_q[4]) # !R1L80 & L10_q[4]) # !reg_sel[0] & (R1L80);


--R1L82 is reg_out:inst33|reg_data[4]~3271
R1L82 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & L3_q[4] # !reg_sel[1] & (L1_q[4]));


--R1L83 is reg_out:inst33|reg_data[4]~3272
R1L83 = reg_sel[0] & (R1L82 & (L4_q[4]) # !R1L82 & L2_q[4]) # !reg_sel[0] & (R1L82);


--R1L84 is reg_out:inst33|reg_data[4]~3273
R1L84 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & R1L81 # !reg_sel[3] & (R1L83));


--R1L85 is reg_out:inst33|reg_data[4]~3274
R1L85 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & L15_q[4] # !reg_sel[1] & (L13_q[4]));


--R1L86 is reg_out:inst33|reg_data[4]~3275
R1L86 = reg_sel[0] & (R1L85 & (L16_q[4]) # !R1L85 & L14_q[4]) # !reg_sel[0] & (R1L85);


--R1L87 is reg_out:inst33|reg_data[4]~3276
R1L87 = reg_sel[2] & (R1L84 & (R1L86) # !R1L84 & R1L79) # !reg_sel[2] & (R1L84);


--R1L88 is reg_out:inst33|reg_data[4]~3277
R1L88 = R1L253 & (R1L87 # R1L264 & R1L77) # !R1L253 & R1L264 & R1L77;


--G1_q[3] is ir:inst7|q[3]
G1_q[3] = DFFEAS(A1L49, clk, reset,  , G1L1,  ,  ,  ,  );


--R1L55 is reg_out:inst33|reg_data[3]~3278
R1L55 = reg_sel[3] & reg_sel[1] & reg_sel[2] & K1_q[3];


--C1_q[3] is reg_testa:inst1|q[3]
C1_q[3] = DFFEAS(H1_rec[1], clk, reset,  ,  ,  ,  ,  ,  );


--R1L56 is reg_out:inst33|reg_data[3]~3279
R1L56 = C1_q[3] & !reg_sel[1] & !reg_sel[0];


--R1L57 is reg_out:inst33|reg_data[3]~3280
R1L57 = reg_sel[1] & (reg_sel[0]) # !reg_sel[1] & (reg_sel[0] & N1L206 # !reg_sel[0] & (H1_offset[3]));


--B1L130 is alu:inst|alu_out[3]~5403
B1L130 = B1L128 & (B1L129 & B1L37 # !B1L129 & (B1L58)) # !B1L128 & (!B1L129);


--B1L131 is alu:inst|alu_out[3]~5404
B1L131 = B1L130 & (N1L206 & B1L40 # !B1L166) # !B1L130 & B1L166 & (N1L206 # B1L40);


--B1L132 is alu:inst|alu_out[3]~5405
B1L132 = H1_alu_func[0] & B1L43 # !H1_alu_func[0] & (N1L206 $ B1L40);


--J1L12 is ar:inst9|q[3]~61
J1L12 = B1L127 & (B1L132) # !B1L127 & B1L131;


--R1L58 is reg_out:inst33|reg_data[3]~3281
R1L58 = reg_sel[1] & (R1L57 & (J1L12) # !R1L57 & B1L40) # !reg_sel[1] & (R1L57);


--R1L59 is reg_out:inst33|reg_data[3]~3282
R1L59 = sel[1] & (!R1L2) # !sel[1] & (R1L2 & R1L56 # !R1L2 & (R1L58));


--R1L60 is reg_out:inst33|reg_data[3]~3283
R1L60 = R1L3 & (R1L59 & (R1L55) # !R1L59 & G1_q[3]) # !R1L3 & (R1L59);


--R1L61 is reg_out:inst33|reg_data[3]~3284
R1L61 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & L11_q[3] # !reg_sel[3] & (L3_q[3]));


--R1L62 is reg_out:inst33|reg_data[3]~3285
R1L62 = reg_sel[2] & (R1L61 & (L15_q[3]) # !R1L61 & L7_q[3]) # !reg_sel[2] & (R1L61);


--R1L63 is reg_out:inst33|reg_data[3]~3286
R1L63 = reg_sel[3] & (reg_sel[2]) # !reg_sel[3] & (reg_sel[2] & L6_q[3] # !reg_sel[2] & (L2_q[3]));


--R1L64 is reg_out:inst33|reg_data[3]~3287
R1L64 = reg_sel[3] & (R1L63 & (L14_q[3]) # !R1L63 & L10_q[3]) # !reg_sel[3] & (R1L63);


--R1L65 is reg_out:inst33|reg_data[3]~3288
R1L65 = reg_sel[3] & (reg_sel[2]) # !reg_sel[3] & (reg_sel[2] & L5_q[3] # !reg_sel[2] & (L1_q[3]));


--R1L66 is reg_out:inst33|reg_data[3]~3289
R1L66 = reg_sel[3] & (R1L65 & (L13_q[3]) # !R1L65 & L9_q[3]) # !reg_sel[3] & (R1L65);


--R1L67 is reg_out:inst33|reg_data[3]~3290
R1L67 = reg_sel[1] & (reg_sel[0]) # !reg_sel[1] & (reg_sel[0] & R1L64 # !reg_sel[0] & (R1L66));


--R1L68 is reg_out:inst33|reg_data[3]~3291
R1L68 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & L12_q[3] # !reg_sel[3] & (L4_q[3]));


--R1L69 is reg_out:inst33|reg_data[3]~3292
R1L69 = reg_sel[2] & (R1L68 & (L16_q[3]) # !R1L68 & L8_q[3]) # !reg_sel[2] & (R1L68);


--R1L70 is reg_out:inst33|reg_data[3]~3293
R1L70 = reg_sel[1] & (R1L67 & (R1L69) # !R1L67 & R1L62) # !reg_sel[1] & (R1L67);


--R1L71 is reg_out:inst33|reg_data[3]~3294
R1L71 = R1L253 & (R1L70 # R1L264 & R1L60) # !R1L253 & R1L264 & R1L60;


--G1_q[2] is ir:inst7|q[2]
G1_q[2] = DFFEAS(A1L50, clk, reset,  , G1L1,  ,  ,  ,  );


--R1L38 is reg_out:inst33|reg_data[2]~3295
R1L38 = reg_sel[3] & reg_sel[1] & reg_sel[2] & K1_q[2];


--C1_q[2] is reg_testa:inst1|q[2]
C1_q[2] = DFFEAS(H1_rec[0], clk, reset,  ,  ,  ,  ,  ,  );


--R1L39 is reg_out:inst33|reg_data[2]~3296
R1L39 = C1_q[2] & !reg_sel[1] & !reg_sel[0];


--R1L40 is reg_out:inst33|reg_data[2]~3297
R1L40 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & B1L43 # !reg_sel[1] & (H1_offset[2]));


--B1L124 is alu:inst|alu_out[2]~5406
B1L124 = B1L128 & (B1L129 & B1L40 # !B1L129 & (B1L56)) # !B1L128 & (!B1L129);


--B1L125 is alu:inst|alu_out[2]~5407
B1L125 = B1L124 & (B1L43 & N1L195 # !B1L166) # !B1L124 & B1L166 & (B1L43 # N1L195);


--B1L126 is alu:inst|alu_out[2]~5408
B1L126 = H1_alu_func[0] & B1L46 # !H1_alu_func[0] & (N1L195 $ B1L43);


--J1L9 is ar:inst9|q[2]~62
J1L9 = B1L127 & (B1L126) # !B1L127 & B1L125;


--R1L41 is reg_out:inst33|reg_data[2]~3298
R1L41 = reg_sel[0] & (R1L40 & (J1L9) # !R1L40 & N1L195) # !reg_sel[0] & (R1L40);


--R1L42 is reg_out:inst33|reg_data[2]~3299
R1L42 = sel[1] & (!R1L2) # !sel[1] & (R1L2 & R1L39 # !R1L2 & (R1L41));


--R1L43 is reg_out:inst33|reg_data[2]~3300
R1L43 = R1L3 & (R1L42 & (R1L38) # !R1L42 & G1_q[2]) # !R1L3 & (R1L42);


--R1L44 is reg_out:inst33|reg_data[2]~3301
R1L44 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & L11_q[2] # !reg_sel[1] & (L9_q[2]));


--R1L45 is reg_out:inst33|reg_data[2]~3302
R1L45 = reg_sel[0] & (R1L44 & (L12_q[2]) # !R1L44 & L10_q[2]) # !reg_sel[0] & (R1L44);


--R1L46 is reg_out:inst33|reg_data[2]~3303
R1L46 = reg_sel[1] & (reg_sel[0]) # !reg_sel[1] & (reg_sel[0] & L6_q[2] # !reg_sel[0] & (L5_q[2]));


--R1L47 is reg_out:inst33|reg_data[2]~3304
R1L47 = reg_sel[1] & (R1L46 & (L8_q[2]) # !R1L46 & L7_q[2]) # !reg_sel[1] & (R1L46);


--R1L48 is reg_out:inst33|reg_data[2]~3305
R1L48 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & L3_q[2] # !reg_sel[1] & (L1_q[2]));


--R1L49 is reg_out:inst33|reg_data[2]~3306
R1L49 = reg_sel[0] & (R1L48 & (L4_q[2]) # !R1L48 & L2_q[2]) # !reg_sel[0] & (R1L48);


--R1L50 is reg_out:inst33|reg_data[2]~3307
R1L50 = reg_sel[3] & (reg_sel[2]) # !reg_sel[3] & (reg_sel[2] & R1L47 # !reg_sel[2] & (R1L49));


--R1L51 is reg_out:inst33|reg_data[2]~3308
R1L51 = reg_sel[1] & (reg_sel[0]) # !reg_sel[1] & (reg_sel[0] & L14_q[2] # !reg_sel[0] & (L13_q[2]));


--R1L52 is reg_out:inst33|reg_data[2]~3309
R1L52 = reg_sel[1] & (R1L51 & (L16_q[2]) # !R1L51 & L15_q[2]) # !reg_sel[1] & (R1L51);


--R1L53 is reg_out:inst33|reg_data[2]~3310
R1L53 = reg_sel[3] & (R1L50 & (R1L52) # !R1L50 & R1L45) # !reg_sel[3] & (R1L50);


--R1L54 is reg_out:inst33|reg_data[2]~3311
R1L54 = R1L253 & (R1L53 # R1L264 & R1L43) # !R1L253 & R1L264 & R1L43;


--G1_q[1] is ir:inst7|q[1]
G1_q[1] = DFFEAS(A1L51, clk, reset,  , G1L1,  ,  ,  ,  );


--R1L21 is reg_out:inst33|reg_data[1]~3312
R1L21 = reg_sel[3] & reg_sel[1] & reg_sel[2] & K1_q[1];


--C1_q[1] is reg_testa:inst1|q[1]
C1_q[1] = DFFEAS(H1L24, clk, reset,  ,  ,  ,  ,  ,  );


--R1L22 is reg_out:inst33|reg_data[1]~3313
R1L22 = C1_q[1] & !reg_sel[1] & !reg_sel[0];


--R1L23 is reg_out:inst33|reg_data[1]~3314
R1L23 = reg_sel[1] & (reg_sel[0]) # !reg_sel[1] & (reg_sel[0] & N1L184 # !reg_sel[0] & (H1_offset[1]));


--B1L121 is alu:inst|alu_out[1]~5409
B1L121 = B1L128 & (B1L129 & B1L43 # !B1L129 & (B1L54)) # !B1L128 & (!B1L129);


--B1L122 is alu:inst|alu_out[1]~5410
B1L122 = B1L121 & (N1L184 & B1L46 # !B1L166) # !B1L121 & B1L166 & (N1L184 # B1L46);


--B1L123 is alu:inst|alu_out[1]~5411
B1L123 = H1_alu_func[0] & B1L49 # !H1_alu_func[0] & (N1L184 $ B1L46);


--J1L6 is ar:inst9|q[1]~63
J1L6 = B1L127 & (B1L123) # !B1L127 & B1L122;


--R1L24 is reg_out:inst33|reg_data[1]~3315
R1L24 = reg_sel[1] & (R1L23 & (J1L6) # !R1L23 & B1L46) # !reg_sel[1] & (R1L23);


--R1L25 is reg_out:inst33|reg_data[1]~3316
R1L25 = sel[1] & (!R1L2) # !sel[1] & (R1L2 & R1L22 # !R1L2 & (R1L24));


--R1L26 is reg_out:inst33|reg_data[1]~3317
R1L26 = R1L3 & (R1L25 & (R1L21) # !R1L25 & G1_q[1]) # !R1L3 & (R1L25);


--R1L27 is reg_out:inst33|reg_data[1]~3318
R1L27 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & L10_q[1] # !reg_sel[3] & (L2_q[1]));


--R1L28 is reg_out:inst33|reg_data[1]~3319
R1L28 = reg_sel[2] & (R1L27 & (L14_q[1]) # !R1L27 & L6_q[1]) # !reg_sel[2] & (R1L27);


--R1L29 is reg_out:inst33|reg_data[1]~3320
R1L29 = reg_sel[3] & (reg_sel[2]) # !reg_sel[3] & (reg_sel[2] & L7_q[1] # !reg_sel[2] & (L3_q[1]));


--R1L30 is reg_out:inst33|reg_data[1]~3321
R1L30 = reg_sel[3] & (R1L29 & (L15_q[1]) # !R1L29 & L11_q[1]) # !reg_sel[3] & (R1L29);


--R1L31 is reg_out:inst33|reg_data[1]~3322
R1L31 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & L9_q[1] # !reg_sel[3] & (L1_q[1]));


--R1L32 is reg_out:inst33|reg_data[1]~3323
R1L32 = reg_sel[2] & (R1L31 & (L13_q[1]) # !R1L31 & L5_q[1]) # !reg_sel[2] & (R1L31);


--R1L33 is reg_out:inst33|reg_data[1]~3324
R1L33 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & R1L30 # !reg_sel[1] & (R1L32));


--R1L34 is reg_out:inst33|reg_data[1]~3325
R1L34 = reg_sel[3] & (reg_sel[2]) # !reg_sel[3] & (reg_sel[2] & L8_q[1] # !reg_sel[2] & (L4_q[1]));


--R1L35 is reg_out:inst33|reg_data[1]~3326
R1L35 = reg_sel[3] & (R1L34 & (L16_q[1]) # !R1L34 & L12_q[1]) # !reg_sel[3] & (R1L34);


--R1L36 is reg_out:inst33|reg_data[1]~3327
R1L36 = reg_sel[0] & (R1L33 & (R1L35) # !R1L33 & R1L28) # !reg_sel[0] & (R1L33);


--R1L37 is reg_out:inst33|reg_data[1]~3328
R1L37 = R1L253 & (R1L36 # R1L264 & R1L26) # !R1L253 & R1L264 & R1L26;


--G1_q[0] is ir:inst7|q[0]
G1_q[0] = DFFEAS(A1L52, clk, reset,  , G1L1,  ,  ,  ,  );


--R1L4 is reg_out:inst33|reg_data[0]~3329
R1L4 = reg_sel[3] & reg_sel[1] & reg_sel[2] & K1_q[0];


--C1_q[0] is reg_testa:inst1|q[0]
C1_q[0] = DFFEAS(H1L29, clk, reset,  ,  ,  ,  ,  ,  );


--R1L5 is reg_out:inst33|reg_data[0]~3330
R1L5 = C1_q[0] & !reg_sel[1] & !reg_sel[0];


--R1L6 is reg_out:inst33|reg_data[0]~3331
R1L6 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & B1L49 # !reg_sel[1] & (H1_offset[0]));


--B1L84 is alu:inst|add~3786
B1L84 = !H1_alu_func[0] & (N1L173 $ B1L49);


--B1L85 is alu:inst|add~3787
B1L85 = H1_alu_func[0] & (N1L173 # B1L49) # !H1_alu_func[0] & N1L173 & B1L49;


--B1L119 is alu:inst|alu_out[0]~5412
B1L119 = H1_alu_func[2] & (H1_alu_func[1]) # !H1_alu_func[2] & (H1_alu_func[1] & B1L85 # !H1_alu_func[1] & (B1L52));


--B1L86 is alu:inst|add~3788
B1L86 = !H1_alu_func[0] & (B1L45 # B1L2 & A1L51);


--B1L120 is alu:inst|alu_out[0]~5413
B1L120 = H1_alu_func[2] & (B1L119 & (B1L86) # !B1L119 & B1L84) # !H1_alu_func[2] & (B1L119);


--R1L7 is reg_out:inst33|reg_data[0]~3332
R1L7 = reg_sel[0] & (R1L6 & (B1L120) # !R1L6 & N1L173) # !reg_sel[0] & (R1L6);


--R1L8 is reg_out:inst33|reg_data[0]~3333
R1L8 = sel[1] & (!R1L2) # !sel[1] & (R1L2 & R1L5 # !R1L2 & (R1L7));


--R1L9 is reg_out:inst33|reg_data[0]~3334
R1L9 = R1L3 & (R1L8 & (R1L4) # !R1L8 & G1_q[0]) # !R1L3 & (R1L8);


--R1L10 is reg_out:inst33|reg_data[0]~3335
R1L10 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & L7_q[0] # !reg_sel[1] & (L5_q[0]));


--R1L11 is reg_out:inst33|reg_data[0]~3336
R1L11 = reg_sel[0] & (R1L10 & (L8_q[0]) # !R1L10 & L6_q[0]) # !reg_sel[0] & (R1L10);


--R1L12 is reg_out:inst33|reg_data[0]~3337
R1L12 = reg_sel[1] & (reg_sel[0]) # !reg_sel[1] & (reg_sel[0] & L10_q[0] # !reg_sel[0] & (L9_q[0]));


--R1L13 is reg_out:inst33|reg_data[0]~3338
R1L13 = reg_sel[1] & (R1L12 & (L12_q[0]) # !R1L12 & L11_q[0]) # !reg_sel[1] & (R1L12);


--R1L14 is reg_out:inst33|reg_data[0]~3339
R1L14 = reg_sel[1] & (reg_sel[0]) # !reg_sel[1] & (reg_sel[0] & L2_q[0] # !reg_sel[0] & (L1_q[0]));


--R1L15 is reg_out:inst33|reg_data[0]~3340
R1L15 = reg_sel[1] & (R1L14 & (L4_q[0]) # !R1L14 & L3_q[0]) # !reg_sel[1] & (R1L14);


--R1L16 is reg_out:inst33|reg_data[0]~3341
R1L16 = reg_sel[2] & (reg_sel[3]) # !reg_sel[2] & (reg_sel[3] & R1L13 # !reg_sel[3] & (R1L15));


--R1L17 is reg_out:inst33|reg_data[0]~3342
R1L17 = reg_sel[0] & (reg_sel[1]) # !reg_sel[0] & (reg_sel[1] & L15_q[0] # !reg_sel[1] & (L13_q[0]));


--R1L18 is reg_out:inst33|reg_data[0]~3343
R1L18 = reg_sel[0] & (R1L17 & (L16_q[0]) # !R1L17 & L14_q[0]) # !reg_sel[0] & (R1L17);


--R1L19 is reg_out:inst33|reg_data[0]~3344
R1L19 = reg_sel[2] & (R1L16 & (R1L18) # !R1L16 & R1L11) # !reg_sel[2] & (R1L16);


--R1L20 is reg_out:inst33|reg_data[0]~3345
R1L20 = R1L253 & (R1L19 # R1L264 & R1L9) # !R1L253 & R1L264 & R1L9;


--F1_state.s5 is timer:inst6|state.s5
F1_state.s5 = DFFEAS(F1_state.s4, clk, reset,  ,  ,  ,  ,  ,  );


--F1_state.s3 is timer:inst6|state.s3
F1_state.s3 = DFFEAS(F1L12, clk, reset,  ,  ,  ,  ,  ,  );


--F1L2 is timer:inst6|output[1]~118
F1L2 = F1_state.s5 # F1_state.s3;


--H1L30 is controller:inst8|Mux~38207
H1L30 = G1_q[10] # G1_q[11] # G1_q[8] & G1_q[9];


--H1L31 is controller:inst8|Mux~38208
H1L31 = !G1_q[12] & !H1L30;


--F1_state.s1 is timer:inst6|state.s1
F1_state.s1 = DFFEAS(F1L5, clk, reset,  ,  ,  ,  ,  ,  );


--F1_state.s0 is timer:inst6|state.s0
F1_state.s0 = DFFEAS(VCC, clk, reset,  ,  ,  ,  ,  ,  );


--F1L4 is timer:inst6|output~1
F1L4 = !F1_state.s1 & F1_state.s0;


--F1_state.s4 is timer:inst6|state.s4
F1_state.s4 = DFFEAS(F1L13, clk, reset,  ,  ,  ,  ,  ,  );


--F1_output[2] is timer:inst6|output[2]
F1_output[2] = F1_state.s4 # F1_state.s5 # !F1_state.s0;


--H1L32 is controller:inst8|Mux~38209
H1L32 = H1L31 & F1L4 # !F1_output[2] # !F1L2;


--H1L33 is controller:inst8|Mux~38210
H1L33 = !G1_q[14] & !G1_q[13] & !G1_q[12];


--H1L34 is controller:inst8|Mux~38211
H1L34 = G1_q[15] & H1L33 & !G1_q[11] & !G1_q[10];


--H1L35 is controller:inst8|Mux~38212
H1L35 = F1L4 & (H1L34 # !F1_output[2]) # !F1L2;


--B1L87 is alu:inst|add~3789
B1L87 = P1L1 & (GND # !B1L49) # !P1L1 & (B1L49 $ GND);

--B1L88 is alu:inst|add~3790
B1L88 = CARRY(P1L1 # !B1L49);


--B1L89 is alu:inst|add~3791
B1L89 = B1L46 & !B1L88 # !B1L46 & B1L88 & VCC;

--B1L90 is alu:inst|add~3792
B1L90 = CARRY(B1L46 & !B1L88);


--B1L91 is alu:inst|add~3793
B1L91 = B1L43 & (B1L90 $ GND) # !B1L43 & (GND # !B1L90);

--B1L92 is alu:inst|add~3794
B1L92 = CARRY(!B1L90 # !B1L43);


--B1L93 is alu:inst|add~3795
B1L93 = B1L40 & !B1L92 # !B1L40 & B1L92 & VCC;

--B1L94 is alu:inst|add~3796
B1L94 = CARRY(B1L40 & !B1L92);


--B1L95 is alu:inst|add~3797
B1L95 = B1L37 & (B1L94 $ GND) # !B1L37 & (GND # !B1L94);

--B1L96 is alu:inst|add~3798
B1L96 = CARRY(!B1L94 # !B1L37);


--B1L97 is alu:inst|add~3799
B1L97 = B1L34 & !B1L96 # !B1L34 & B1L96 & VCC;

--B1L98 is alu:inst|add~3800
B1L98 = CARRY(B1L34 & !B1L96);


--B1L99 is alu:inst|add~3801
B1L99 = B1L31 & (B1L98 $ GND) # !B1L31 & (GND # !B1L98);

--B1L100 is alu:inst|add~3802
B1L100 = CARRY(!B1L98 # !B1L31);


--B1L101 is alu:inst|add~3803
B1L101 = B1L28 & !B1L100 # !B1L28 & B1L100 & VCC;

--B1L102 is alu:inst|add~3804
B1L102 = CARRY(B1L28 & !B1L100);


--B1L103 is alu:inst|add~3805
B1L103 = B1L25 & (B1L102 $ GND) # !B1L25 & (GND # !B1L102);

--B1L104 is alu:inst|add~3806
B1L104 = CARRY(!B1L102 # !B1L25);


--B1L105 is alu:inst|add~3807
B1L105 = B1L22 & !B1L104 # !B1L22 & B1L104 & VCC;

--B1L106 is alu:inst|add~3808
B1L106 = CARRY(B1L22 & !B1L104);


--B1L107 is alu:inst|add~3809
B1L107 = B1L19 & (B1L106 $ GND) # !B1L19 & (GND # !B1L106);

--B1L108 is alu:inst|add~3810
B1L108 = CARRY(!B1L106 # !B1L19);


--B1L109 is alu:inst|add~3811
B1L109 = B1L16 & !B1L108 # !B1L16 & B1L108 & VCC;

--B1L110 is alu:inst|add~3812
B1L110 = CARRY(B1L16 & !B1L108);


--B1L111 is alu:inst|add~3813
B1L111 = B1L13 & (B1L110 $ GND) # !B1L13 & (GND # !B1L110);

--B1L112 is alu:inst|add~3814
B1L112 = CARRY(!B1L110 # !B1L13);


--B1L113 is alu:inst|add~3815
B1L113 = B1L10 & !B1L112 # !B1L10 & B1L112 & VCC;

--B1L114 is alu:inst|add~3816
B1L114 = CARRY(B1L10 & !B1L112);


--B1L115 is alu:inst|add~3817
B1L115 = B1L7 & (B1L114 $ GND) # !B1L7 & (GND # !B1L114);

--B1L116 is alu:inst|add~3818
B1L116 = CARRY(!B1L114 # !B1L7);


--B1L117 is alu:inst|add~3819
B1L117 = B1L3 $ B1L116;


--B1L173 is alu:inst|LessThan~419
B1L173 = CARRY(!B1L87 & N1L173);


--B1L175 is alu:inst|LessThan~421
B1L175 = CARRY(B1L89 & (!B1L173 # !N1L184) # !B1L89 & !N1L184 & !B1L173);


--B1L177 is alu:inst|LessThan~423
B1L177 = CARRY(B1L91 & N1L195 & !B1L175 # !B1L91 & (N1L195 # !B1L175));


--B1L179 is alu:inst|LessThan~425
B1L179 = CARRY(B1L93 & (!B1L177 # !N1L206) # !B1L93 & !N1L206 & !B1L177);


--B1L181 is alu:inst|LessThan~427
B1L181 = CARRY(B1L95 & N1L217 & !B1L179 # !B1L95 & (N1L217 # !B1L179));


--B1L183 is alu:inst|LessThan~429
B1L183 = CARRY(B1L97 & (!B1L181 # !N1L228) # !B1L97 & !N1L228 & !B1L181);


--B1L185 is alu:inst|LessThan~431
B1L185 = CARRY(B1L99 & N1L240 & !B1L183 # !B1L99 & (N1L240 # !B1L183));


--B1L187 is alu:inst|LessThan~433
B1L187 = CARRY(B1L101 & (!B1L185 # !N1L251) # !B1L101 & !N1L251 & !B1L185);


--B1L189 is alu:inst|LessThan~435
B1L189 = CARRY(B1L103 & N1L262 & !B1L187 # !B1L103 & (N1L262 # !B1L187));


--B1L191 is alu:inst|LessThan~437
B1L191 = CARRY(B1L105 & (!B1L189 # !N1L273) # !B1L105 & !N1L273 & !B1L189);


--B1L193 is alu:inst|LessThan~439
B1L193 = CARRY(B1L107 & N1L284 & !B1L191 # !B1L107 & (N1L284 # !B1L191));


--B1L195 is alu:inst|LessThan~441
B1L195 = CARRY(B1L109 & (!B1L193 # !N1L295) # !B1L109 & !N1L295 & !B1L193);


--B1L197 is alu:inst|LessThan~443
B1L197 = CARRY(B1L111 & N1L306 & !B1L195 # !B1L111 & (N1L306 # !B1L195));


--B1L199 is alu:inst|LessThan~445
B1L199 = CARRY(B1L113 & (!B1L197 # !N1L317) # !B1L113 & !N1L317 & !B1L197);


--B1L201 is alu:inst|LessThan~447
B1L201 = CARRY(B1L115 & N1L328 & !B1L199 # !B1L115 & (N1L328 # !B1L199));


--B1L202 is alu:inst|LessThan~448
B1L202 = B1L117 & N1L340 & B1L201 # !B1L117 & (N1L340 # B1L201);


--B1L205 is alu:inst|LessThan~451
B1L205 = CARRY(!B1L49 & N1L173);


--B1L207 is alu:inst|LessThan~453
B1L207 = CARRY(B1L46 & (!B1L205 # !N1L184) # !B1L46 & !N1L184 & !B1L205);


--B1L209 is alu:inst|LessThan~455
B1L209 = CARRY(B1L43 & N1L195 & !B1L207 # !B1L43 & (N1L195 # !B1L207));


--B1L211 is alu:inst|LessThan~457
B1L211 = CARRY(B1L40 & (!B1L209 # !N1L206) # !B1L40 & !N1L206 & !B1L209);


--B1L213 is alu:inst|LessThan~459
B1L213 = CARRY(B1L37 & N1L217 & !B1L211 # !B1L37 & (N1L217 # !B1L211));


--B1L215 is alu:inst|LessThan~461
B1L215 = CARRY(B1L34 & (!B1L213 # !N1L228) # !B1L34 & !N1L228 & !B1L213);


--B1L217 is alu:inst|LessThan~463
B1L217 = CARRY(B1L31 & N1L240 & !B1L215 # !B1L31 & (N1L240 # !B1L215));


--B1L219 is alu:inst|LessThan~465
B1L219 = CARRY(B1L28 & (!B1L217 # !N1L251) # !B1L28 & !N1L251 & !B1L217);


--B1L221 is alu:inst|LessThan~467
B1L221 = CARRY(B1L25 & N1L262 & !B1L219 # !B1L25 & (N1L262 # !B1L219));


--B1L223 is alu:inst|LessThan~469
B1L223 = CARRY(B1L22 & (!B1L221 # !N1L273) # !B1L22 & !N1L273 & !B1L221);


--B1L225 is alu:inst|LessThan~471
B1L225 = CARRY(B1L19 & N1L284 & !B1L223 # !B1L19 & (N1L284 # !B1L223));


--B1L227 is alu:inst|LessThan~473
B1L227 = CARRY(B1L16 & (!B1L225 # !N1L295) # !B1L16 & !N1L295 & !B1L225);


--B1L229 is alu:inst|LessThan~475
B1L229 = CARRY(B1L13 & N1L306 & !B1L227 # !B1L13 & (N1L306 # !B1L227));


--B1L231 is alu:inst|LessThan~477
B1L231 = CARRY(B1L10 & (!B1L229 # !N1L317) # !B1L10 & !N1L317 & !B1L229);


--B1L233 is alu:inst|LessThan~479
B1L233 = CARRY(B1L7 & N1L328 & !B1L231 # !B1L7 & (N1L328 # !B1L231));


--B1L234 is alu:inst|LessThan~480
B1L234 = B1L3 & N1L340 & B1L233 # !B1L3 & (N1L340 # B1L233);


--D1L5 is flag_reg:inst2|Mux~866
D1L5 = H1_alu_func[0] & (H1_alu_func[2] & B1L3 # !H1_alu_func[2] & (B1L234)) # !H1_alu_func[0] & (H1_alu_func[2]);


--D1L6 is flag_reg:inst2|Mux~867
D1L6 = H1_alu_func[1] & (B1L49 & !H1_alu_func[0] # !D1L5) # !H1_alu_func[1] & (H1_alu_func[0]);


--D1L7 is flag_reg:inst2|Mux~868
D1L7 = D1L5 & (D1L6) # !D1L5 & B1L202 & !D1L6;


--D1L8 is flag_reg:inst2|Mux~869
D1L8 = H1_sst[1] & (D1_flag_c # !H1_sst[0]) # !H1_sst[1] & (!H1_sst[0] & D1L7);


--A1L94 is rtl~107
A1L94 = !J1L45 & !J1L42 & !J1L39 & !J1L36;


--A1L95 is rtl~108
A1L95 = !J1L33 & !J1L30 & !J1L27 & !J1L24;


--A1L96 is rtl~109
A1L96 = !J1L21 & !J1L18 & !J1L15 & !J1L12;


--A1L97 is rtl~110
A1L97 = A1L96 & !J1L9 & !J1L6 & !B1L120;


--A1L93 is rtl~0
A1L93 = A1L94 & A1L95 & A1L97 & !B1L170;


--D1L9 is flag_reg:inst2|Mux~870
D1L9 = !H1_sst[1] & !H1_sst[0];


--B1L171 is alu:inst|alu_out[15]~5414
B1L171 = !H1_alu_func[1] & !H1_alu_func[2];


--B1L236 is alu:inst|v~28
B1L236 = B1L171 & (B1L170 & !N1L340 & !B1L3 # !B1L170 & N1L340 & B1L3);


--J1L1 is ar:inst9|Mux~198
J1L1 = H1_rec[1] & B1L170 # !H1_rec[1] & (K1_q[15]);


--J1L2 is ar:inst9|Mux~199
J1L2 = H1_rec[1] & B1L120 # !H1_rec[1] & (K1_q[0]);


--H1L36 is controller:inst8|Mux~38213
H1L36 = G1_q[9] $ G1_q[8];


--H1L25 is controller:inst8|en_reg~789
H1L25 = F1L2 & H1L36 & (H1L34) # !F1L2 & (H1_alu_out_sel[0] & !H1L34);


--H1L26 is controller:inst8|en_reg~790
H1L26 = F1_state.s0 & !F1_state.s1 & (F1_state.s4 # F1_state.s5);


--H1L27 is controller:inst8|en_reg~791
H1L27 = H1_alu_out_sel[0] & (F1_output[2] & !H1L34 # !F1L4);


--H1L37 is controller:inst8|Mux~38214
H1L37 = G1_q[15] & (!H1_alu_out_sel[0]) # !G1_q[15] & G1_q[12] & (!H1_alu_out_sel[0] # !G1_q[8]);


--H1L38 is controller:inst8|Mux~38215
H1L38 = G1_q[14] & H1_alu_out_sel[0] & (!H1L37 # !G1_q[13]) # !G1_q[14] & (H1_alu_out_sel[0] # !G1_q[13] & !H1L37);


--H1L39 is controller:inst8|Mux~38216
H1L39 = H1L33 & !G1_q[15] & (G1_q[9] # !G1_q[8]);


--H1L17 is controller:inst8|en_pc~1200
H1L17 = !G1_q[13] & !G1_q[12];


--H1L40 is controller:inst8|Mux~38217
H1L40 = H1L39 # H1_alu_out_sel[0] & (G1_q[15] # !H1L17);


--H1L41 is controller:inst8|Mux~38218
H1L41 = G1_q[9] & !G1_q[8];


--H1L42 is controller:inst8|Mux~38219
H1L42 = H1_alu_out_sel[0] & (G1_q[15] # H1L41 # !H1L17);


--H1L43 is controller:inst8|Mux~38220
H1L43 = !G1_q[15] & !G1_q[14] & !G1_q[13] & !G1_q[12];


--H1L44 is controller:inst8|Mux~38221
H1L44 = H1L42 # H1L43 & (!G1_q[8] # !G1_q[9]);


--H1L45 is controller:inst8|Mux~38222
H1L45 = G1_q[11] & (G1_q[10]) # !G1_q[11] & (G1_q[10] & H1L40 # !G1_q[10] & (H1L44));


--H1L46 is controller:inst8|Mux~38223
H1L46 = H1_alu_out_sel[0] # H1L43 & !G1_q[9];


--H1L47 is controller:inst8|Mux~38224
H1L47 = G1_q[11] & (H1L45 & (H1L46) # !H1L45 & H1L38) # !G1_q[11] & (H1L45);


--H1L28 is controller:inst8|en_reg~792
H1L28 = H1L27 # H1L47 & F1L4 & !F1_output[2];


--H1L29 is controller:inst8|en_reg~793
H1L29 = H1L25 & (H1L26 # H1L28 & F1L2) # !H1L25 & (H1L28 & F1L2);


--M1L17 is reg_mux:inst27|Mux~256
M1L17 = !H1_dest_reg[2] & !H1_dest_reg[3] & !H1_dest_reg[0] & H1_dest_reg[1];


--M1L3 is reg_mux:inst27|en_2~10
M1L3 = H1L29 & M1L17;


--G1L1 is ir:inst7|Mux~135
G1L1 = H1_rec[1] & !H1_rec[0];


--H1L18 is controller:inst8|en_pc~1201
H1L18 = H1L34 & (!G1_q[9]) # !H1L34 & H1_alu_out_sel[1] # !F1_output[2];


--H1L19 is controller:inst8|en_pc~1202
H1L19 = F1_state.s0 & (F1_state.s1 $ (F1_state.s4 # F1_state.s5));


--H1L48 is controller:inst8|Mux~38225
H1L48 = H1L33 & !G1_q[11] & !G1_q[10] & !G1_q[9];


--H1L49 is controller:inst8|Mux~38226
H1L49 = H1_alu_out_sel[1] & (G1_q[11] # G1_q[10] # !H1L33);


--H1L50 is controller:inst8|Mux~38227
H1L50 = G1_q[10] & G1_q[9];


--H1L51 is controller:inst8|Mux~38228
H1L51 = G1_q[11] & H1_alu_out_sel[1] & (G1_q[14] # H1L50);


--H1L52 is controller:inst8|Mux~38229
H1L52 = G1_q[9] & (!D1_flag_z) # !G1_q[9] & !D1_flag_c;


--H1L53 is controller:inst8|Mux~38230
H1L53 = G1_q[10] & H1L52 # !G1_q[10] & (D1_flag_s $ G1_q[9]);


--H1L54 is controller:inst8|Mux~38231
H1L54 = H1L51 # G1_q[14] & H1L53 & !G1_q[11];


--H1L55 is controller:inst8|Mux~38232
H1L55 = G1_q[10] & (G1_q[9] & D1_flag_z # !G1_q[9] & (D1_flag_c)) # !G1_q[10] & (!G1_q[9]);


--H1L56 is controller:inst8|Mux~38233
H1L56 = G1_q[11] & H1_alu_out_sel[1] # !G1_q[11] & (H1L55 # H1_alu_out_sel[1] & !G1_q[10]);


--H1L57 is controller:inst8|Mux~38234
H1L57 = H1L56 & (G1_q[14] # G1_q[11] & H1L50);


--H1L58 is controller:inst8|Mux~38235
H1L58 = G1_q[14] & G1_q[11] & !G1_q[10];


--H1L59 is controller:inst8|Mux~38236
H1L59 = G1_q[13] & (H1_alu_out_sel[1] & !H1L58) # !G1_q[13] & H1L57;


--H1L20 is controller:inst8|en_pc~1203
H1L20 = F1_output[2] & (G1_q[8]) # !F1_output[2] & (G1_q[8] & H1L54 # !G1_q[8] & (H1L59));


--H1L21 is controller:inst8|en_pc~1204
H1L21 = F1_output[2] & (H1L49 # H1L48 & !H1L20) # !F1_output[2] & (H1L20);


--H1L60 is controller:inst8|Mux~38237
H1L60 = G1_q[13] & G1_q[12] & !G1_q[8];


--H1L22 is controller:inst8|en_pc~1205
H1L22 = G1_q[15] & F1_output[2] # !G1_q[15] & !F1_output[2] & (H1L17 # H1L60);


--H1L23 is controller:inst8|en_pc~1206
H1L23 = H1L22 & (F1L4 & (H1L21) # !F1L4 & H1_alu_out_sel[1]) # !H1L22 & H1_alu_out_sel[1];


--H1L24 is controller:inst8|en_pc~1207
H1L24 = F1L2 & (H1L23) # !F1L2 & H1L18 & H1L19;


--H1L61 is controller:inst8|Mux~38238
H1L61 = F1_state.s0 & F1_state.s3 & !F1_state.s4 & !F1_state.s5;


--H1L62 is controller:inst8|Mux~38239
H1L62 = G1_q[7] & H1L61 & (G1_q[14] # G1_q[12]);


--H1L63 is controller:inst8|Mux~38240
H1L63 = !G1_q[11] & (G1_q[10] # G1_q[8] # !G1_q[9]);


--H1L64 is controller:inst8|Mux~38241
H1L64 = H1L63 # !G1_q[14] & (!G1_q[9] # !G1_q[10]);


--H1L65 is controller:inst8|Mux~38242
H1L65 = H1L17 & (H1L64 # H1L60 & H1L58) # !H1L17 & H1L60 & H1L58;


--H1L66 is controller:inst8|Mux~38243
H1L66 = H1L65 & !G1_q[15] & F1L4 & !F1_output[2];


--M1L18 is reg_mux:inst27|Mux~257
M1L18 = H1_dest_reg[2] & !H1_dest_reg[3] & H1_dest_reg[0] & !H1_dest_reg[1];


--M1L6 is reg_mux:inst27|en_5~10
M1L6 = H1L29 & M1L18;


--H1L67 is controller:inst8|Mux~38244
H1L67 = !G1_q[12] & (F1_state.s5 # F1_state.s3);


--H1L68 is controller:inst8|Mux~38245
H1L68 = F1L4 & (F1_output[2] # H1L67 & !G1_q[14]);


--H1L69 is controller:inst8|Mux~38246
H1L69 = G1_q[2] & H1L68;


--M1L19 is reg_mux:inst27|Mux~258
M1L19 = !H1_dest_reg[2] & H1_dest_reg[3] & H1_dest_reg[0] & !H1_dest_reg[1];


--M1L10 is reg_mux:inst27|en_9~10
M1L10 = H1L29 & M1L19;


--H1L70 is controller:inst8|Mux~38247
H1L70 = G1_q[3] & H1L68;


--M1L20 is reg_mux:inst27|Mux~259
M1L20 = !H1_dest_reg[2] & !H1_dest_reg[3] & H1_dest_reg[0] & !H1_dest_reg[1];


--M1L2 is reg_mux:inst27|en_1~10
M1L2 = H1L29 & M1L20;


--M1L21 is reg_mux:inst27|Mux~260
M1L21 = H1_dest_reg[2] & H1_dest_reg[3] & H1_dest_reg[0] & !H1_dest_reg[1];


--M1L14 is reg_mux:inst27|en_d~10
M1L14 = H1L29 & M1L21;


--H1L71 is controller:inst8|Mux~38248
H1L71 = G1_q[0] & H1L68;


--M1L22 is reg_mux:inst27|Mux~261
M1L22 = !H1_dest_reg[2] & H1_dest_reg[3] & !H1_dest_reg[0] & H1_dest_reg[1];


--M1L11 is reg_mux:inst27|en_a~10
M1L11 = H1L29 & M1L22;


--M1L23 is reg_mux:inst27|Mux~262
M1L23 = H1_dest_reg[2] & !H1_dest_reg[3] & !H1_dest_reg[0] & H1_dest_reg[1];


--M1L7 is reg_mux:inst27|en_6~10
M1L7 = H1L29 & M1L23;


--M1L24 is reg_mux:inst27|Mux~263
M1L24 = H1_dest_reg[2] & H1_dest_reg[3] & !H1_dest_reg[0] & H1_dest_reg[1];


--M1L15 is reg_mux:inst27|en_e~10
M1L15 = H1L29 & M1L24;


--H1L72 is controller:inst8|Mux~38249
H1L72 = G1_q[1] & H1L68;


--M1L25 is reg_mux:inst27|Mux~264
M1L25 = H1_dest_reg[2] & !H1_dest_reg[3] & !H1_dest_reg[0] & !H1_dest_reg[1];


--M1L5 is reg_mux:inst27|en_4~10
M1L5 = H1L29 & M1L25;


--M1L26 is reg_mux:inst27|Mux~265
M1L26 = !H1_dest_reg[2] & H1_dest_reg[3] & !H1_dest_reg[0] & !H1_dest_reg[1];


--M1L9 is reg_mux:inst27|en_8~10
M1L9 = H1L29 & M1L26;


--M1L27 is reg_mux:inst27|Mux~266
M1L27 = !H1_dest_reg[2] & !H1_dest_reg[3] & !H1_dest_reg[0] & !H1_dest_reg[1];


--M1L1 is reg_mux:inst27|en_0~10
M1L1 = H1L29 & M1L27;


--M1L28 is reg_mux:inst27|Mux~267
M1L28 = H1_dest_reg[2] & H1_dest_reg[3] & !H1_dest_reg[0] & !H1_dest_reg[1];


--M1L13 is reg_mux:inst27|en_c~10
M1L13 = H1L29 & M1L28;


--M1L29 is reg_mux:inst27|Mux~268
M1L29 = !H1_dest_reg[2] & H1_dest_reg[3] & H1_dest_reg[0] & H1_dest_reg[1];


--M1L12 is reg_mux:inst27|en_b~10
M1L12 = H1L29 & M1L29;


--M1L30 is reg_mux:inst27|Mux~269
M1L30 = H1_dest_reg[2] & !H1_dest_reg[3] & H1_dest_reg[0] & H1_dest_reg[1];


--M1L8 is reg_mux:inst27|en_7~10
M1L8 = H1L29 & M1L30;


--M1L31 is reg_mux:inst27|Mux~270
M1L31 = !H1_dest_reg[2] & !H1_dest_reg[3] & H1_dest_reg[0] & H1_dest_reg[1];


--M1L4 is reg_mux:inst27|en_3~10
M1L4 = H1L29 & M1L31;


--M1L32 is reg_mux:inst27|Mux~271
M1L32 = H1_dest_reg[2] & H1_dest_reg[3] & H1_dest_reg[0] & H1_dest_reg[1];


--M1L16 is reg_mux:inst27|en_f~10
M1L16 = H1L29 & M1L32;


--H1L73 is controller:inst8|Mux~38250
H1L73 = !G1_q[10] & !G1_q[9];


--H1L74 is controller:inst8|Mux~38251
H1L74 = !G1_q[12] & !G1_q[11];


--H1L75 is controller:inst8|Mux~38252
H1L75 = F1L4 & H1L73 & H1L74 & F1_output[2] # !F1L4 & (!F1_output[2]);


--H1L76 is controller:inst8|Mux~38253
H1L76 = H1L124 # F1_output[2] & H1L67 & !H1L30;


--H1L77 is controller:inst8|Mux~38254
H1L77 = H1L66 # H1L26 & H1L34 # !H1L26 & (!F1L2);


--H1L78 is controller:inst8|Mux~38255
H1L78 = G1_q[11] # !G1_q[8] & G1_q[9] & !G1_q[10];


--H1L79 is controller:inst8|Mux~38256
H1L79 = G1_q[14] & (!H1L78) # !G1_q[14] & G1_q[11] & !G1_q[10];


--H1L80 is controller:inst8|Mux~38257
H1L80 = G1_q[9] & !G1_q[12] & !G1_q[11] & !G1_q[10];


--H1L81 is controller:inst8|Mux~38258
H1L81 = H1L26 & (H1L125 # H1L61 & H1L79) # !H1L26 & H1L61 & H1L79;


--H1L82 is controller:inst8|Mux~38259
H1L82 = F1_state.s0 & !G1_q[11] & !F1_state.s1;


--H1L83 is controller:inst8|Mux~38260
H1L83 = !G1_q[12] & (F1_state.s4 # F1_state.s5 # !F1_state.s0);


--H1L84 is controller:inst8|Mux~38261
H1L84 = H1L83 & !G1_q[10] & (H1L41 # F1L2);


--H1L85 is controller:inst8|Mux~38262
H1L85 = G1_q[8] & (G1_q[14] # G1_q[9] & G1_q[10]) # !G1_q[8] & G1_q[14] & (G1_q[10] # !G1_q[9]);


--H1L86 is controller:inst8|Mux~38263
H1L86 = H1L82 & (H1L84 # H1L61 & H1L85);


--H1L87 is controller:inst8|Mux~38264
H1L87 = G1_q[6] & H1L68;


--H1L88 is controller:inst8|Mux~38265
H1L88 = G1_q[7] & H1L68;


--H1L89 is controller:inst8|Mux~38266
H1L89 = G1_q[4] & H1L68;


--H1L90 is controller:inst8|Mux~38267
H1L90 = G1_q[5] & H1L68;


--H1L91 is controller:inst8|Mux~38268
H1L91 = G1_q[10] & !G1_q[11] & (G1_q[8] $ G1_q[9]) # !G1_q[10] & G1_q[9] & (G1_q[8] $ !G1_q[11]);


--H1L92 is controller:inst8|Mux~38269
H1L92 = H1L61 & H1L91 & !G1_q[14];


--H1L93 is controller:inst8|Mux~38270
H1L93 = G1_q[9] & (!G1_q[10] & G1_q[11]) # !G1_q[9] & !G1_q[8] & G1_q[10] & !G1_q[11];


--H1L94 is controller:inst8|Mux~38271
H1L94 = H1L61 & H1L93 & !G1_q[14];


--H1L95 is controller:inst8|Mux~38272
H1L95 = G1_q[10] & (G1_q[8] & !G1_q[9] & G1_q[11] # !G1_q[8] & G1_q[9] & !G1_q[11]) # !G1_q[10] & (G1_q[8] $ (G1_q[11]));


--H1L96 is controller:inst8|Mux~38273
H1L96 = H1L61 & H1L95 & !G1_q[14];


--H1L97 is controller:inst8|Mux~38274
H1L97 = G1_q[6] & H1L61 & (G1_q[14] # G1_q[12]);


--H1L98 is controller:inst8|Mux~38275
H1L98 = G1_q[5] & H1L61 & (G1_q[14] # G1_q[12]);


--H1L99 is controller:inst8|Mux~38276
H1L99 = G1_q[4] & H1L61 & (G1_q[14] # G1_q[12]);


--H1L100 is controller:inst8|Mux~38277
H1L100 = G1_q[3] & H1L61 & (G1_q[14] # G1_q[12]);


--H1L101 is controller:inst8|Mux~38278
H1L101 = G1_q[2] & H1L61 & (G1_q[14] # G1_q[12]);


--H1L102 is controller:inst8|Mux~38279
H1L102 = G1_q[1] & H1L61 & (G1_q[14] # G1_q[12]);


--H1L103 is controller:inst8|Mux~38280
H1L103 = G1_q[0] & H1L61 & (G1_q[14] # G1_q[12]);


--H1L104 is controller:inst8|Mux~38281
H1L104 = G1_q[11] & G1_q[10] & H1L126 & !G1_q[9];


--H1L105 is controller:inst8|Mux~38282
H1L105 = H1L66 # F1L2 & (H1L26) # !F1L2 & (H1L34 # !H1L26);


--H1L106 is controller:inst8|Mux~38283
H1L106 = H1L124 # G1_q[11] & H1L73 & H1L126;


--F1_state.s2 is timer:inst6|state.s2
F1_state.s2 = DFFEAS(F1_state.s1, clk, reset,  ,  ,  ,  ,  ,  );


--F1L12 is timer:inst6|state~41
F1L12 = !A1L37 & F1_state.s2;


--F1L5 is timer:inst6|reduce_or~0
F1L5 = F1_state.s5 # F1_state.s3 # !F1_state.s0;


--F1L13 is timer:inst6|state~42
F1L13 = A1L37 & F1_state.s2;


--H1L107 is controller:inst8|Mux~38284
H1L107 = G1_q[8] & H1L50 & !G1_q[14] & !G1_q[11];


--H1L108 is controller:inst8|Mux~38285
H1L108 = G1_q[11] $ (!G1_q[8] & G1_q[9] & !G1_q[10]);


--H1L109 is controller:inst8|Mux~38286
H1L109 = H1L107 # G1_q[14] & !H1L108 # !H1L61;


--H1L110 is controller:inst8|Mux~38287
H1L110 = G1_q[8] & (G1_q[11]) # !G1_q[8] & (G1_q[10] & (G1_q[11]) # !G1_q[10] & G1_q[9]);


--H1L111 is controller:inst8|Mux~38288
H1L111 = H1L107 # G1_q[14] & !H1L110 # !H1L61;


--H1L112 is controller:inst8|Mux~38289
H1L112 = !F1L2 & F1L4 & (H1L80 # !F1_output[2]);


--H1L113 is controller:inst8|Mux~38290
H1L113 = F1L2 & (F1L4) # !F1L2 & (H1L34 # !F1L4 # !F1_output[2]);


--H1L114 is controller:inst8|Mux~38291
H1L114 = F1L4 & H1L74 & !G1_q[10] & F1_output[2] # !F1L4 & (!F1_output[2]);


--H1L115 is controller:inst8|Mux~38292
H1L115 = G1_q[11] & (G1_q[9] & G1_q[10]) # !G1_q[11] & G1_q[8] & (G1_q[9] $ G1_q[10]);


--H1L116 is controller:inst8|Mux~38293
H1L116 = !G1_q[14] & !F1_output[2] & !H1L115;


--H1L117 is controller:inst8|Mux~38294
H1L117 = !G1_q[10] & !G1_q[11] & (G1_q[8] $ G1_q[9]);


--H1L118 is controller:inst8|Mux~38295
H1L118 = F1L2 & (H1L116 # H1L83 & H1L117);


--H1L119 is controller:inst8|Mux~38296
H1L119 = G1_q[14] & !G1_q[15] & !G1_q[13] & !F1_output[2];


--H1L120 is controller:inst8|Mux~38297
H1L120 = H1L119 & (G1_q[8] & H1L53 # !G1_q[8] & (H1L55));


--H1L121 is controller:inst8|Mux~38298
H1L121 = H1L120 # F1_output[2] & H1L73 & !G1_q[8];


--H1L122 is controller:inst8|Mux~38299
H1L122 = F1L2 & (H1L74 & H1L121) # !F1L2 & H1L75;


--H1L123 is controller:inst8|Mux~38300
H1L123 = H1L26 # H1L66 # !F1_state.s5 & !F1_state.s3;


--H1L124 is controller:inst8|Mux~38301
H1L124 = !F1_state.s5 & !F1_state.s3 & H1L75;


--H1L125 is controller:inst8|Mux~38302
H1L125 = !F1_state.s5 & !F1_state.s3 & G1_q[8] & H1L80;


--H1L126 is controller:inst8|Mux~38303
H1L126 = !G1_q[14] & !F1_output[2] & (F1_state.s5 # F1_state.s3);


--H1L127 is controller:inst8|Mux~38304
H1L127 = !F1_state.s5 & !F1_state.s3 & H1L114;


--C1L10 is reg_testa:inst1|q[7]~30
C1L10 = !P1L1;


--H1_wr is controller:inst8|wr
H1_wr = H1L35 & H1L32 # !H1L35 & (H1_wr);


--H1_offset[7] is controller:inst8|offset[7]
H1_offset[7] = H1L123 & H1L62 # !H1L123 & (H1_offset[7]);


--H1_sour_reg[2] is controller:inst8|sour_reg[2]
H1_sour_reg[2] = H1L123 & H1L69 # !H1L123 & (H1_sour_reg[2]);


--H1_sour_reg[3] is controller:inst8|sour_reg[3]
H1_sour_reg[3] = H1L123 & H1L70 # !H1L123 & (H1_sour_reg[3]);


--H1_sour_reg[0] is controller:inst8|sour_reg[0]
H1_sour_reg[0] = H1L123 & H1L71 # !H1L123 & (H1_sour_reg[0]);


--H1_sour_reg[1] is controller:inst8|sour_reg[1]
H1_sour_reg[1] = H1L123 & H1L72 # !H1L123 & (H1_sour_reg[1]);


--H1_alu_in_sel[2] is controller:inst8|alu_in_sel[2]
H1_alu_in_sel[2] = H1L77 & H1L76 # !H1L77 & (H1_alu_in_sel[2]);


--H1_alu_in_sel[1] is controller:inst8|alu_in_sel[1]
H1_alu_in_sel[1] = H1L77 & H1L81 # !H1L77 & (H1_alu_in_sel[1]);


--H1_alu_in_sel[0] is controller:inst8|alu_in_sel[0]
H1_alu_in_sel[0] = H1L77 & H1L86 # !H1L77 & (H1_alu_in_sel[0]);


--H1_dest_reg[2] is controller:inst8|dest_reg[2]
H1_dest_reg[2] = H1L123 & H1L87 # !H1L123 & (H1_dest_reg[2]);


--H1_dest_reg[3] is controller:inst8|dest_reg[3]
H1_dest_reg[3] = H1L123 & H1L88 # !H1L123 & (H1_dest_reg[3]);


--H1_dest_reg[0] is controller:inst8|dest_reg[0]
H1_dest_reg[0] = H1L123 & H1L89 # !H1L123 & (H1_dest_reg[0]);


--H1_dest_reg[1] is controller:inst8|dest_reg[1]
H1_dest_reg[1] = H1L123 & H1L90 # !H1L123 & (H1_dest_reg[1]);


--H1_alu_func[1] is controller:inst8|alu_func[1]
H1_alu_func[1] = H1L123 & H1L92 # !H1L123 & (H1_alu_func[1]);


--H1_alu_func[2] is controller:inst8|alu_func[2]
H1_alu_func[2] = H1L123 & H1L94 # !H1L123 & (H1_alu_func[2]);


--H1_alu_func[0] is controller:inst8|alu_func[0]
H1_alu_func[0] = H1L123 & H1L96 # !H1L123 & (H1_alu_func[0]);


--H1_offset[6] is controller:inst8|offset[6]
H1_offset[6] = H1L123 & H1L97 # !H1L123 & (H1_offset[6]);


--H1_offset[5] is controller:inst8|offset[5]
H1_offset[5] = H1L123 & H1L98 # !H1L123 & (H1_offset[5]);


--H1_offset[4] is controller:inst8|offset[4]
H1_offset[4] = H1L123 & H1L99 # !H1L123 & (H1_offset[4]);


--H1_offset[3] is controller:inst8|offset[3]
H1_offset[3] = H1L123 & H1L100 # !H1L123 & (H1_offset[3]);


--H1_offset[2] is controller:inst8|offset[2]
H1_offset[2] = H1L123 & H1L101 # !H1L123 & (H1_offset[2]);


--H1_offset[1] is controller:inst8|offset[1]
H1_offset[1] = H1L123 & H1L102 # !H1L123 & (H1_offset[1]);


--H1_offset[0] is controller:inst8|offset[0]
H1_offset[0] = H1L123 & H1L103 # !H1L123 & (H1_offset[0]);


--H1_sci[1] is controller:inst8|sci[1]
H1_sci[1] = H1L105 & H1L104 # !H1L105 & (H1_sci[1]);


--H1_sci[0] is controller:inst8|sci[0]
H1_sci[0] = H1L105 & H1L106 # !H1L105 & (H1_sci[0]);


--H1_sst[1] is controller:inst8|sst[1]
H1_sst[1] = H1L123 & H1L109 # !H1L123 & (H1_sst[1]);


--H1_sst[0] is controller:inst8|sst[0]
H1_sst[0] = H1L123 & H1L111 # !H1L123 & (H1_sst[0]);


--H1_rec[1] is controller:inst8|rec[1]
H1_rec[1] = H1L113 & H1L112 # !H1L113 & (H1_rec[1]);


--H1_rec[0] is controller:inst8|rec[0]
H1_rec[0] = H1L113 & H1L127 # !H1L113 & (H1_rec[0]);


--H1_alu_out_sel[0] is controller:inst8|alu_out_sel[0]
H1_alu_out_sel[0] = H1L77 & H1L118 # !H1L77 & (H1_alu_out_sel[0]);


--H1_alu_out_sel[1] is controller:inst8|alu_out_sel[1]
H1_alu_out_sel[1] = H1L77 & H1L122 # !H1L77 & (H1_alu_out_sel[1]);


--reg_sel[3] is reg_sel[3]
--operation mode is input

reg_sel[3] = INPUT();


--reg_sel[1] is reg_sel[1]
--operation mode is input

reg_sel[1] = INPUT();


--reg_sel[2] is reg_sel[2]
--operation mode is input

reg_sel[2] = INPUT();


--sel[0] is sel[0]
--operation mode is input

sel[0] = INPUT();


--sel[1] is sel[1]
--operation mode is input

sel[1] = INPUT();


--reg_sel[0] is reg_sel[0]
--operation mode is input

reg_sel[0] = INPUT();


--clk is clk
--operation mode is input

clk = INPUT();


--reset is reset
--operation mode is input

reset = INPUT();


--wr is wr
--operation mode is output

wr = OUTPUT(H1_wr);


--c is c
--operation mode is output

c = OUTPUT(D1_flag_c);


--z is z
--operation mode is output

z = OUTPUT(D1_flag_z);


--v is v
--operation mode is output

v = OUTPUT(D1_flag_v);


--s is s
--operation mode is output

s = OUTPUT(D1_flag_s);


--address_bus[15] is address_bus[15]
--operation mode is output

address_bus[15] = OUTPUT(J1_q[15]);


--address_bus[14] is address_bus[14]
--operation mode is output

address_bus[14] = OUTPUT(J1_q[14]);


--address_bus[13] is address_bus[13]
--operation mode is output

address_bus[13] = OUTPUT(J1_q[13]);


--address_bus[12] is address_bus[12]
--operation mode is output

address_bus[12] = OUTPUT(J1_q[12]);


--address_bus[11] is address_bus[11]
--operation mode is output

address_bus[11] = OUTPUT(J1_q[11]);


--address_bus[10] is address_bus[10]
--operation mode is output

address_bus[10] = OUTPUT(J1_q[10]);


--address_bus[9] is address_bus[9]
--operation mode is output

address_bus[9] = OUTPUT(J1_q[9]);


--address_bus[8] is address_bus[8]
--operation mode is output

address_bus[8] = OUTPUT(J1_q[8]);


--address_bus[7] is address_bus[7]
--operation mode is output

address_bus[7] = OUTPUT(J1_q[7]);


--address_bus[6] is address_bus[6]
--operation mode is output

address_bus[6] = OUTPUT(J1_q[6]);


--address_bus[5] is address_bus[5]
--operation mode is output

address_bus[5] = OUTPUT(J1_q[5]);


--address_bus[4] is address_bus[4]
--operation mode is output

address_bus[4] = OUTPUT(J1_q[4]);


--address_bus[3] is address_bus[3]
--operation mode is output

address_bus[3] = OUTPUT(J1_q[3]);


--address_bus[2] is address_bus[2]
--operation mode is output

address_bus[2] = OUTPUT(J1_q[2]);


--address_bus[1] is address_bus[1]
--operation mode is output

address_bus[1] = OUTPUT(J1_q[1]);


--address_bus[0] is address_bus[0]
--operation mode is output

address_bus[0] = OUTPUT(J1_q[0]);


--reg3[15] is reg3[15]
--operation mode is output

reg3[15] = OUTPUT(L3_q[15]);


--reg3[14] is reg3[14]
--operation mode is output

reg3[14] = OUTPUT(L3_q[14]);


--reg3[13] is reg3[13]
--operation mode is output

reg3[13] = OUTPUT(L3_q[13]);


--reg3[12] is reg3[12]
--operation mode is output

reg3[12] = OUTPUT(L3_q[12]);


--reg3[11] is reg3[11]
--operation mode is output

reg3[11] = OUTPUT(L3_q[11]);


--reg3[10] is reg3[10]
--operation mode is output

reg3[10] = OUTPUT(L3_q[10]);


--reg3[9] is reg3[9]
--operation mode is output

reg3[9] = OUTPUT(L3_q[9]);


--reg3[8] is reg3[8]
--operation mode is output

reg3[8] = OUTPUT(L3_q[8]);


--reg3[7] is reg3[7]
--operation mode is output

reg3[7] = OUTPUT(L3_q[7]);


--reg3[6] is reg3[6]
--operation mode is output

reg3[6] = OUTPUT(L3_q[6]);


--reg3[5] is reg3[5]
--operation mode is output

reg3[5] = OUTPUT(L3_q[5]);


--reg3[4] is reg3[4]
--operation mode is output

reg3[4] = OUTPUT(L3_q[4]);


--reg3[3] is reg3[3]
--operation mode is output

reg3[3] = OUTPUT(L3_q[3]);


--reg3[2] is reg3[2]
--operation mode is output

reg3[2] = OUTPUT(L3_q[2]);


--reg3[1] is reg3[1]
--operation mode is output

reg3[1] = OUTPUT(L3_q[1]);


--reg3[0] is reg3[0]
--operation mode is output

reg3[0] = OUTPUT(L3_q[0]);


--reg_data[15] is reg_data[15]
--operation mode is output

reg_data[15] = OUTPUT(R1_reg_data[15]);


--reg_data[14] is reg_data[14]
--operation mode is output

reg_data[14] = OUTPUT(R1L265);


--reg_data[13] is reg_data[13]
--operation mode is output

reg_data[13] = OUTPUT(R1L246);


--reg_data[12] is reg_data[12]
--operation mode is output

reg_data[12] = OUTPUT(R1L229);


--reg_data[11] is reg_data[11]
--operation mode is output

reg_data[11] = OUTPUT(R1_reg_data[11]);


--reg_data[10] is reg_data[10]
--operation mode is output

reg_data[10] = OUTPUT(R1L195);


--reg_data[9] is reg_data[9]
--operation mode is output

reg_data[9] = OUTPUT(R1L178);


--reg_data[8] is reg_data[8]
--operation mode is output

reg_data[8] = OUTPUT(R1L161);


--reg_data[7] is reg_data[7]
--operation mode is output

reg_data[7] = OUTPUT(R1L144);


--reg_data[6] is reg_data[6]
--operation mode is output

reg_data[6] = OUTPUT(R1L122);


--reg_data[5] is reg_data[5]
--operation mode is output

reg_data[5] = OUTPUT(R1L105);


--reg_data[4] is reg_data[4]
--operation mode is output

reg_data[4] = OUTPUT(R1L88);


--reg_data[3] is reg_data[3]
--operation mode is output

reg_data[3] = OUTPUT(R1L71);


--reg_data[2] is reg_data[2]
--operation mode is output

reg_data[2] = OUTPUT(R1L54);


--reg_data[1] is reg_data[1]
--operation mode is output

reg_data[1] = OUTPUT(R1L37);


--reg_data[0] is reg_data[0]
--operation mode is output

reg_data[0] = OUTPUT(R1L20);


--A1L37 is data_bus~0
--operation mode is bidir

A1L37 = data_bus[15];

--data_bus[15] is data_bus[15]
--operation mode is bidir

data_bus[15]_tri_out = TRI(B1L170, !H1_wr);
data_bus[15] = BIDIR(data_bus[15]_tri_out);


--A1L38 is data_bus~1
--operation mode is bidir

A1L38 = data_bus[14];

--data_bus[14] is data_bus[14]
--operation mode is bidir

data_bus[14]_tri_out = TRI(J1L45, !H1_wr);
data_bus[14] = BIDIR(data_bus[14]_tri_out);


--A1L39 is data_bus~2
--operation mode is bidir

A1L39 = data_bus[13];

--data_bus[13] is data_bus[13]
--operation mode is bidir

data_bus[13]_tri_out = TRI(J1L42, !H1_wr);
data_bus[13] = BIDIR(data_bus[13]_tri_out);


--A1L40 is data_bus~3
--operation mode is bidir

A1L40 = data_bus[12];

--data_bus[12] is data_bus[12]
--operation mode is bidir

data_bus[12]_tri_out = TRI(J1L39, !H1_wr);
data_bus[12] = BIDIR(data_bus[12]_tri_out);


--A1L41 is data_bus~4
--operation mode is bidir

A1L41 = data_bus[11];

--data_bus[11] is data_bus[11]
--operation mode is bidir

data_bus[11]_tri_out = TRI(J1L36, !H1_wr);
data_bus[11] = BIDIR(data_bus[11]_tri_out);


--A1L42 is data_bus~5
--operation mode is bidir

A1L42 = data_bus[10];

--data_bus[10] is data_bus[10]
--operation mode is bidir

data_bus[10]_tri_out = TRI(J1L33, !H1_wr);
data_bus[10] = BIDIR(data_bus[10]_tri_out);


--A1L43 is data_bus~6
--operation mode is bidir

A1L43 = data_bus[9];

--data_bus[9] is data_bus[9]
--operation mode is bidir

data_bus[9]_tri_out = TRI(J1L30, !H1_wr);
data_bus[9] = BIDIR(data_bus[9]_tri_out);


--A1L44 is data_bus~7
--operation mode is bidir

A1L44 = data_bus[8];

--data_bus[8] is data_bus[8]
--operation mode is bidir

data_bus[8]_tri_out = TRI(J1L27, !H1_wr);
data_bus[8] = BIDIR(data_bus[8]_tri_out);


--A1L45 is data_bus~8
--operation mode is bidir

A1L45 = data_bus[7];

--data_bus[7] is data_bus[7]
--operation mode is bidir

data_bus[7]_tri_out = TRI(J1L24, !H1_wr);
data_bus[7] = BIDIR(data_bus[7]_tri_out);


--A1L46 is data_bus~9
--operation mode is bidir

A1L46 = data_bus[6];

--data_bus[6] is data_bus[6]
--operation mode is bidir

data_bus[6]_tri_out = TRI(J1L21, !H1_wr);
data_bus[6] = BIDIR(data_bus[6]_tri_out);


--A1L47 is data_bus~10
--operation mode is bidir

A1L47 = data_bus[5];

--data_bus[5] is data_bus[5]
--operation mode is bidir

data_bus[5]_tri_out = TRI(J1L18, !H1_wr);
data_bus[5] = BIDIR(data_bus[5]_tri_out);


--A1L48 is data_bus~11
--operation mode is bidir

A1L48 = data_bus[4];

--data_bus[4] is data_bus[4]
--operation mode is bidir

data_bus[4]_tri_out = TRI(J1L15, !H1_wr);
data_bus[4] = BIDIR(data_bus[4]_tri_out);


--A1L49 is data_bus~12
--operation mode is bidir

A1L49 = data_bus[3];

--data_bus[3] is data_bus[3]
--operation mode is bidir

data_bus[3]_tri_out = TRI(J1L12, !H1_wr);
data_bus[3] = BIDIR(data_bus[3]_tri_out);


--A1L50 is data_bus~13
--operation mode is bidir

A1L50 = data_bus[2];

--data_bus[2] is data_bus[2]
--operation mode is bidir

data_bus[2]_tri_out = TRI(J1L9, !H1_wr);
data_bus[2] = BIDIR(data_bus[2]_tri_out);


--A1L51 is data_bus~14
--operation mode is bidir

A1L51 = data_bus[1];

--data_bus[1] is data_bus[1]
--operation mode is bidir

data_bus[1]_tri_out = TRI(J1L6, !H1_wr);
data_bus[1] = BIDIR(data_bus[1]_tri_out);


--A1L52 is data_bus~15
--operation mode is bidir

A1L52 = data_bus[0];

--data_bus[0] is data_bus[0]
--operation mode is bidir

data_bus[0]_tri_out = TRI(B1L120, !H1_wr);
data_bus[0] = BIDIR(data_bus[0]_tri_out);


